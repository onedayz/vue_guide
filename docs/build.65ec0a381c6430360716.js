(function(e){function t(t){for(var s,l,a=t[0],i=t[1],j=t[2],O=0,o=[];O<a.length;O++)l=a[O],Object.prototype.hasOwnProperty.call(b,l)&&b[l]&&o.push(b[l][0]),b[l]=0;for(s in i)Object.prototype.hasOwnProperty.call(i,s)&&(e[s]=i[s]);r&&r(t);while(o.length)o.shift()();return n.push.apply(n,j||[]),c()}function c(){for(var e,t=0;t<n.length;t++){for(var c=n[t],s=!0,a=1;a<c.length;a++){var i=c[a];0!==b[i]&&(s=!1)}s&&(n.splice(t--,1),e=l(l.s=c[0]))}return e}var s={},b={index:0},n=[];function l(t){if(s[t])return s[t].exports;var c=s[t]={i:t,l:!1,exports:{}};return e[t].call(c.exports,c,c.exports,l),c.l=!0,c.exports}l.m=e,l.c=s,l.d=function(e,t,c){l.o(e,t)||Object.defineProperty(e,t,{enumerable:!0,get:c})},l.r=function(e){"undefined"!==typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},l.t=function(e,t){if(1&t&&(e=l(e)),8&t)return e;if(4&t&&"object"===typeof e&&e&&e.__esModule)return e;var c=Object.create(null);if(l.r(c),Object.defineProperty(c,"default",{enumerable:!0,value:e}),2&t&&"string"!=typeof e)for(var s in e)l.d(c,s,function(t){return e[t]}.bind(null,s));return c},l.n=function(e){var t=e&&e.__esModule?function(){return e["default"]}:function(){return e};return l.d(t,"a",t),t},l.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},l.p="/";var a=window["webpackJsonp"]=window["webpackJsonp"]||[],i=a.push.bind(a);a.push=t,a=a.slice();for(var j=0;j<a.length;j++)t(a[j]);var r=i;n.push([0,"chunk-vendors"]),c()})({0:function(e,t,c){e.exports=c("56d7")},"01ba":function(e,t,c){e.exports=c.p+"assets/img/vuex_actions.631fbdd6.jpg"},"01f2":function(e,t,c){e.exports=c.p+"assets/img/resolve_detail.d9127d3b.jpg"},"051b":function(e,t,c){e.exports=c.p+"assets/img/vue_template_v_model.f92166af.jpg"},"0b53":function(e,t,c){e.exports=c.p+"assets/img/package_dev.6a867c2a.jpg"},"0c7f":function(e,t,c){e.exports=c.p+"assets/img/component_tree.2c6ed106.jpg"},"0e2e":function(e,t,c){e.exports=c.p+"assets/img/v_for.2a07e55b.jpg"},"0f15":function(e,t,c){"use strict";c("12ee")},"105e":function(e,t,c){e.exports=c.p+"assets/img/script_watch.817ce32f.jpg"},"11d4":function(e,t,c){},"12ee":function(e,t,c){},"131f":function(e,t,c){e.exports=c.p+"assets/img/nodejs_lts.c1cf4990.jpg"},1418:function(e,t,c){e.exports=c.p+"assets/img/axios_post.4ec3e809.jpg"},"151a":function(e,t,c){e.exports=c.p+"assets/img/script_computed.5b1d241d.jpg"},1588:function(e,t,c){e.exports=c.p+"assets/img/simple_index_html.027316d5.jpg"},"17b7":function(e,t,c){},"19b4":function(e,t,c){e.exports=c.p+"assets/img/import_component_custom.b3f46673.jpg"},"24f3":function(e,t,c){},2862:function(e,t,c){e.exports=c.p+"assets/img/component_v_model.6f828f15.jpg"},"296f":function(e,t,c){"use strict";c("5f9c")},"2a3f":function(e,t,c){"use strict";c("11d4")},"2b2e":function(e,t,c){e.exports=c.p+"assets/img/output_detail.e570d248.jpg"},"2b9a":function(e,t,c){e.exports=c.p+"assets/img/vue_template_style_computed.9627febb.jpg"},"30c1":function(e,t,c){e.exports=c.p+"assets/img/scss_order.089d9760.jpg"},"30db":function(e,t,c){e.exports=c.p+"assets/img/entry.a204ad36.jpg"},"35d5":function(e,t,c){"use strict";c("24f3")},3637:function(e,t,c){e.exports=c.p+"assets/img/style_scoped.fd4f7f42.jpg"},"374f":function(e,t,c){e.exports=c.p+"assets/img/component_emit.57295405.jpg"},"375c":function(e,t,c){e.exports=c.p+"assets/img/entry_router.5debd6e1.jpg"},"37d8":function(e,t,c){e.exports=c.p+"assets/img/style_lang.2980f95f.jpg"},"3aff":function(e,t,c){e.exports=c.p+"assets/img/vue_graph.202076ad.jpg"},"3c9b":function(e,t,c){e.exports=c.p+"assets/img/module_detail.d627a739.jpg"},"3d97":function(e,t,c){},4084:function(e,t,c){e.exports=c.p+"assets/img/script_javascript_import.1f6a59b9.jpg"},4102:function(e,t,c){},4415:function(e,t,c){e.exports=c.p+"assets/img/router_detail.bea3eab5.jpg"},4595:function(e,t,c){e.exports=c.p+"assets/img/scss_ampersand.366ddeaf.jpg"},"47cd":function(e,t,c){e.exports=c.p+"assets/img/biscuit.eb6dd705.png"},"497f":function(e,t,c){e.exports=c.p+"assets/img/store_package_json.23babd3d.jpg"},"4e94":function(e,t,c){e.exports=c.p+"assets/img/root_components.93fcc0a4.jpg"},5035:function(e,t,c){e.exports=c.p+"assets/img/import_axios.4fe487b3.jpg"},5145:function(e,t,c){e.exports=c.p+"assets/img/vuex_default.7144570e.jpg"},5661:function(e){e.exports=JSON.parse('[{"id":"vue","idx":0,"parentId":"root","name":"Root","depth":1,"hasChild":true,"url":"/","children":[{"id":"vue.setting","idx":1,"parentId":"vue","name":"0. Vue.js 개발환경 설정","depth":2,"hasChild":false,"url":"/set"},{"id":"vue.overview","idx":2,"parentId":"vue","name":"1. Overview","depth":2,"hasChild":false,"url":"/overview"},{"id":"vue.base","idx":3,"parentId":"vue","name":"2. 기본 개념","depth":2,"hasChild":true,"url":"/base","children":[{"id":"vue.base.mandatory","idx":31,"parentId":"vue.base","name":"2-1. 필수 개념","depth":3,"hasChild":true,"url":"/base/mandatory","children":[{"id":"vue.base.mandatory.spa","idx":311,"parentId":"vue.base.mandatory","name":"2-1-1. SPA","depth":4,"hasChild":false,"url":"/base/mandatory/spa"},{"id":"vue.base.mandatory.webpack","idx":312,"parentId":"vue.base.mandatory","name":"2-1-2. Webpack","depth":4,"hasChild":false,"url":"/base/mandatory/webpack"},{"id":"vue.base.mandatory.npm","idx":313,"parentId":"vue.base.mandatory","name":"2-1-3. Npm","depth":4,"hasChild":false,"url":"/base/mandatory/npm"}]},{"id":"vue.base.optional","idx":32,"parentId":"vue.base","name":"2-2. 선택 개념","depth":3,"hasChild":true,"url":"/base/optional","children":[{"id":"vue.base.optional.scss","idx":321,"parentId":"vue.base.optional","name":"2-2-1. SCSS","depth":3,"hasChild":false,"url":"/base/optional/scss"}]}]},{"id":"vue.skill","idx":4,"parentId":"vue","name":"3. Vue.js 활용하기","depth":2,"hasChild":true,"url":"/skill","children":[{"id":"vue.skill.architecture","idx":41,"parentId":"vue.skill","name":"3-1. Architecture","depth":3,"hasChild":false,"url":"/skill/architecture"},{"id":"vue.skill.router","idx":42,"parentId":"vue.skill","name":"3-2. Router","depth":3,"hasChild":false,"url":"/skill/router"},{"id":"vue.skill.axios","idx":43,"parentId":"vue.skill","name":"3-3. Axios(ajax)","depth":3,"hasChild":false,"url":"/skill/axios"},{"id":"vue.skill.structure","idx":44,"parentId":"vue.skill","name":"3-4. Vue File Structure","depth":3,"hasChild":true,"url":"/skill/structure","children":[{"id":"vue.skill.structure.summary","idx":441,"parentId":"vue.skill.structure","name":"3-4-1. Summary","depth":4,"hasChild":false,"url":"/skill/structure/summary"},{"id":"vue.skill.structure.template","idx":442,"parentId":"vue.skill.structure","name":"3-4-2. template","depth":4,"hasChild":false,"url":"/skill/structure/template"},{"id":"vue.skill.structure.script","idx":443,"parentId":"vue.skill.structure","name":"3-4-3. script","depth":4,"hasChild":false,"url":"/skill/structure/script"},{"id":"vue.skill.structure.style","idx":444,"parentId":"vue.skill.structure","name":"3-4-4. style","depth":4,"hasChild":false,"url":"/skill/structure/style"}]},{"id":"vue.skill.component","idx":45,"parentId":"vue.skill","name":"3-5. Component","depth":3,"hasChild":true,"url":"/skill/component","children":[{"id":"vue.skill.structure.summary","idx":451,"parentId":"vue.skill.component","name":"3-5-1. Summary","depth":4,"hasChild":false,"url":"/skill/component/summary"},{"id":"vue.skill.structure.custom","idx":452,"parentId":"vue.skill.component","name":"3-5-2. Custom","depth":4,"hasChild":false,"url":"/skill/component/custom"}]},{"id":"vue.skill.store","idx":46,"parentId":"vue.skill","name":"3-6. Store(Vuex)","depth":3,"hasChild":false,"url":"/skill/store"}]},{"id":"vue.trouble","idx":5,"parentId":"vue","name":"4. Trouble Shooting","depth":2,"hasChild":true,"url":"/trouble","children":[{"id":"vue.trouble.memory","idx":51,"parentId":"vue.trouble","name":"4-1. Memory leak","depth":3,"hasChild":false,"url":"/trouble/memory"},{"id":"vue.trouble.performance","idx":51,"parentId":"vue.trouble","name":"4-2. Performance","depth":3,"hasChild":false,"url":"/trouble/performance"}]},{"id":"vue.starter","idx":-1,"parentId":"vue","name":"-1. 별첨 : Vue 스타터 프로젝트","depth":2,"hasChild":true,"url":"/starter","children":[{"id":"vue.starter.install","idx":-11,"parentId":"vue.starter","name":"-1+1. 일단 서버켜기","depth":3,"hasChild":false,"url":"/starter/install"},{"id":"vue.starter.directory","idx":-12,"parentId":"vue.starter","name":"-1+2. 프로젝트 헤쳐보기","depth":3,"hasChild":false,"url":"/starter/directory"},{"id":"vue.starter.playground","idx":-13,"parentId":"vue.starter","name":"-1+3. 가지고 놀기","depth":3,"hasChild":false,"url":"/starter/playground"}]}]}]')},"56d7":function(e,t,c){"use strict";c.r(t);c("e260"),c("e6cf"),c("cca6"),c("a79d");var s=c("f2bf"),b=Object(s["F"])("data-v-6375add6");Object(s["t"])("data-v-6375add6");var n={class:"app-main"};Object(s["r"])();var l=b((function(e,t,c,b,l,a){var i=Object(s["y"])("router-view"),j=Object(s["y"])("side-frame");return Object(s["q"])(),Object(s["d"])("div",n,[Object(s["h"])("div",{class:["app-content",{folding:l.foldable}]},[Object(s["h"])(i)],2),Object(s["h"])(j,{foldable:l.foldable,onToggle:a.toggleSide},null,8,["foldable","onToggle"])])})),a=Object(s["F"])("data-v-298ceab3");Object(s["t"])("data-v-298ceab3");var i=Object(s["h"])("h2",null,"Vue.js Guide",-1),j=Object(s["h"])("span",{class:"presented-label"},"presented by Grey",-1);Object(s["r"])();var r=a((function(e,t,c,b,n,l){var a=Object(s["y"])("toy-icon"),r=Object(s["y"])("menu-frame");return Object(s["q"])(),Object(s["d"])("div",{class:["lnb-frame",{folding:c.foldable}]},[Object(s["h"])("div",{class:"title",onClick:t[1]||(t[1]=function(t){return e.$router.push("/home")})},[i]),Object(s["h"])(a,{class:"folding-icon",icon:"angle-up",size:"18",onClick:l.toggleSide},null,8,["onClick"]),j,Object(s["h"])(r)],2)})),O=Object(s["F"])("data-v-7e22c36b");Object(s["t"])("data-v-7e22c36b");var o={class:"menu-frame"};Object(s["r"])();var u=O((function(e,t,c,b,n,l){var a=Object(s["y"])("menu-unit");return Object(s["q"])(),Object(s["d"])("div",o,[Object(s["h"])(a,{menus:n.menuData[0].children},null,8,["menus"])])})),h=(c("b0c0"),Object(s["F"])("data-v-9324c592")),p=h((function(e,t,c,b,n,l){var a=Object(s["y"])("toy-icon"),i=Object(s["y"])("_self");return Object(s["q"])(!0),Object(s["d"])(s["a"],null,Object(s["w"])(c.menus,(function(t){return Object(s["q"])(),Object(s["d"])("div",{class:"menu-unit",key:t.id},[Object(s["h"])("div",{class:["menu-name",["menu-name__depth-"+c.depth,e.$route.path===t.url?"current-menu":""]],onClick:function(e){return t.hasChild?l.toggleMenu(t.idx):l.moveTo(t.url)}},[Object(s["g"])(Object(s["A"])(t.name)+" ",1),t.hasChild?(Object(s["q"])(),Object(s["d"])(a,{key:0,class:["folding-icon","menu-folding__"+t.idx],icon:"angle-up",size:"12"},null,8,["class"])):Object(s["e"])("",!0)],10,["onClick"]),t.hasChild?(Object(s["q"])(),Object(s["d"])("div",{key:0,class:["menu-child","menu-child__"+t.idx]},[Object(s["h"])(i,{menus:t.children,depth:t.depth},null,8,["menus","depth"])],2)):Object(s["e"])("",!0)])})),128)})),d=(c("a9e3"),{name:"menuUnit",props:{menus:{type:[Array,Object],default:function(){}},depth:{type:Number,default:1}},computed:{nameClazz:function(){return["menu-name__depth-"+this.depth]}},data:function(){return{foldable:!0}},methods:{toggleMenu:function(e){var t=document.getElementsByClassName("menu-folding__"+e)[0];t.style["transform"]="rotate(180deg)"!==t.style["transform"]?"rotate(180deg)":"";var c=document.getElementsByClassName("menu-child__"+e)[0];c.style["opacity"]="0"!==c.style["opacity"]?"0":"1",c.style["max-height"]="0px"!==c.style["max-height"]?"0px":"1000px",c.style["pointer-events"]="none"!==c.style["pointer-events"]?"none":""},moveTo:function(e){this.$router.push(e)}}});c("2a3f");d.render=p,d.__scopeId="data-v-9324c592";var g=d,v=c("5661"),m={name:"menuFrame",components:{menuUnit:g},props:{menus:{type:Array,default:function(){return[]}}},data:function(){return{menuData:v}},methods:{moveTo:function(e){this.$router.push(e)}}};c("296f"),c("6acb");m.render=u,m.__scopeId="data-v-7e22c36b";var x=m,f={components:{menuFrame:x},props:{foldable:{type:Boolean,default:!1}},data:function(){return{}},methods:{toggleSide:function(){this.$emit("toggle")},moveTo:function(e){this.$router.push(e)}}};c("692c");f.render=r,f.__scopeId="data-v-298ceab3";var y=f,S={name:"App",components:{sideFrame:y},data:function(){return{foldable:!1}},methods:{toggleSide:function(){this.foldable=!this.foldable}}};c("d4fa"),c("8898");S.render=l,S.__scopeId="data-v-6375add6";var V=S,k=c("6c02"),_=c("cf05"),w=c.n(_),A=Object(s["F"])("data-v-15d51021");Object(s["t"])("data-v-15d51021");var C={class:"home content-page"},M=Object(s["h"])("img",{src:w.a},null,-1),R=Object(s["h"])("p",null,[Object(s["h"])("b",null,"Vue.js"),Object(s["g"])("는 프론트엔드 UI 프레임워크입니다.")],-1);Object(s["r"])();var L=A((function(e,t,c,b,n,l){return Object(s["q"])(),Object(s["d"])("div",C,[M,R])})),I={name:"home",setup:function(){var e=Object(k["c"])(),t=function(t){e.push(t)};return{moveTo:t}}};c("693e");I.render=L,I.__scopeId="data-v-15d51021";var $=I,P=c("131f"),T=c.n(P),D=c("583f"),H=c.n(D),U=Object(s["F"])("data-v-0dc9252e");Object(s["t"])("data-v-0dc9252e");var F={class:"set-page content-page"},q=Object(s["h"])("div",{class:"main-title"},[Object(s["h"])("span",{class:"index"},"0."),Object(s["g"])(" Vue.js 개발환경 설정")],-1),J=Object(s["h"])("hr",null,null,-1),E=Object(s["h"])("div",{class:"content-box"},[Object(s["h"])("div",{class:"sub-title"},[Object(s["h"])("span",{class:"index"},"1."),Object(s["g"])(" 호환성 정보")]),Object(s["h"])("div",{class:"content-level-1"},[Object(s["h"])("p",null,[Object(s["g"])(" Vue는 최소스펙으로 ECMAScript 5에 기초하기 때문에 IE8 이하 버전을 지원하지 않습니다."),Object(s["h"])("br"),Object(s["g"])(" 그외 대부분의 웹 브라우져를 지원하며, 상세 내역은 "),Object(s["h"])("a",{href:"https://caniuse.com/es5",target:"_blank"},"ECMAScript 5 호환 브라우저 목록"),Object(s["g"])("에서 확인하실 수 있습니다")])])],-1),N=Object(s["h"])("div",{class:"content-box"},[Object(s["h"])("div",{class:"sub-title"},[Object(s["h"])("span",{class:"index"},"2."),Object(s["g"])(" Node.js")]),Object(s["h"])("div",{class:"content-level-1"},[Object(s["h"])("p",{class:"third-title"},[Object(s["h"])("span",{class:"index"},"#01."),Object(s["g"])(" Summary")]),Object(s["h"])("p",null," Node.js는 Java가 Virtual Machine을 바탕으로 OS에 종속되지않고 Runtime을 구동하듯이 웹브라우저에 종속적인 자바스크립트를 외부에서 실행할 수 있는 Runtime 환경을 제공하는 역할을 합니다. Chrome V8 엔진을 기반으로 동작하며 실제 개발하실 때 주로 사용되는 역할은 아래와 같습니다. "),Object(s["h"])("div",{class:"gray-box"},[Object(s["h"])("p",null,"1) 프론트엔드 개발에 필요한 라이브러리를 설치합니다."),Object(s["h"])("p",null,"2) 디버깅이 가능한 프론트엔드 개발용 서버를 별도로 띄울 수 있습니다."),Object(s["h"])("p",null,"3) Webpack와 같은 모듈 번들러와 함께 운영레벨에서 배포시 필요한 클라이언트 파일들을 빌드해줍니다.")])]),Object(s["h"])("div",{class:"content-level-1"},[Object(s["h"])("p",{class:"third-title"},[Object(s["h"])("span",{class:"index"},"#02."),Object(s["g"])(" 설치하기")]),Object(s["h"])("div",{class:"content-level-2"},[Object(s["h"])("p",{class:"fourth-title"},"1) 다운로드"),Object(s["h"])("p",null,[Object(s["h"])("a",{href:"https://nodejs.org/ko/",target:"_blank"},"Node.js 페이지"),Object(s["g"])("로 접속합니다.")]),Object(s["h"])("p",null,"아래와 같이 첫 페이지에서 다운로드 기능을 제공하고 있으며 본인의 OS와 bit를 확인하여 알맞는 LTS버전을 다운받기를 추천드립니다."),Object(s["h"])("div",{class:"image-box"},[Object(s["h"])("img",{src:T.a}),Object(s["h"])("span",{class:"under-text"},"[2021/03/22 기준 LTS 버전은 14.16.0]")])]),Object(s["h"])("div",{class:"content-level-2"},[Object(s["h"])("p",{class:"fourth-title"},"2) 설치"),Object(s["h"])("p",null,"Windows OS 기준으로 msi 파일이 다운로드되며, 실행하여 설치해줍니다.")]),Object(s["h"])("div",{class:"content-level-2"},[Object(s["h"])("p",{class:"fourth-title"},"3) 확인"),Object(s["h"])("p",null,"설치 확인은 cmd 창을 통해 아래 2개 명령어를 실행함으로써 확인하실 수 있습니다."),Object(s["h"])("p",null,"※ node와 npm의 버전은 각각 차이가 나는 게 맞습니다"),Object(s["h"])("div",{class:"gray-box"},[Object(s["h"])("p",null,"node --version "),Object(s["h"])("p",null,"npm --version ")]),Object(s["h"])("div",{class:"image-box"},[Object(s["h"])("img",{src:H.a}),Object(s["h"])("span",{class:"under-text"},"[version option 명령어 실행결과]")])])])],-1),W=Object(s["h"])("hr",null,null,-1),z=Object(s["h"])("div",{class:"content-box"},[Object(s["h"])("div",{class:"sub-title"},[Object(s["h"])("span",{class:"index"},"-1."),Object(s["g"])(" 별첨")]),Object(s["h"])("div",{class:"content-level-1"},[Object(s["h"])("p",{class:"third-title"},[Object(s["h"])("span",{class:"index"},"#01."),Object(s["g"])(" Node.js 관련 이슈")]),Object(s["h"])("div",{class:"content-level-2"},[Object(s["h"])("p",{class:"fourth-title"},"1) git에서 git:// 프로토콜로 실행이 안 될 경우"),Object(s["h"])("p",null,"해당 내용의 경우 npm이 아닌 git의 설정을 아래와 같이 변경해주어야 한다."),Object(s["h"])("div",{class:"gray-box"},[Object(s["h"])("p",null,"git config --global url.https://github.com/.insteadOf git://github.com/"),Object(s["h"])("p",null,"git config --global url.https://github.com/.insteadOf git://github.com/")])])])],-1),B=Object(s["h"])("hr",null,null,-1),G={class:"bottom-navigation"},K=Object(s["g"])(" 1. Overview    ");Object(s["r"])();var Y=U((function(e,t,c,b,n,l){var a=Object(s["y"])("toy-icon");return Object(s["q"])(),Object(s["d"])("div",F,[q,J,E,N,W,z,B,Object(s["h"])("div",G,[Object(s["h"])("div",{class:"right",onClick:t[1]||(t[1]=function(t){return e.$router.push("/overview")})},[K,Object(s["h"])(a,{icon:"arrow-right"})])])])})),Q={name:"set"};Q.render=Y,Q.__scopeId="data-v-0dc9252e";var X=Q,Z=c("3aff"),ee=c.n(Z),te=c("9523"),ce=c.n(te),se=c("6cb9"),be=c.n(se),ne=c("8df1"),le=c.n(ne),ae=Object(s["F"])("data-v-5b9722fc");Object(s["t"])("data-v-5b9722fc");var ie={class:"overview-page content-page"},je=Object(s["h"])("div",{class:"main-title"},[Object(s["h"])("span",{class:"index"},"1."),Object(s["g"])(" Overview")],-1),re=Object(s["h"])("hr",null,null,-1),Oe=Object(s["h"])("div",{class:"content-box"},[Object(s["h"])("div",{class:"sub-title"},[Object(s["h"])("span",{class:"index"},"1."),Object(s["g"])(" about Vue.js")]),Object(s["h"])("div",{class:"content-level-1"},[Object(s["h"])("p",null,[Object(s["g"])(" Vue는 구글 출신 개발자인 Evan You에 의해 만들어진 프론트엔드 프레임워크 라이브러리입니다."),Object(s["h"])("br"),Object(s["g"])(" 웹 애플리케이션의 클라이언트(사용자 인터페이스) 개발을 위해 사용되는 오픈 소스이며, 자바스크립트를 기반으로 한 프레임워크입니다. 구글에서 Angular를 사용해 개발하던 Evan You는 ANgular의 장점만을 추출하여 정리한 뒤에, 기능을 추가하면서도 "),Object(s["h"])("b",null,"가벼운"),Object(s["g"])(" 프레임워크를 만들기를 희망했으며 그것이 Vue를 개발하게 된 동기라고 했습니다. "),Object(s["h"])("br"),Object(s["h"])("br"),Object(s["g"])(" 2014년에 릴리즈 된 Vue의 1.x 버전은 Angular와 React에 비해 그렇게 큰 이목을 끌지 못 하였으나, "),Object(s["h"])("br"),Object(s["g"])(" 2016년에 릴리즈 한 "),Object(s["h"])("b",null,"2.x 버전부터 Virtual DOM을 도입"),Object(s["g"])("하고 이전 버전에 비해 많은 부분이 개선되면서 "),Object(s["h"])("br"),Object(s["g"])(" 2021년인 현재는 React와 함께 프론트엔드 프레임워크 시장을 양분하는 라이브러리로 자리잡게 되었습니다."),Object(s["h"])("br"),Object(s["g"])(" (2020년 9월에 Vue.js 3.0 버전이 릴리즈 되었습니다) ")])])],-1),oe=Object(s["h"])("div",{class:"content-box"},[Object(s["h"])("div",{class:"sub-title"},[Object(s["h"])("span",{class:"index"},"2."),Object(s["g"])(" vs React & Angular")]),Object(s["h"])("div",{class:"content-level-1"},[Object(s["h"])("p",null," Vue가 구글출신 개발자에 의해 만들어졌다면 Angular는 구글에서 만들어진 프론트엔드 프레임워크 라이브러리이며 React는 Facebook에서 만든 프론트엔드 프레임워크 라이브러리입니다. "),Object(s["h"])("div",{class:"image-box"},[Object(s["h"])("img",{src:ee.a}),Object(s["h"])("span",{class:"under-text"},"[ Github의 Star 지수 : Vue, React, Angular ]")]),Object(s["h"])("p",null,[Object(s["g"])(" 많은 영역에서 Vue가 좋은지 React가 좋은지에 대한 의견이 분분하지만, Github Star 지표를 비롯하여 성능적인 지표에서 둘은 크게 차이가 나지 않습니다 (사실상 Angular는 현재로써 이 둘과는 격차가 많이 벌어져있습니다)"),Object(s["h"])("br"),Object(s["h"])("br"),Object(s["g"])(" 아래 글은 프로덕션 앱의 성능을 테스트하는 회사인 logrocket의 블로그에 올라온 포스팅에서 발췌했습니다."),Object(s["h"])("br"),Object(s["g"])(" (원본 포스팅 "),Object(s["h"])("a",{href:"https://blog.logrocket.com/angular-vs-react-vs-vue-a-performance-comparison/",target:"_blank"},"바로가기"),Object(s["g"])(" ) ")])]),Object(s["h"])("div",{class:"content-level-1"},[Object(s["h"])("p",{class:"third-title"},[Object(s["h"])("span",{class:"index"},"#01."),Object(s["g"])(" DOM을 수정 할 경우")]),Object(s["h"])("div",{class:"image-box"},[Object(s["h"])("img",{src:ce.a}),Object(s["h"])("span",{class:"under-text"},"[ DOM manipulation ]")]),Object(s["h"])("p",null,[Object(s["g"])(" 이 지표에서는 Angular가 React와 Vue보다 앞서는 의외의 결과를 보여줍니다."),Object(s["h"])("br"),Object(s["g"])(" 해당 테스팅은 화면에 렌더링 된 DOM 객체에 대한 조작과 관련된 사항을 테스트한 내용으로써 그려진 Row를 선택하거나 Row의 위치를 바꿔보거나, 10,000개의 Row를 생성하는 것과 같은 점을 테스트한 사항입니다. "),Object(s["h"])("br"),Object(s["h"])("br"),Object(s["g"])(" 물론, Angular가 React, Vue에 비해 월등할 정도의 퍼포먼스를 보이는 것은 아니며 React와 Vue 또한 어느 한 쪽이 확연히 뛰어나다기보다 엎치락 뒤치락하는 결과를 보여주고 있습니다. ")])]),Object(s["h"])("div",{class:"content-level-1"},[Object(s["h"])("p",{class:"third-title"},[Object(s["h"])("span",{class:"index"},"#02."),Object(s["g"])(" Startup time")]),Object(s["h"])("div",{class:"image-box"},[Object(s["h"])("img",{src:be.a}),Object(s["h"])("span",{class:"under-text"},"[ Startup time ]")]),Object(s["h"])("p",null," 웹 어플리케이션을 최초 로딩할 때와 관련된 지표를 측정한 결과입니다. Angular의 경우 해당 지표부터 React와 Vue에 비해 퍼포먼스가 떨어지는 것이 나타나는데, 대표적으로 스크립트의 준비(bootup) 시간이 3배 이상 차이가 나는 것을 보실 수 있습니다. Vue와 React 간에는 Vue가 모든 지표에서 우세하긴하나 절대적일만큼의 확연한 차이는 나지 않습니다. ")]),Object(s["h"])("div",{class:"content-level-1"},[Object(s["h"])("p",{class:"third-title"},[Object(s["h"])("span",{class:"index"},"#03."),Object(s["g"])(" 메모리 할당")]),Object(s["h"])("div",{class:"image-box"},[Object(s["h"])("img",{src:le.a}),Object(s["h"])("span",{class:"under-text"},"[ Memory allocation ]")]),Object(s["h"])("p",null," Angular가 확실히 뒤쳐지는 것이 지표로 드러나며, Vue와 React구도에서도 Vue가 우세한 퍼포먼스를 보임을 알 수 있습니다. ")])],-1),ue=Object(s["h"])("hr",null,null,-1),he={class:"bottom-navigation"},pe=Object(s["g"])("    1. Vue.js 개발환경 설정 "),de=Object(s["g"])(" 2-1-1. SPA    ");Object(s["r"])();var ge=ae((function(e,t,c,b,n,l){var a=Object(s["y"])("toy-icon");return Object(s["q"])(),Object(s["d"])("div",ie,[je,re,Oe,oe,ue,Object(s["h"])("div",he,[Object(s["h"])("div",{class:"left",onClick:t[1]||(t[1]=function(t){return e.$router.push("/set")})},[Object(s["h"])(a,{icon:"arrow-left"}),pe]),Object(s["h"])("div",{class:"right",onClick:t[2]||(t[2]=function(t){return e.$router.push("/base/mandatory/spa")})},[de,Object(s["h"])(a,{icon:"arrow-right"})])])])})),ve={name:"overview"};ve.render=ge,ve.__scopeId="data-v-5b9722fc";var me=ve,xe=c("f027"),fe=c.n(xe),ye=Object(s["F"])("data-v-2afae6dc");Object(s["t"])("data-v-2afae6dc");var Se={class:"spa-page content-page"},Ve=Object(s["h"])("div",{class:"main-title"},[Object(s["h"])("span",{class:"index"},"2-1-1."),Object(s["g"])(" SPA"),Object(s["h"])("span",{class:"mini-title"},"(Single Page Application)")],-1),ke=Object(s["h"])("hr",null,null,-1),_e=Object(s["h"])("div",{class:"content-box"},[Object(s["h"])("div",{class:"content-level-1"},[Object(s["h"])("p",null,"Single Page Application은 말 그대로 단 하나의 페이지로 제공되는 웹 서비스를 의미합니다."),Object(s["h"])("p",null,[Object(s["g"])("여기서 의미하는 단 "),Object(s["h"])("b",null,"'하나의 페이지'"),Object(s["g"])("의 기준은 일반적으로 우리가 생각하는 HTML 파일 하나를 의미한다고 이해하시면 됩니다.")])])],-1),we=Object(s["h"])("div",{class:"content-box"},[Object(s["h"])("div",{class:"sub-title"},[Object(s["h"])("span",{class:"index"},"1."),Object(s["g"])(" Web Service")]),Object(s["h"])("div",{class:"content-level-1"},[Object(s["h"])("p",null,"웹서비스는 보통 아래 3가지를 기본요소로 개발됩니다."),Object(s["h"])("div",{class:"image-box"},[Object(s["h"])("img",{src:fe.a}),Object(s["h"])("span",{class:"under-text"},"[ HTML / CSS / Javascript ]")]),Object(s["h"])("p",null,[Object(s["g"])(" 이 중 "),Object(s["h"])("b",null,"HTML"),Object(s["g"])("은 "),Object(s["h"])("b",null,"H"),Object(s["g"])("yper "),Object(s["h"])("b",null,"T"),Object(s["g"])("ext "),Object(s["h"])("b",null,"M"),Object(s["g"])("ark-up "),Object(s["h"])("b",null,"L"),Object(s["g"])("anguage의 약자로써, 웹 페이지의 모습을 기술하기 위한 규약으로 만들어진 문서파일입니다. 그리고 규약에 맞춰 작성된 내역을 각각의 브라우저가 해석해서 사용자에게 서비스하게 됩니다. ")]),Object(s["h"])("br"),Object(s["h"])("p",null,[Object(s["g"])("이처럼 브라우저가 해석하는 기준점으로써의 "),Object(s["h"])("b",null,"HTML파일이 '하나'"),Object(s["g"])("이기 때문에 Single Page Application인 것입니다.")])])],-1),Ae=Object(s["h"])("div",{class:"content-box"},[Object(s["h"])("div",{class:"sub-title"},[Object(s["h"])("span",{class:"index"},"2."),Object(s["g"])(" SPA를 이루는 3요소")]),Object(s["h"])("div",{class:"content-level-1"},[Object(s["h"])("p",null,[Object(s["g"])(" 웹서비스를 개발할 때의 기본 3요소는 HTML, CSS, Javascript 라고 말씀드렸습니다."),Object(s["h"])("br"),Object(s["g"])(" 이와 유사하게 SPA로 웹서비스를 제공하기위해서는 아래와 같은 3가지가 필요합니다. ")]),Object(s["h"])("div",{class:"gray-box"},[Object(s["h"])("p",null,[Object(s["g"])("1. 웹 서비스의 밑 바탕을 담당하는 "),Object(s["h"])("b",null,"HTML 파일"),Object(s["g"])("(예를들어, index.html)")]),Object(s["h"])("p",null,[Object(s["g"])("2. 스크립트 코드들이 빌드된 "),Object(s["h"])("b",null,"Javascript 파일"),Object(s["g"])("(예를들어, build.js)")]),Object(s["h"])("p",null,[Object(s["g"])("3. 이미지, 폰트와 같은 "),Object(s["h"])("b",null,"정적 리소스"),Object(s["g"])("(예를들어, *.jpg, *.png, *.woff)")])])])],-1),Ce=Object(s["h"])("div",{class:"content-box"},[Object(s["h"])("div",{class:"sub-title"},[Object(s["h"])("span",{class:"index"},"3."),Object(s["g"])(" With Webpack")]),Object(s["h"])("div",{class:"content-level-1"},[Object(s["h"])("p",null,"위에서 언급했듯이 SPA는 하나의 정적파일을 기반으로 웹서비스를 제공합니다."),Object(s["h"])("p",null," 하지만 이는 운영단계로 넘어가서 사용자에게 서비스를 제공할 때 하나의 파일이라는 것이지, 실제 개발할 때도 파일이 하나라는 이야기는 아닙니다. 우리가 JSP와 같은 기술들을 바탕으로 웹서비스를 만들 때도 N개의 *.jsp 파일들이 필요했듯이 Vue.js를 기반으로 웹서비스를 만들 때도 N개의 *.vue 파일들이 활용됩니다. "),Object(s["h"])("br"),Object(s["h"])("p",null,[Object(s["g"])(" 그리고 이러한 N개의 파일 및 이미지/폰트와 같은 리소스들은 "),Object(s["h"])("a",{href:"https://webpack.js.org/",target:"_blank"},"Webpack"),Object(s["g"])("이라는 모듈 번들러(Module Bundler)를 통해서 SPA 환경에 맞게끔 변환(Bundle)되게 됩니다. 그 결과로 생성되는 파일들이 바로 위의 '1. SPA를 이루는 3요소'에서 언급했던 HTML, Javascript, 정적리소스 파일입니다. ")])])],-1),Me=Object(s["h"])("hr",null,null,-1),Re={class:"bottom-navigation"},Le=Object(s["g"])(" 2-1-2. Webpack    ");Object(s["r"])();var Ie=ye((function(e,t,c,b,n,l){var a=Object(s["y"])("toy-icon");return Object(s["q"])(),Object(s["d"])("div",Se,[Ve,ke,_e,we,Ae,Ce,Me,Object(s["h"])("div",Re,[Object(s["h"])("div",{class:"right",onClick:t[1]||(t[1]=function(t){return e.$router.push("/base/mandatory/webpack")})},[Le,Object(s["h"])(a,{icon:"arrow-right"})])])])})),$e={name:"spa"};$e.render=Ie,$e.__scopeId="data-v-2afae6dc";var Pe=$e,Te=c("1588"),De=c.n(Te),He=c("b588"),Ue=c.n(He),Fe=c("30db"),qe=c.n(Fe),Je=c("8e0e"),Ee=c.n(Je),Ne=c("2b2e"),We=c.n(Ne),ze=c("b140"),Be=c.n(ze),Ge=c("8768"),Ke=c.n(Ge),Ye=c("01f2"),Qe=c.n(Ye),Xe=c("3c9b"),Ze=c.n(Xe),et=c("d2b0"),tt=c.n(et),ct=c("8cab"),st=c.n(ct),bt=Object(s["F"])("data-v-4df01c3d");Object(s["t"])("data-v-4df01c3d");var nt={class:" content-page"},lt=Object(s["h"])("div",{class:"main-title"},[Object(s["h"])("span",{class:"index"},"2-1-2."),Object(s["g"])(" Webpack")],-1),at=Object(s["h"])("hr",null,null,-1),it=Object(s["h"])("div",{class:"content-box"},[Object(s["h"])("div",{class:"sub-title"},[Object(s["h"])("span",{class:"index"},"1."),Object(s["g"])(" Webpack의 결과물")]),Object(s["h"])("div",{class:"content-level-1"},[Object(s["h"])("p",null,"Webpack에 대한 설명에 앞서서, 번들링을 통해 만들어진 HTML 파일을 먼저 보시겠습니다."),Object(s["h"])("div",{class:"image-box"},[Object(s["h"])("img",{src:De.a}),Object(s["h"])("span",{class:"under-text"},"[ Vue Guide 서비스의 index.html ]")]),Object(s["h"])("p",null," 캡쳐된 코드는, 여러분이 현재 보고계시는 Vue Guide 서비스의 실제 index.html 파일이며 보시는 것과 같이 메타태그를 제외하면 본문은 매우 심플한 코드로 이루어져 있습니다. 여기서 주의깊게 보실 부분은 <body>태그 안에 있는 <script>태그 입니다. ")])],-1),jt=Object(s["h"])("div",{class:"content-box"},[Object(s["h"])("div",{class:"sub-title"},[Object(s["h"])("span",{class:"index"},"2."),Object(s["g"])(" 모듈 번들링")]),Object(s["h"])("div",{class:"content-level-1"},[Object(s["h"])("p",null,"Webpack은 아래와 같이 공식 홈페이지에 모듈 번들러라고 정의되어 있습니다."),Object(s["h"])("div",{class:"gray-box"},[Object(s["h"])("p",null,[Object(s["h"])("b",null,"Webpack"),Object(s["g"])(" is a static module bundler for modern JavaScript applications")])]),Object(s["h"])("p",null," 여기서의 '모듈'이 가리키는 대상은 개발할 때 필요한 파일들을 뜻하며 이는 Javascript, 이미지, 폰트와 같이 서비스를 구성하는데 필요한 모든 요소들에 대해 종류를 가리지 않고 포괄하는 개념입니다. "),Object(s["h"])("div",{class:"image-box"},[Object(s["h"])("img",{src:Ue.a}),Object(s["h"])("span",{class:"under-text"},"[ webpack의 모듈 번들링 모식도 ]")]),Object(s["h"])("p",null," 번들링을 실행하게 되면 위와 같이, 개발할 때 사용했던 각종 모듈들이 서로간의 의존성을 고려하여 운영단계에서 필요한 Static Asset들로 변환되게 됩니다. 그리고 이때의 Static Assets이 SPA 서비스를 위한 3요소를 충족하게 됩니다. "),Object(s["h"])("br"),Object(s["h"])("p",null," 우리가 학습하는 Vue.js 또한, *.vue 파일들이 모듈로써 존재하게되고 Webpack의 설정을 바탕으로 번들링을 통해 Javascript 코드로 변환되게 됩니다. ")])],-1),rt=Object(s["h"])("div",{class:"content-box"},[Object(s["h"])("div",{class:"sub-title"},[Object(s["h"])("span",{class:"index"},"3."),Object(s["g"])(" 주요 설정")]),Object(s["h"])("div",{class:"content-level-1"},[Object(s["h"])("p",null,[Object(s["g"])(" 이처럼 Webpack은 다양한 옵션을 통해서 번들링을 위한 설정을 커스터마이징 할 수 있습니다. Vue-cli 3로 생성한 프로젝트의 경우 vue.config.js 파일이 Webpack에 대한 설정을 담당하도록 되어있으며 이전 버전의 Vue-cli를 통해 생성된 프로젝트의 경우 webpack.config.js와 유사항 명칭으로 사용되고 있습니다. "),Object(s["h"])("br"),Object(s["g"])(" (UI Dev IDE를 통해 생성되는 프로젝트는 Vue-cli 3를 기반으로 하고 있으며 vue.config.js 파일이 생성됩니다) "),Object(s["h"])("br"),Object(s["h"])("br"),Object(s["g"])(" 여기서는 주요한 몇 가지의 설정만을 설명하며, 모든 옵션은 "),Object(s["h"])("a",{href:"https://webpack.js.org/concepts/entry-points/",target:"_blank>"},"이 링크"),Object(s["g"])("를 참고해주시기 바랍니다) ")])]),Object(s["h"])("div",{class:"content-level-1"},[Object(s["h"])("p",{class:"third-title"},[Object(s["h"])("span",{class:"index"},"#01."),Object(s["g"])(" entry")]),Object(s["h"])("p",null,[Object(s["g"])(" Webpack에서 "),Object(s["h"])("b",null,"entry"),Object(s["g"])("는 번들링을 하기 위한 진입점의 역할을 합니다. ")]),Object(s["h"])("div",{class:"image-box"},[Object(s["h"])("img",{src:qe.a}),Object(s["h"])("span",{class:"under-text"},"[ vue.config.js의 entry 설정]")]),Object(s["h"])("p",null,[Object(s["g"])(" 번들링이란 N개의 모듈들이 서로간의 의존성을 고려하여 Static Assets으로 변환하는 과정인데, 이때 N개로 나누어진 리소스들을 정리하기위해서는 "),Object(s["h"])("b",null,"입구와 같은 하나의 진입점을 필요"),Object(s["g"])("로 합니다. 그리고 바로 그 진입점 역할을 할 파일을 명시해주는 설정이 'entry'입니다. ")]),Object(s["h"])("div",{class:"image-box"},[Object(s["h"])("img",{src:Ee.a}),Object(s["h"])("span",{class:"under-text"},"[ entry파일역할을 하는 main.js ]")]),Object(s["h"])("p",null," entry로 지정된 파일은 Webpack에서는 입구의 역할임과 동시에 SPA구조에서는 가장 바깥 영역을 담당하는 Javascript파일이 됩니다. 그렇기에 그림의 1~3번은 다음과 같은 역할을 합니다. "),Object(s["h"])("div",{class:"gray-box"},[Object(s["h"])("p",null,[Object(s["h"])("b",null,"1번"),Object(s["g"])("과 같이 전역으로 필요한 라이브러리 및 라우터같은 설정파일들을 import 해주며")]),Object(s["h"])("p",null,[Object(s["h"])("b",null,"2번"),Object(s["g"])("처럼 Vue 3.x 버전에서는 createApp function을 통해 Vue Application 인스턴스를 생성하고")]),Object(s["h"])("p",null,[Object(s["h"])("b",null,"3번"),Object(s["g"])("처럼 생성된 Vue Application 객체에 필요한 모듈들을 전역에서 활용할 수 있게 심어줌으로써,")]),Object(s["h"])("p",null,"우리가 하고자 하는 Vue.js기반의 개발을 할 수 있도록 환경을 구성해주는 것입니다.")]),Object(s["h"])("p",null," (전역으로 필요한 jquery.js 라이브러리와 같은 것들을 index.html에서 <script>태그를 통해 라이브러리를 선언하면 코드 전체에서 사용할 수 있게 되는 것과 같은 거라고 보시면 됩니다) ")]),Object(s["h"])("div",{class:"content-level-1"},[Object(s["h"])("p",{class:"third-title"},[Object(s["h"])("span",{class:"index"},"#02."),Object(s["g"])(" output")]),Object(s["h"])("p",null," 번들링을 통해 생성되는 Static Assets들의 경로를 지정합니다. "),Object(s["h"])("div",{class:"image-box"},[Object(s["h"])("img",{src:We.a}),Object(s["h"])("span",{class:"under-text"},"[ output 설정 ]")]),Object(s["h"])("p",null," Vue-cli를 통해 생성된 프로젝트는 일반적으로 위와 같은 output 설정을 가지게되며 각 옵션은 아래의 역할을 합니다. "),Object(s["h"])("div",{class:"gray-box"},[Object(s["h"])("p",null,"path : 번들링의 결과물이 위치할 경로를 설정"),Object(s["h"])("p",null,"filename : 엔트리 파일을 기점으로 번들링되었을 때 SPA 구조를 총괄하는 역할의 파일명"),Object(s["h"])("p",null,"publicPath : 우리가 서버에 앱을 배포했을 경우를 대비한, 리소스들의 상대적 위치")]),Object(s["h"])("p",null,[Object(s["g"])(" 현재 함께 제공되는 vue starter 프로젝트에는 위와같은 output 설정이 명시되어있지않으며, 이와같이 "),Object(s["h"])("b",null,"아무런 값을 설정하지 않을 경우"),Object(s["g"])("에는 아래와 같이 프로젝트의 루트 경로에 dist디렉토리가 생성되고 해당 위치에 모든 Static Assets들이 생성되게 됩니다. ")]),Object(s["h"])("div",{class:"image-box"},[Object(s["h"])("img",{src:Be.a}),Object(s["h"])("span",{class:"under-text"},"[ 모듈 번들링의 결과로 생성된 dist 디렉토리 ]")])]),Object(s["h"])("div",{class:"content-level-1"},[Object(s["h"])("p",{class:"third-title"},[Object(s["h"])("span",{class:"index"},"#03."),Object(s["g"])(" resolve")]),Object(s["h"])("p",null," 번들링을 할 때, 모듈로 해석되는 파일내에서 관련된 코드들을 어떻게 해석 할 지에 대한 정의를 합니다. "),Object(s["h"])("div",{class:"image-box"},[Object(s["h"])("img",{src:Ke.a}),Object(s["h"])("span",{class:"under-text"},"[ resolve 설정 ]")]),Object(s["h"])("p",null," 위 코드는 resolve의 가장 대표적인 2가지 옵션을 설정한 내용이며, 이에따라 아래와 같은 효과를 얻을 수 있습니다. "),Object(s["h"])("div",{class:"image-box"},[Object(s["h"])("img",{src:Qe.a}),Object(s["h"])("span",{class:"under-text"},"[ resolve를 통한 import 설정 ]")]),Object(s["h"])("div",{class:"content-level-2"},[Object(s["h"])("p",{class:"fourth-title"},"1) extensions"),Object(s["h"])("p",null,[Object(s["g"])(" 파일의 확장자를 묵시적으로 처리해줍니다. import를 사용하여 타 모듈을 사용할 시에, 파일의 확장자를 명시해주지 않더라도 번들링시에 문제가 되지 않습니다 여기서 menuUnit 키워드가 가리키는 실제 파일은 menuUnit.vue이며 menuData가 가리키는 파일은 menuData.json입니다."),Object(s["h"])("br"),Object(s["g"])(" 2개 파일의 확장자가 서로 다르더라도 extensions에 json과 vue라는 확장자를 명시해두었기때문에 Webpack에 의해 알맞은 파일들이 모듈로써 import 되게 되는 것입니다. ")])]),Object(s["h"])("div",{class:"content-level-2"},[Object(s["h"])("p",{class:"fourth-title"},"2) alias"),Object(s["h"])("p",null,[Object(s["g"])(" 약어의 의미로 사용되며 여기에서의 약어란, 모듈 기반으로 아키텍쳐가 구성되어있는 상태에서 각각의 모듈이 import를 통해 타 모듈을 활용하고자 할 때 "),Object(s["h"])("b",null,"경로의 약어"),Object(s["g"])("를 뜻합니다. 즉, 위와같이 정의되어있다고 가정한다면 '@'는 프로젝트 루트에 있는 src 디렉토리를 가리키며 '@page'은 src/page 디렉토리를, '@assets'는 src/assets 디렉토리를 의미합니다. "),Object(s["h"])("br"),Object(s["g"])(" 이는 N개의 모듈이 활용되는 개발환경에서 서로가 서로를 참조해야하기에 각 모듈의 경로를 일일이 상대경로 혹은 절대경로로 명시하기엔 너무 복잡하며 그로인한 실수를 줄일 수 있는 효과적인 설정입니다. ")])])]),Object(s["h"])("div",{class:"content-level-1"},[Object(s["h"])("p",{class:"third-title"},[Object(s["h"])("span",{class:"index"},"#04."),Object(s["g"])(" module")]),Object(s["h"])("p",null," module 설정은 번들링을 진행할 때, 각 파일들을 어떻게 해석할 지에 대한 정의입니다. 번들링을 통해 Static Assets으로 변환되는 파일의 종류는 매우 다양합니다. *.vue파일에서부터 js, jpg, scss등과 같이 어떤 모듈도 번들링의 타겟이 될 수 있으며 그렇기에 각 모듈에 대해 어떤 해석자(loader)를 사용할지를 명시해놓는 옵션입니다. "),Object(s["h"])("div",{class:"image-box"},[Object(s["h"])("img",{src:Ze.a}),Object(s["h"])("span",{class:"under-text"},"[ 각 확장자에 따른 module 설정 ]")]),Object(s["h"])("p",null," 일반적으로 위와같이 파일의 확장자(test)와 해당 파일에 대한 해석자(loader)를 정의합니다. 이때 해석자를 정의하는 옵션은 loader와 use가 있으며, 단일 해석자의 경우 loader를 사용하고 복수개의 해석자를 활용 할 경우 use를 사용합니다. ")]),Object(s["h"])("div",{class:"content-level-1"},[Object(s["h"])("p",{class:"third-title"},[Object(s["h"])("span",{class:"index"},"#05."),Object(s["g"])(" plugin")]),Object(s["h"])("div",{class:"image-box"},[Object(s["h"])("img",{src:tt.a}),Object(s["h"])("span",{class:"under-text"},"[ 각 확장자에 따른 module 설정 ]")]),Object(s["h"])("p",null," Webpack이 기본적으로 제공하는 기능외에 3rd 파티에서 제공하는 기능이 필요하다면 plugin 설정을 통해서 위와 같이 활용할 수 있습니다(위 코드는 특정 경로의 html파일을 번들링시 그대로 output경로로 복사하는 플러그인입니다) ")])],-1),Ot=Object(s["h"])("hr",null,null,-1),ot=Object(s["h"])("div",{class:"content-box"},[Object(s["h"])("div",{class:"sub-title"},[Object(s["h"])("span",{class:"index"},"-1."),Object(s["g"])(" 별첨")]),Object(s["h"])("div",{class:"content-level-1"},[Object(s["h"])("p",{class:"third-title"},[Object(s["h"])("span",{class:"index"},"#01."),Object(s["g"])(" Vue 2.x의 entry 파일 ")]),Object(s["h"])("div",{class:"content-level-2"},[Object(s["h"])("p",null," 본문에서 설명한 버전은 Vue 3.x 에서의 엔트리 파일이며, 만약 Vue 2.x대의 버전을 보고계시다면 보통 아래와 같은 구성으로 이루어져 있을 겁니다."),Object(s["h"])("div",{class:"image-box"},[Object(s["h"])("img",{src:st.a}),Object(s["h"])("span",{class:"under-text"},"[ Vue 2.x 버전에서의 entry 파일 ]")]),Object(s["h"])("p",null,[Object(s["g"])(" 크게 3가지 파트(모듈들의 import 선언, import 한 모듈을 사용하겠다는 정의, Vue 인스턴스생성)로 이루어졌다는 점에서는 Vue 2.x 버전이나 Vue 3.x 버전이나 별반 차이가 없습니다. 다만, Vue 2.x 버전에서는 Vue.js의 인스턴스를 생성하는 방식이 new 키워드를 통해 인스턴스를 직접 생성하는 방법이었다면, Vue 3.x 버전부터는 "),Object(s["h"])("b",null,"createApp 이라는 지정 함수를 통해서 Vue Application 인스턴스를 생성"),Object(s["g"])("하게 됩니다(Vue 인스턴스가 아니고 Vue Application 인스턴스입니다) "),Object(s["h"])("br"),Object(s["h"])("br"),Object(s["g"])(" Vue 3.x 부터는 대부분의 객체 활용을 '함수지향형'으로하고 있다는 것을 보여주며, Vue.js에서의 필수 라이브러리나 마찬가지인 vue-router도 Vue 3.x에 대응되는 버전부터는 createRouter 함수를 통해 router 객체를 생성하도록 하고 있습니다."),Object(s["h"])("br")])])])],-1),ut=Object(s["h"])("hr",null,null,-1),ht={class:"bottom-navigation"},pt=Object(s["g"])("    2-1-1. SPA "),dt=Object(s["g"])(" 2-1-3. NPM    ");Object(s["r"])();var gt=bt((function(e,t,c,b,n,l){var a=Object(s["y"])("toy-icon");return Object(s["q"])(),Object(s["d"])("div",nt,[lt,at,it,jt,rt,Ot,ot,ut,Object(s["h"])("div",ht,[Object(s["h"])("div",{class:"left",onClick:t[1]||(t[1]=function(t){return e.$router.push("/base/mandatory/spa")})},[Object(s["h"])(a,{icon:"arrow-left"}),pt]),Object(s["h"])("div",{class:"right",onClick:t[2]||(t[2]=function(t){return e.$router.push("/base/mandatory/npm")})},[dt,Object(s["h"])(a,{icon:"arrow-right"})])])])})),vt={name:"webpack"};vt.render=gt,vt.__scopeId="data-v-4df01c3d";var mt=vt,xt=c("f187"),ft=c.n(xt),yt=c("0b53"),St=c.n(yt),Vt=c("e699"),kt=c.n(Vt),_t=Object(s["F"])("data-v-1e0469b4");Object(s["t"])("data-v-1e0469b4");var wt={class:"npm-page content-page"},At=Object(s["h"])("div",{class:"main-title"},[Object(s["h"])("span",{class:"index"},"2-1-3."),Object(s["g"])(" Npm"),Object(s["h"])("span",{class:"mini-title"},"(Node.js)")],-1),Ct=Object(s["h"])("hr",null,null,-1),Mt={class:"content-box"},Rt=Object(s["h"])("div",{class:"sub-title"},[Object(s["h"])("span",{class:"index"},"1."),Object(s["g"])(" Summary")],-1),Lt={class:"content-level-1"},It=Object(s["g"])(" Node.js는 "),$t=Object(s["g"])("에서 짧게 언급했다시피 자바스크립트를 기반으로 구동가능한 Runtime 환경을 제공합니다. 이는 매우 다양한 분야에서 활용이 되고있으며, 실제로 Tomcat이나 JBoss와 같은 웹서버의 역할뿐만 아니라 임베디드 환경에서 서비스를 구축할시에도 스크립트 기반으로 동작하는 어플리케이션의 지원, 그리고 maven과 유사한 역할을 하는 npm을 통해 프론트엔드 개발에도 많은 도움을 주고 있습니다. "),Pt=Object(s["h"])("br",null,null,-1),Tt=Object(s["h"])("br",null,null,-1),Dt=Object(s["g"])(" 그 중 Vue.js 개발에서 가장많이 사용되는 3가지 항목을 소개합니다. "),Ht=Object(s["h"])("div",{class:"content-box"},[Object(s["h"])("div",{class:"sub-title"},[Object(s["h"])("span",{class:"index"},"2."),Object(s["g"])(" package.json")]),Object(s["h"])("div",{class:"content-level-1"},[Object(s["h"])("p",null,[Object(s["g"])(" npm이 하는 역할 중에 하나는 프론트엔드 개발에 필요한 라이브러리를 설치하고 관리할 수 있다는 것입니다. 여기서 package.json의 역할은 maven에 비유하자면 pom.xml입니다. pom.xml은 maven 레파지토리를 통해 설치되는 라이브러리들이 정의되어있으며 추가적으로 해당프로젝트의 버전정보와 같은 관련 정보도 함께 정의되어 있습니다. "),Object(s["h"])("br"),Object(s["h"])("br"),Object(s["g"])(" package.json도 이와 마찬가지로 프로젝트의 정보 및 프론트엔드 개발에 필요한 라이브러리들이 정의되어있는데요. 이 파일명이 package.json인 이유는 npm에서는 이런 라이브러리들을 npm 패키지라고 부르기 때문입니다. "),Object(s["h"])("br"),Object(s["h"])("br"),Object(s["g"])(" package.json 파일에서 설명이 필요한 3가지는 scripts, dependencies, devDependencies입니다. ")])]),Object(s["h"])("div",{class:"content-level-1"},[Object(s["h"])("p",{class:"third-title"},[Object(s["h"])("span",{class:"index"},"#01."),Object(s["g"])(" scripts")]),Object(s["h"])("p",null," scripts는 npm 커맨드를 통해 사용할 수 있는 명령어의 정의입니다. "),Object(s["h"])("div",{class:"image-box"},[Object(s["h"])("img",{src:ft.a}),Object(s["h"])("span",{class:"under-text"},"[ scripts 설정 ]")]),Object(s["h"])("p",null,[Object(s["g"])(" npm은 "),Object(s["h"])("b",null,"npm install"),Object(s["g"])("과 같이 기본적으로 제공하는 명령어외에 scripts 영역을 통해서 세세한 옵션을 개발자가 정의함으로써, 커스텀한 명령어를 정의할 수 있습니다. 해당 키워드들에 사용법은 "),Object(s["h"])("b",null,"npm run [script]"),Object(s["g"])("의 형태를 띄며, 예를 들어 위의 "),Object(s["h"])("b",null,"serve라는 scripts를 동작하려면 npm run serve"),Object(s["g"])("라는 명령어를 실행하면 됩니다. "),Object(s["h"])("br"),Object(s["h"])("br"),Object(s["g"])(" vue starter의 package.json에는 Vue-cli 3가 기본으로 제공하는 아래 3개의 script를 가지고 있습니다. ")]),Object(s["h"])("div",{class:"gray-box"},[Object(s["h"])("p",null,"serve : 개발모드로 사용되는 Node.js 서버를 구동합니다."),Object(s["h"])("p",null,"build : 배포를 목적으로 하는 Static Assets을 위해 모듈 번들링을 실행합니다."),Object(s["h"])("p",null,"lint : 프로젝트 전체 파일에 대해 ESLint를 체크합니다.")]),Object(s["h"])("p",null,[Object(s["g"])(" 위 명령어의 실행을 위해 활용되는 webpack 설정파일은 vue.config.js 입니다."),Object(s["h"])("br"),Object(s["g"])(" (만약 Vue-cli 3 이전 버전의 Vue.js 프로젝트라면, webpack.config.js와 유사한 이름의 파일이 해당역할을 대체합니다) ")])]),Object(s["h"])("div",{class:"content-level-1"},[Object(s["h"])("p",{class:"third-title"},[Object(s["h"])("span",{class:"index"},"#02."),Object(s["g"])(" dependencies & devDependencies")]),Object(s["h"])("p",null," dependencies와 devDependencies를 한 번에 묶은 이유는 2개의 역할이 거의 흡사하기 때문입니다. "),Object(s["h"])("div",{class:"image-box"},[Object(s["h"])("img",{src:St.a}),Object(s["h"])("span",{class:"under-text"},"[ dependencies와 devDependencies 설정 ]")]),Object(s["h"])("p",null,[Object(s["g"])(" 정의된 코드를 보면 두 키워드 모두 npm 패키지들을 정의하고 있음을 볼 수 있습니다."),Object(s["h"])("br"),Object(s["g"])(" 그리고 해당 패키지들은 'npm install'명령을 통해서 정의된 위치에 상관없이 node_modules 디렉토리에 설치가 되게 되는데요. 이 둘을 구분짓는 차이점은 개발 및 테스트를 할 때 필요한 패키지와 실제 운영의 핵심역할을 하는 패키지로 나뉩니다. "),Object(s["h"])("br"),Object(s["h"])("br"),Object(s["g"])(" 그래서 개발시에 필요한 패키지기에 dev라는 prefix가 붙어서 "),Object(s["h"])("b",null,"dev"),Object(s["g"])("Dependencies인겁니다."),Object(s["h"])("br"),Object(s["g"])(" 정의된 패키지 또한, 면면을 살펴보면 dependencies에는 vue, vue-router와 같이 Vue.js기반의 프로젝트를 개발할 때 필수로 정의될 수 밖에 없을 것 갈은 패키지들로 구성되어 있는 것을 확인하실 수 있습니다. ")])])],-1),Ut=Object(s["h"])("div",{class:"content-box"},[Object(s["h"])("div",{class:"sub-title"},[Object(s["h"])("span",{class:"index"},"3."),Object(s["g"])(" Dev Server")]),Object(s["h"])("div",{class:"content-level-1"},[Object(s["h"])("p",null," 프론트엔드 개발을 위해 별도의 Node.js 서버를 구동할 수 있습니다. "),Object(s["h"])("div",{class:"gray-box"},[Object(s["h"])("p",null,"npm run serve")]),Object(s["h"])("p",null,[Object(s["g"])(" vue starter 프로젝트를 기준으로 scripts 영역에 'serve' 키워드가 정의되어있으며 해당 키워드는 위와 같이 'npm run serve'라는 명령어를 통해 개발서버를 구동시킬 수 있습니다. 또한 본 명령어로 구동된 개발서버는 "),Object(s["h"])("b",null,"hot reload"),Object(s["g"])("기능이 적용되어있기 때문에, 코드를 수정하더라도 서버를 재기동할 필요없이 즉시 변경된 사항이 웹 브라우져로 반영되는 것을 확인할 수 있습니다. ")]),Object(s["h"])("div",{class:"image-box"},[Object(s["h"])("img",{src:kt.a}),Object(s["h"])("span",{class:"under-text"},"[ IE Edge의 개발자도구를 통해 열어본 home.vue ]")]),Object(s["h"])("p",null," 또한, 브라우져가 제공하는 개발자도구(F12)의 Source 탭을 통해서 개발 코드가 작성되어있는 *.vue나 *.js파일에 직접 접근이 가능하기때문에 브레이크 포인트의 설정도 가능하며 이를통해 개발자는 좀 더 손쉽게 프론트엔드의 디버깅을 할 수 있습니다. ")])],-1),Ft=Object(s["h"])("div",{class:"content-box"},[Object(s["h"])("div",{class:"sub-title"},[Object(s["h"])("span",{class:"index"},"4."),Object(s["g"])(" Build")]),Object(s["h"])("div",{class:"content-level-1"},[Object(s["h"])("div",{class:"gray-box"},[Object(s["h"])("p",null,"npm run build")]),Object(s["h"])("p",null," 프론트엔드 개발을 완료하였다면, 실제 운영에 배포할 수 있는 형태로써의 변환이 필요합니다. 이를 위해 vue.config.js 설정파일에 정의된 내용을 바탕으로 Webpack을 통해 모듈 번들링을 진행하게 되고 번들링이 끝나면 SPA 구조로 이루어진 웹 서비스 어플리케이션이 생성되게 됩니다(생성되는 위치는 output 설정값에 따르며, 기본값은 dist 디렉토리입니다) ")])],-1),qt=Object(s["h"])("hr",null,null,-1),Jt={class:"bottom-navigation"},Et=Object(s["g"])("    2-1-2. Webpack "),Nt=Object(s["g"])(" 2-2-1. SCSS    ");Object(s["r"])();var Wt=_t((function(e,t,c,b,n,l){var a=Object(s["y"])("toy-icon");return Object(s["q"])(),Object(s["d"])("div",wt,[At,Ct,Object(s["h"])("div",Mt,[Rt,Object(s["h"])("div",Lt,[Object(s["h"])("p",null,[It,Object(s["h"])("span",{class:"inner-link",onClick:t[1]||(t[1]=function(t){return e.$router.push("/set")})},"0. Vue.js 개발환경 설정"),$t,Pt,Tt,Dt])])]),Ht,Ut,Ft,qt,Object(s["h"])("div",Jt,[Object(s["h"])("div",{class:"left",onClick:t[2]||(t[2]=function(t){return e.$router.push("/base/mandatory/webpack")})},[Object(s["h"])(a,{icon:"arrow-left"}),Et]),Object(s["h"])("div",{class:"right",onClick:t[3]||(t[3]=function(t){return e.$router.push("/base/optional/scss")})},[Nt,Object(s["h"])(a,{icon:"arrow-right"})])])])})),zt={name:"npm"};zt.render=Wt,zt.__scopeId="data-v-1e0469b4";var Bt=zt,Gt=c("866b"),Kt=c.n(Gt),Yt=c("ba01"),Qt=c.n(Yt),Xt=c("90ec"),Zt=c.n(Xt),ec=c("4595"),tc=c.n(ec),cc=c("ed27"),sc=c.n(cc),bc=c("30c1"),nc=c.n(bc),lc=c("bc11"),ac=c.n(lc),ic=c("d68a"),jc=c.n(ic),rc=Object(s["F"])("data-v-601357d7");Object(s["t"])("data-v-601357d7");var Oc={class:"scss-page content-page"},oc=Object(s["h"])("div",{class:"main-title"},[Object(s["h"])("span",{class:"index"},"2-2-1."),Object(s["g"])(" SCSS")],-1),uc=Object(s["h"])("hr",null,null,-1),hc=Object(s["h"])("div",{class:"content-box"},[Object(s["h"])("div",{class:"content-level-1"},[Object(s["h"])("p",null,[Object(s["g"])(" SCSS는 CSS의 전처리기(Preprocessor)입니다."),Object(s["h"])("br"),Object(s["g"])(" CSS는 HTML DOM들의 스타일에 관여하는 역할이지만, 시스템이 복잡해지고 커질수록 사용성에 있어서 불편함도 함께 커지게 됩니다. 대표적으로 선택자나 상대적 값이 필요해서 연산이 필요한 때, 혹은 동일 값을 가지는 요소들임에도 실제 값을 반복함과 같이 스타일 적용시에 불편한 포인트들이 있는데요. "),Object(s["h"])("br"),Object(s["h"])("br"),Object(s["g"])(" 하지만 그럼에도 불구하고 웹 서비스는 CSS외의 스타일 문법이 적용되지않기때문에, 스타일의 정의는 좀 더 편한 문법으로 작성하고 해당 스타일을 CSS 형태로 치환해주는 방법이 생겨난 것입니다. 그리고 이러한 것을 CSS Preprocessor, CSS의 전처리기입니다. "),Object(s["h"])("br"),Object(s["h"])("br"),Object(s["g"])(" 가장 흔하게 사용되는 전처리기법은 LESS와 SCSS가 있으며, vue starter 및 본 가이드의 경우에는 SCSS를 채택하여 현재 사용중입니다. ")])])],-1),pc={class:"content-box"},dc=Object(s["h"])("div",{class:"sub-title"},[Object(s["h"])("span",{class:"index"},"1."),Object(s["g"])("loader")],-1),gc={class:"content-level-1"},vc=Object(s["g"])("의 #04. module을 설명할 때 loader에 대한 개념을 설명했었습니다. loader는 "),mc=Object(s["h"])("b",null,"해석자",-1),xc=Object(s["g"])("로써 각 파일 확장자에 작성된 문법을 어떻게 해석할 지를 결정해주는 역할이라고 했었는데요. SCSS문법도 전처리기이기 때문에, 해당 문법을 해석해주는 해석자(loader)가 적용되어야하며 이를 webpack에 정의해주어야 합니다."),fc=Object(s["h"])("br",null,null,-1),yc=Object(s["h"])("div",{class:"image-box"},[Object(s["h"])("img",{src:Kt.a}),Object(s["h"])("span",{class:"under-text"},"[ Webpack의 scss-loader 설정 ]")],-1),Sc=Object(s["h"])("p",null," 위 캡쳐는 *.vue 확장자와 *.scss 확장자에 대한 loader 설정내용입니다. Vue 파일 내부에서도 <style>태그의 lang요소를 통해 SCSS 문법을 활용할 수 있으며, 이를위해 위와같이 함께 설정을 해줘야 합니다. ",-1),Vc=Object(s["h"])("div",{class:"gray-box"},[Object(s["g"])(" 여기서 SCSS 문법을 해석하는 loader는 "),Object(s["h"])("b",null,"sass-loader"),Object(s["g"])("인데요."),Object(s["h"])("br"),Object(s["g"])(" 왜 scss-loader가 아니라 sass-loader냐면, SCSS라는 문법의 형태가 SASS로부터 발전한 형태이기 때문입니다."),Object(s["h"])("br"),Object(s["g"])(" (그래서 scss-loader라는 loader는 존재하지 않습니다) ")],-1),kc=Object(s["h"])("p",null,[Object(s["g"])(" vue starter를 함께 보고 계신분이라면, 위의 loader 설정이 vue.config.js에 없다는 것을 알아채셨을텐데요."),Object(s["h"])("br"),Object(s["g"])(" 이는 Vue-cli 3의 "),Object(s["h"])("b",null,"cli-service 모듈이 편의를 위해 이미 해당 내용을 내장하여 정의하고 있기 때문"),Object(s["g"])("입니다."),Object(s["h"])("br"),Object(s["g"])(" (혹시나, 이런 내용을 직접 확인하고싶으신 분은 node_modules/@vue/cli-service/webpack.config.js 를 살펴봐주세요) ")],-1),_c=Object(s["h"])("div",{class:"content-box"},[Object(s["h"])("div",{class:"sub-title"},[Object(s["h"])("span",{class:"index"},"2."),Object(s["g"])(" 문법")]),Object(s["h"])("div",{class:"content-level-1"},[Object(s["h"])("p",null," CSS를 사용하듯이 SCSS를 활용해도 되지만, 유용한 몇가지 문법이 있어서 짧게 소개합니다. ")]),Object(s["h"])("div",{class:"content-level-1"},[Object(s["h"])("p",{class:"third-title"},[Object(s["h"])("span",{class:"index"},"#01."),Object(s["g"])(" 변수")]),Object(s["h"])("p",null,[Object(s["g"])(" SCSS는 프로그래밍 언어와 같이 변수를 선언할 수 있으며, 이를 통해 동일한 값을 주어야하는 요소를 일원화하고 값의 재사용성을 높여줍니다. 변수의 선언방법은 변수의 이름앞에 "),Object(s["h"])("b",null,"$"),Object(s["g"])("라는 prefix를 추가해주는 것입니다. ")]),Object(s["h"])("div",{class:"image-box"},[Object(s["h"])("img",{src:Qt.a}),Object(s["h"])("span",{class:"under-text"},"[ SCSS의 변수 선언 ]")]),Object(s["h"])("p",null," 위와같은 경우, $color__gray-50 이라는 변수는 #FAFAFA 라는 값을 가지게되며, rgba와 같은 CSS 함수에 그래도 사용 할 수도 있고, color와 같은 일반 요소에도 그대로 활용이 가능합니다. ")]),Object(s["h"])("div",{class:"content-level-1"},[Object(s["h"])("p",{class:"third-title"},[Object(s["h"])("span",{class:"index"},"#02."),Object(s["g"])(" 중첩")]),Object(s["h"])("p",null," 중첩은, 중괄호를 통해서 선택자의 범위를 가독성있게 정의하는 코드입니다. "),Object(s["h"])("div",{class:"image-box"},[Object(s["h"])("img",{src:Zt.a}),Object(s["h"])("span",{class:"under-text"},"[ SCSS의 중첩 ]")]),Object(s["h"])("p",null," 좌측의 SCSS코드가 전처리를 통해 우측의 CSS로 변환되게 됩니다. 이를 비교해보면 SCSS코드의 형태가 HTML DOM 트리와 유사한 계층구조를 이룸으로써 요소 및 값들에 대한 가독성이 훨씬 좋다는 것을 알 수 있습니다. ")]),Object(s["h"])("div",{class:"content-level-1"},[Object(s["h"])("p",{class:"third-title"},[Object(s["h"])("span",{class:"index"},"#03."),Object(s["g"])(" 상위 선택자 &")]),Object(s["h"])("p",null,[Object(s["g"])(" 중괄호(중첩)내에서 상위 선택자를 참조하고자 할 때 사용되는 키워드로써, "),Object(s["h"])("b",null,"&"),Object(s["g"])("를 이용합니다. ")]),Object(s["h"])("div",{class:"image-box"},[Object(s["h"])("img",{src:tc.a}),Object(s["h"])("span",{class:"under-text"},"[ SCSS의 상위 선택자 ]")]),Object(s["h"])("p",null,[Object(s["g"])(" 일반적으로 hover나 focus, after와 같이 선택자를 지정하여 추가적인 스타일이 필요할 경우 사용되게 됩니다."),Object(s["h"])("br"),Object(s["g"])(" 위 코드의 경우, main-title이라는 클래스에 hover,focus,after시 각각의 스타일이 적용되는 것입니다. ")])]),Object(s["h"])("div",{class:"content-level-1"},[Object(s["h"])("p",{class:"third-title"},[Object(s["h"])("span",{class:"index"},"#04."),Object(s["g"])(" !default")]),Object(s["h"])("p",null,[Object(s["h"])("b",null,"!default"),Object(s["g"])("는 "),Object(s["h"])("b",null,"변수의 기본값"),Object(s["g"])("을 설정하는 방법입니다."),Object(s["h"])("br")]),Object(s["h"])("div",{class:"image-box"},[Object(s["h"])("img",{src:sc.a}),Object(s["h"])("span",{class:"under-text"},"[ SCSS의 !default 사용예제 ]")]),Object(s["h"])("p",null,[Object(s["g"])(" 위와같이 !default 키워드를 요소의 값 뒤에 정의하게되면, "),Object(s["h"])("b",null,"$color__vue"),Object(s["g"])("변수의 기본값이 #41b883이 되게 됩니다. "),Object(s["h"])("br"),Object(s["h"])("br"),Object(s["g"])(" 해당 키워드는 빈번히 사용되기보다, "),Object(s["h"])("b",null,"변수의 개념으로 제공되어야하는 값"),Object(s["g"])("들이 있는 경우 활용됩니다. 예를들어, 부트스트랩이나 구글 칼라와 같이 외부로부터 정형화 된 값들이나 라이브러리를 프로젝트에 적용하고자 할 경우, 해당 값들에 대한 이름이 중복될 수도 있고, 혹은 별도로 이름을 정해야하는 경우가 있을 수도 있습니다. 이러한 때에 !default 키워드를 통해서 기본값을 부여함으로써, 혹여나 발생할 수 있는 변수 값에대한 오버라이트를 방지하여 유효성을 보장하는 것입니다. "),Object(s["h"])("br"),Object(s["h"])("br"),Object(s["g"])(" 오버라이트를 방지하기위한 !default 키워드 사용시에는 정의되는 순서도 중요한 포인트입니다."),Object(s["h"])("br"),Object(s["g"])(" CSS에서는 동일 클래스명에 대한 중복이 허용되며, 요소에 대한 중복 정의도 가능합니다. 이에따라 실제 스타일 요소를 정의하는 순서가 매우 중요한데요. 예를들어 아래와 같이 정의되어 있다면, 실제 "),Object(s["h"])("b",null,"color 요소에 적용되는 값은 #ddd"),Object(s["g"])("입니다. ")]),Object(s["h"])("div",{class:"image-box"},[Object(s["h"])("img",{src:nc.a}),Object(s["h"])("span",{class:"under-text"},"[ CSS를 정의하는 순서의 중요성 ]")]),Object(s["h"])("p",null,[Object(s["g"])(" 이처럼 CSS에서는 일반적으로 후순위로 정의되는 내용이 적용되는 우선순위가 높게 되는데요."),Object(s["h"])("br"),Object(s["g"])(" SCSS에서는 변수의 기본값을 주기위해 "),Object(s["h"])("b",null,"!default"),Object(s["g"])("키워드를 요소의 값 뒤에 정의하는데, 해당 키워드의 경우에는 CSS의 후순위 우선법칙을 역전하게 됩니다. ")]),Object(s["h"])("div",{class:"image-box"},[Object(s["h"])("img",{src:ac.a}),Object(s["h"])("span",{class:"under-text"},"[ SCSS의 !default ]")]),Object(s["h"])("p",null," 이는 !default 키워드를 적용한 값이 기본으로 적용되어야하는 실값으로 인식되어 먼저 정의한 값이 동일명의 변수간에 우선순위를 높게 가지는 것입니다. ")]),Object(s["h"])("div",{class:"content-level-1"},[Object(s["h"])("p",{class:"third-title"},[Object(s["h"])("span",{class:"index"},"#05."),Object(s["g"])(" @import")]),Object(s["h"])("p",null,[Object(s["g"])(" SPA에서는 모듈간의 종속성을 정의하기 위해 import 키워드를 사용합니다."),Object(s["h"])("br"),Object(s["g"])(" SCSS도 문법내에서 이와같은 모듈간 종속성이 유효하며, 아래와 같이 정의할 수 있습니다. ")]),Object(s["h"])("div",{class:"image-box"},[Object(s["h"])("img",{src:jc.a}),Object(s["h"])("span",{class:"under-text"},"[ SCSS의 @import ]")]),Object(s["h"])("p",null,[Object(s["g"])(" $color__indigo-50 이라는 변수는 googleColorToken.scss 파일에 정의되어있고, 해당 변수를 활용하고자 하는 파일에서 "),Object(s["h"])("b",null,"@import"),Object(s["g"])("를 통해 모듈로써 활용하는 예제입니다. @import 키워드 뒤에는 모듈로써 활용할 파일의 경로를 정의해주면 됩니다. 만약 Webpack의 alias 설정을 통해 정의한 경로를 사용하고자 할 경우에는, 경로 앞에 물결(~)을 prefix로 추가하여 alias와 함께 정의하시면 됩니다. ")])])],-1),wc=Object(s["h"])("hr",null,null,-1),Ac=Object(s["h"])("div",{class:"content-box"},[Object(s["h"])("div",{class:"sub-title"},[Object(s["h"])("span",{class:"index"},"-1."),Object(s["g"])(" 별첨")]),Object(s["h"])("div",{class:"content-level-1"},[Object(s["h"])("p",{class:"third-title"},[Object(s["h"])("span",{class:"index"},"#01."),Object(s["g"])(" CSS의 우선순위")]),Object(s["h"])("p",null,[Object(s["g"])(" CSS의 스타일 적용 우선순위는 아래와 같습니다."),Object(s["h"])("br"),Object(s["g"])(" 1. 요소에 설정한 값 뒤에 "),Object(s["h"])("b",null,"!important"),Object(s["g"])("키워드가 붙는 경우"),Object(s["h"])("br"),Object(s["g"])(" 2. inline형태를 통해 HTML 태그의 style을 직접 선언한 경우"),Object(s["h"])("br"),Object(s["g"])(" 3. HTML 태그의 id를 선택자(#id형태)로 사용하여 정의한 경우"),Object(s["h"])("br"),Object(s["g"])(" 4. CSS 클래스명을 선택자로 지정한 경우"),Object(s["h"])("br"),Object(s["g"])(" 5. HTML 태그명을 선택자로 사용한 경우"),Object(s["h"])("br"),Object(s["g"])(" 6. HTML DOM 트리형태에서 상위 DOM의 속성을 상속한 경우"),Object(s["h"])("br")])])],-1),Cc=Object(s["h"])("hr",null,null,-1),Mc={class:"bottom-navigation"},Rc=Object(s["g"])(" 3. Vue.js 활용하기    ");Object(s["r"])();var Lc=rc((function(e,t,c,b,n,l){var a=Object(s["y"])("toy-icon");return Object(s["q"])(),Object(s["d"])("div",Oc,[oc,uc,hc,Object(s["h"])("div",pc,[dc,Object(s["h"])("div",gc,[Object(s["h"])("p",null,[Object(s["h"])("span",{class:"inner-link",onClick:t[1]||(t[1]=function(t){return e.$router.push("/base/mandatory/webpack")})},"2-1-2. Webpack"),vc,mc,xc,fc]),yc,Sc,Vc,kc])]),_c,wc,Ac,Cc,Object(s["h"])("div",Mc,[Object(s["h"])("div",{class:"right",onClick:t[2]||(t[2]=function(t){return e.$router.push("/skill/architecture")})},[Rc,Object(s["h"])(a,{icon:"arrow-right"})])])])})),Ic={name:"scss"};Ic.render=Lc,Ic.__scopeId="data-v-601357d7";var $c=Ic,Pc=c("d1a5"),Tc=c.n(Pc),Dc=c("5f18"),Hc=c.n(Dc),Uc=c("ecbe"),Fc=c.n(Uc),qc=c("4e94"),Jc=c.n(qc),Ec=Object(s["F"])("data-v-0473c402");Object(s["t"])("data-v-0473c402");var Nc={class:"architecture-page content-page"},Wc=Object(s["h"])("div",{class:"main-title"},[Object(s["h"])("span",{class:"index"},"3-1."),Object(s["g"])(" Architecture"),Object(s["h"])("span")],-1),zc=Object(s["h"])("hr",null,null,-1),Bc={class:"content-box"},Gc=Object(s["h"])("div",{class:"sub-title"},[Object(s["h"])("span",{class:"index"},"1."),Object(s["g"])(" Summary")],-1),Kc={class:"content-level-1"},Yc=Object(s["g"])(" Vue.js를 기반으로 한 프론트엔드 프로젝트는 SPA 아키텍쳐를 가지고 있습니다."),Qc=Object(s["h"])("br",null,null,-1),Xc=Object(s["g"])(" 그렇기에 Webpack을 통해 모듈 번들링 된 Static Assets에는 하나의 HTML 파일이 있으며 웹 브라우져는 이 파일을 기반으로하여 해석된 내용을 화면에 렌더링하게 됩니다. 2-1-2. Webpack의 "),Zc=Object(s["g"])("을 참고해보면 번들링이 끝난 HTML파일은 메타태그와 아주 간단한 <div> 태그만을 가지고 있는 것을 확인하실 수 있습니다. 본 장에서는 이토록 간단한 구성이 어떻게 SPA를 구축했는지, 그리고 이를 바탕으로 Vue.js가 어떻게 사용되는지를 설명하려 합니다. "),es={class:"content-box"},ts=Object(s["h"])("div",{class:"sub-title"},[Object(s["h"])("span",{class:"index"},"2."),Object(s["g"])(" 파일과 파일의 관계")],-1),cs=Object(s["h"])("div",{class:"content-level-1"},[Object(s["h"])("p",{class:"third-title"},[Object(s["h"])("span",{class:"index"},"#01."),Object(s["g"])(" index.html")]),Object(s["h"])("p",null," 누차 언급하고 있는 index.html은 아래와 같은 형태의 Static Assets입니다. "),Object(s["h"])("div",{class:"image-box"},[Object(s["h"])("img",{src:Tc.a}),Object(s["h"])("span",{class:"under-text"},"[ 심플한 index.html ]")]),Object(s["h"])("p",null,[Object(s["g"])(" 매우 심플하며, 이 이상 어떤 코드도 추가로 가지지 않습니다. 해당 파일에서 유념하셔야 할 항목은 "),Object(s["h"])("b",null,"<div>태그의 id가 'app'이라는 것"),Object(s["g"])("과 <body>태그안에 <script>태그로 build.js 파일이 선언되어있다는 점입니다. ")])],-1),ss=Object(s["h"])("div",{class:"content-level-1"},[Object(s["h"])("p",{class:"third-title"},[Object(s["h"])("span",{class:"index"},"#02."),Object(s["g"])(" build.js")]),Object(s["h"])("p",null,[Object(s["g"])(" (실제 index.html이 내포한 Javascript 파일명의 해시명은 생략하도록 하겠습니다)"),Object(s["h"])("br"),Object(s["g"])(" index.html이 매우 심플했기에, 우리는 build.js가 핵심역할을 한다는 걸 알 수 있습니다. Webpack이 모듈 번들링을 할 때 entry파일을 진입점으로하여 N개의 파일들을 정리하고 통합한다고 설명했었습니다. 그리고 그 결과로 생성되는 output 파일이 바로 이 build.js 입니다. "),Object(s["h"])("br"),Object(s["h"])("br"),Object(s["g"])(" 우리는 Vue.js를 하나의 프레임워크라고 정의합니다만, 결국 내부는 Javascript로 이루어져 있으며, 실제 서비스 단계에서는 Javascript로써 브라우져가 해석하고 동작하게 됩니다. ")]),Object(s["h"])("div",{class:"image-box"},[Object(s["h"])("img",{src:Hc.a}),Object(s["h"])("span",{class:"under-text"},"[ 실제 빌드된 build.js의 예시 ]")]),Object(s["h"])("p",null,[Object(s["g"])(" 위 캡쳐는 실제로 본 Vue Guide 페이지를 빌드한 이후에 생성된 build.js 파일의 코드입니다."),Object(s["h"])("br"),Object(s["g"])(" 보시는 것처럼, 빌드과정서 Minify와 Uglify가 적용되어 순수한 Javascript 형태로 코드가 생성되었음을 알 수 있습니다. ")]),Object(s["h"])("p",null,[Object(s["g"])(" 즉, 위와같이 entry파일내의 2번 영역에서 "),Object(s["h"])("b",null,"create App"),Object(s["g"])(" funtion을 통해 생성한 Vue Application를 활용해서 우리는 Vue.js 기반의 프론트엔드 개발을 할 수 있는 것이구요. 최종적으로 모듈 번들링이 끝나면 이 모든 코드들이 브라우져가 해석가능한 Javascript로 변환된다는 것입니다. "),Object(s["h"])("br"),Object(s["h"])("br"),Object(s["g"])(" 즉, "),Object(s["h"])("b",null,"N개의 *.vue파일과 *.js, *.json등과 같은 파일들이 서로간의 의존성(Dependency)를 바탕으로 정리 및 통합되어 하나의 output 파일(build.js)이 생성"),Object(s["g"])("된다는 것이죠. ")])],-1),bs={class:"content-level-1"},ns=Object(s["h"])("p",{class:"third-title"},[Object(s["h"])("span",{class:"index"},"#03."),Object(s["g"])(" main.js(entry 파일)")],-1),ls=Object(s["h"])("p",null," 최종적으로 배포되는 build.js가 생성되기 위해서는 아래와 같이, 진입점 역할을 하는 entry 파일이 필요하다고 2-1.2.Webpack의 3. 주요설정에서 설명했었습니다. 여기서는 그 entry파일에서 정의해줘야하는 주요 설정 및 코드를 알아보겠습니다. ",-1),as=Object(s["h"])("div",{class:"image-box"},[Object(s["h"])("img",{src:Ee.a}),Object(s["h"])("span",{class:"under-text"},"[ 실제 빌드된 build.js의 예시 ]")],-1),is=Object(s["h"])("div",{class:"content-level-2"},[Object(s["h"])("p",{class:"fourth-title"},"1) import 키워드(1번 영역)"),Object(s["h"])("p",null," import는 활용하고자하는 모듈을 가져오는 키워드입니다. entry 파일의 주 역할이 모듈로 나누어진 각 파일들의 진입점 역할을 한다는 것은 바꿔말하면, 관문의 역할이기때문에 해당 파일에 정의한 내역이 서비스 전체에 영향력을 행사할 수 있다는 것을 의미합니다. 그렇기 때문에 entry 파일에서는 전역으로 활용되어야하는 vue-router, vuex 같은 모듈들을 주로 import합니다. ")],-1),js=Object(s["h"])("div",{class:"content-level-2"},[Object(s["h"])("p",{class:"fourth-title"},"2) createApp"),Object(s["h"])("p",null,[Object(s["g"])(" (혹시 Vue.js의 버전을 2.x 로 보고 계시다면 하기의 별첨을 참고해주시기 바랍니다)"),Object(s["h"])("br"),Object(s["g"])(" Vue 3.x 부터는 functional한 형태로 필요 인스턴스들을 생성하여 활용하고 있으며 이를 위해 조금 변동된 사항이 있는데요. 기존 Vue 2.x에서는 Vue 인스턴스를 활용했지만 Vue 3.x 부터는 그 역할을 Vue Application 인스턴스가 대체하며, 이를 위해 createApp 함수가 제공된다는 것입니다. "),Object(s["h"])("br"),Object(s["h"])("br"),Object(s["g"])(" 인스턴스의 생성방법 또한 "),Object(s["h"])("b",null,"new Vue"),Object(s["g"])("라는 new 지시자를 통해 import 해 온 Vue 모듈을 다이렉트로 활용하였지만, "),Object(s["h"])("b",null,"Vue 3.x 부터는 createApp 라는 함수를 제공"),Object(s["g"])("하여 Vue Application 인스턴스를 생성하게 바뀌었습니다. "),Object(s["h"])("br"),Object(s["h"])("br"),Object(s["g"])(" 그로인해 기존에는 별첨과 같이 전역으로 활용할 모듈들(vue-router, vuex, 컴포넌트등)을 import한 Vue 모듈에 직접 주입하거나 Vue 인스턴스 생성시 파라미터 명시하였다면, 현재는 "),Object(s["h"])("b",null,"createApp을 통해 Vue Application 인스턴스를 먼저 생성하고, 생성된 인스턴스에 주입하여 활용"),Object(s["g"])("하게 되었습니다. "),Object(s["h"])("br"),Object(s["h"])("br"),Object(s["g"])(" createApp 함수의 파라미터는 entry 파일로부터 이어질 "),Object(s["h"])("b",null,[Object(s["g"])("최초의 진입점 열할을 할 Vue 파일이며,"),Object(s["h"])("br"),Object(s["g"])(" 이를 root component 라고 지칭")]),Object(s["g"])("합니다. ")])],-1),rs={class:"content-level-2"},Os=Object(s["h"])("p",{class:"fourth-title"},"2) router",-1),os=Object(s["g"])(" 다음 챕터인 "),us=Object(s["g"])("에서 좀 더 자세히 다룰 개념입니다."),hs=Object(s["h"])("br",null,null,-1),ps=Object(s["g"])(" 간단히 말하자면 SPA에서 URL의 변경에따라 그에 맞게 매핑된 화면을 렌더링해주는 역할을 합니다. "),ds={class:"content-level-2"},gs=Object(s["h"])("p",{class:"fourth-title"},"3) store",-1),vs=Object(s["g"])(" 전역으로 활용되거나, 특정 데이터의 저장이 필요한 경우 사용되는 개념이며 "),ms=Object(s["g"])("에서 좀 더 자세히 다룰 개념입니다. "),xs=Object(s["h"])("div",{class:"content-level-2"},[Object(s["h"])("p",{class:"fourth-title"},"4) use"),Object(s["h"])("p",null," 전역으로 활용하고자하는 모듈들을 플러그인이라는 형태로 Vue Application 인스턴스에 심어주는 역할을 합니다. 현재 예시에는 vue-router, vuex, 컴포넌트와 같이 가장 기본적인 코드를 보실 수 있으며, 이외에도 활용하고자하는 모듈이 있다면 use 함수를 통해 정의하시면 됩니다. ")],-1),fs=Object(s["h"])("div",{class:"content-level-2"},[Object(s["h"])("p",{class:"fourth-title"},"5) mount"),Object(s["h"])("p",null," createApp 함수를 통해 생성한 Vue Applicaiton 인스턴스가 어떤 HTML DOM에 렌더링 될 지를 정의합니다. 여기서 mount 함수의 파라미터로 쓰이는 값의 형태는 Javascript의 선택자(Selector)이며, 예시와 같이 '#app'을 전달할 경우 id 어트리뷰트가 app인 HTML DOM의 위치에 Vue Application 인스턴스를 렌더링하게 됩니다. ")],-1),ys=Object(s["h"])("div",{class:"content-level-2"},[Object(s["h"])("p",{class:"fourth-title"},"6) entry 파일의 요약 정리"),Object(s["h"])("p",null,"언급된 new Vue 키워드 사용시의 파라미터를 정리해보면, 아래와 같이 요약할 수 있습니다."),Object(s["h"])("div",{class:"gray-box"},[Object(s["h"])("p",null,"import : 전역으로 활용할 필요성이 있는 모듈들을 가져온다"),Object(s["h"])("p",null,"createApp : Vue Application 인스턴스를 생성한다"),Object(s["h"])("p",null,"router : URL의 변경에 따른 화면 전환을 위해 사용되는 vue-router를 정의한다"),Object(s["h"])("p",null,"store : 저장소 개념의 vuex를 활용하기 위해 정의한다"),Object(s["h"])("p",null,"use : 전역으로 활용할 모듈을 플러그인의 형태로 심는다."),Object(s["h"])("p",null,"mount : 렌더링 될 HTML DOM을 명시한다")])],-1),Ss=Object(s["h"])("div",{class:"content-level-1"},[Object(s["h"])("p",{class:"third-title"},[Object(s["h"])("span",{class:"index"},"#04."),Object(s["g"])(" 정리")]),Object(s["h"])("p",null," 정리해보면, index.html을 기점으로 해서 Vue 인스턴스가 생성되고 생성된 인스턴스가 가리키는 HTML DOM의 위치에 어떤 Vue 컴포넌트가 렌더링되는지에 대한 정의를 그림으로 모식화해보면 다음과 같습니다. "),Object(s["h"])("div",{class:"image-box"},[Object(s["h"])("img",{src:Fc.a}),Object(s["h"])("span",{class:"under-text"},"[ new Vue에 따른 파일간의 관계 모식도 ]")]),Object(s["h"])("div",{class:"gray-box"},[Object(s["h"])("p",null,"1. index.html은 id가 app인 div 태그를 가지며"),Object(s["h"])("p",null,"2. entry 역할을 하는 파일(main.js)은 createApp 함수를 통해 Vue Application 인스턴스를 생성하며"),Object(s["h"])("p",null,"3. 파라미터로 root component 역할을 할 Vue 파일, App.vue를 전달합니다."),Object(s["h"])("p",null,"4. use 함수를 통해 Vue Application 인스턴스 전역에서 활용할 플러그인(모듈)을 심어주고"),Object(s["h"])("p",null,"5. mount 함수에 '#app'을 전달함으로써 index.html의 id가 app인 div를 지정합니다"),Object(s["h"])("p",null,"6. 이로써 최종적으로는 index.html의 div 태그에 App.vue가 매핑되게 됩니다.")])],-1),Vs=Object(s["h"])("hr",null,null,-1),ks={class:"content-box"},_s=Object(s["h"])("div",{class:"sub-title"},[Object(s["h"])("span",{class:"index"},"-1."),Object(s["g"])(" 별첨")],-1),ws=Object(s["h"])("div",{class:"content-level-1"},[Object(s["h"])("p",{class:"third-title"},[Object(s["h"])("span",{class:"index"},"#01."),Object(s["g"])(" Vue 2.x의 entry 파일")]),Object(s["h"])("p",null,[Object(s["g"])(" 2-1-2. Webpack의 별첨에서 잠깐 언급했던 내용으로 Vue 2.x에서는 아래와 유사한 형태로 entry 파일이 구성 될 겁니다."),Object(s["h"])("br")]),Object(s["h"])("div",{class:"image-box"},[Object(s["h"])("img",{src:st.a}),Object(s["h"])("span",{class:"under-text"},"[ Vue 2.x 버전에서의 entry 파일 ]")]),Object(s["h"])("p",null,[Object(s["g"])(" 필요한 모듈들을 import하는 부분은 Javscript의 ES6에 기조하기 때문에 Vue 2.x든 3.x든 상관없이 동일합니다."),Object(s["h"])("br"),Object(s["g"])(" 다만 use 함수를 통해 플러그인을 심는 방법을 보면, 모듈로 가져온 "),Object(s["h"])("b",null,"Vue 객체에 다이렉트로 심어주며"),Object(s["g"])(" createApp을 통해 Vue Application 인스턴스를 생성하는 Vue 3.x와는 달리 "),Object(s["h"])("b",null,"new Vue 지시자를 통해 Vue 인스턴스를 생성"),Object(s["g"])("하는 차이가 있습니다."),Object(s["h"])("br"),Object(s["g"])(" 그리고 이때, Vue 인스턴스에서 필요로 하는 것들을 파라미터의 형태로 정의합니다. ")])],-1),As={class:"content-level-1"},Cs=Object(s["h"])("p",{class:"third-title"},[Object(s["h"])("span",{class:"index"},"#02."),Object(s["g"])(" new Vue")],-1),Ms=Object(s["h"])("div",{class:"content-level-2"},[Object(s["h"])("p",{class:"fourth-title"},"1) el"),Object(s["h"])("p",null,[Object(s["g"])(" index.html의 <body>태그 안에 있던 <div>태그는 id로 'app'를 가지고 있었습니다. 그리고 entry 역할을 하는 main.js에서는 위의 3번영역과 같이 new Vue 키워드를 통해 Vue 인스턴스를 생성하고 있습니다. 그리고 이 때 전달된 파라미터중에는 "),Object(s["h"])("b",null,"el: '#app'"),Object(s["g"])("이라는 값이 있는데요. 여기서 el은 element의 약어이며 '#app'는 id가 'app'인 HTML DOM 태그를 가리킵니다. 즉, "),Object(s["h"])("b",null,"new Vue를 통해 생성한 Vue 인스턴스를 id가 app인 DOM 태그에 렌더링하겠다"),Object(s["g"])("라는 의미입니다. ")])],-1),Rs={class:"content-level-2"},Ls=Object(s["h"])("p",{class:"fourth-title"},"2) router & store",-1),Is=Object(s["g"])(" router와 store는 앞서 말씀드린 내용과 같이 각각 "),$s=Object(s["g"])(", "),Ps=Object(s["g"])("에서 좀 더 자세히 설명합니다."),Ts=Object(s["h"])("br",null,null,-1),Ds={class:"content-level-2"},Hs=Object(s["h"])("p",{class:"fourth-title"},"3) components & template",-1),Us=Object(s["h"])("p",null,[Object(s["g"])(" Vue.js에서는 모든 *.vue 파일들을 '컴포넌트'라는 단위로 정의할 수 있습니다."),Object(s["h"])("br"),Object(s["g"])(" 이는 webpack에서 정의하는 '모듈'의 단위와 크게 다르지않는데요."),Object(s["h"])("br"),Object(s["h"])("br"),Object(s["g"])(" Webpack을 통해 모듈 번들링을 하면, 각 모듈(파일)들이 가지고 있는 의존성을 바탕으로 관계를 정리하여, 하나의 통합된 build.js로 변환한다는 것을 설명했었습니다. 이때, components 파라미터는 아래 코드와 같이 import 해 온 다른 Vue 컴포넌트를 해당 Vue 파일내에서 활용하겠다고 명시적으로 정의하는 파라미터입니다. ")],-1),Fs=Object(s["h"])("div",{class:"image-box"},[Object(s["h"])("img",{src:Jc.a}),Object(s["h"])("span",{class:"under-text"},"[ new Vue의 root component로 전달되는 App.vue ]")],-1),qs=Object(s["g"])(" 더불어 이렇게 components 파라미터에 정의한 컴포넌트는 template 파라미터에서 태그 형태로 명시함으로써 실제 화면에 렌더링이 되게 됩니다. 이때, template에 사용되는 태그명은 components에 정의한 형태가 기본형이며 alias기능을 사용할 수도 있습니다. (이에 대한 상세 설명은 "),Js=Object(s["g"])("에 있습니다) "),Es=Object(s["h"])("br",null,null,-1),Ns=Object(s["h"])("br",null,null,-1),Ws=Object(s["h"])("div",{class:"content-level-2"},[Object(s["h"])("p",{class:"fourth-title"},"5) 파라미터들 정리"),Object(s["h"])("p",null,"언급된 new Vue 키워드 사용시의 파라미터를 정리해보면, 아래와 같이 요약할 수 있습니다."),Object(s["h"])("div",{class:"gray-box"},[Object(s["h"])("p",null,"el : Vue 인스턴스가 렌더링 될 HTML DOM 태그를 정의"),Object(s["h"])("p",null,"router : URL의 변경에 따른 화면 전환을 위해 사용되는 vue-router를 정의"),Object(s["h"])("p",null,"store : 저장소 개념의 vuex를 활용하기 위해 정의"),Object(s["h"])("p",null,"components: import를 통해 해당 인스턴스 내에서 활용 될 vue 컴포넌트"),Object(s["h"])("p",null,"template: 해당 영역에 렌더링 될 컴포넌트의 태그")])],-1),zs=Object(s["h"])("hr",null,null,-1),Bs={class:"bottom-navigation"},Gs=Object(s["g"])(" 3-2. Router    ");Object(s["r"])();var Ks=Ec((function(e,t,c,b,n,l){var a=Object(s["y"])("toy-icon");return Object(s["q"])(),Object(s["d"])("div",Nc,[Wc,zc,Object(s["h"])("div",Bc,[Gc,Object(s["h"])("div",Kc,[Object(s["h"])("p",null,[Yc,Qc,Xc,Object(s["h"])("span",{class:"inner-link",onClick:t[1]||(t[1]=function(t){return e.$router.push("/base/mandatory/webpack")})},"0.Webpack의 결과물"),Zc])])]),Object(s["h"])("div",es,[ts,cs,ss,Object(s["h"])("div",bs,[ns,ls,as,is,js,Object(s["h"])("div",rs,[Os,Object(s["h"])("p",null,[os,Object(s["h"])("span",{class:"inner-link",onClick:t[2]||(t[2]=function(t){return e.$router.push("/skill/router")})},"3-2. Router"),us,hs,ps])]),Object(s["h"])("div",ds,[gs,Object(s["h"])("p",null,[vs,Object(s["h"])("span",{class:"inner-link",onClick:t[3]||(t[3]=function(t){return e.$router.push("/skill/store")})},"3-6. Store"),ms])]),xs,fs,ys]),Ss]),Vs,Object(s["h"])("div",ks,[_s,ws,Object(s["h"])("div",As,[Cs,Ms,Object(s["h"])("div",Rs,[Ls,Object(s["h"])("p",null,[Is,Object(s["h"])("span",{class:"inner-link",onClick:t[4]||(t[4]=function(t){return e.$router.push("/skill/router")})},"3-2. Router"),$s,Object(s["h"])("span",{class:"inner-link",onClick:t[5]||(t[5]=function(t){return e.$router.push("/skill/store")})},"3-6. Store"),Ps,Ts])]),Object(s["h"])("div",Ds,[Hs,Us,Fs,Object(s["h"])("p",null,[qs,Object(s["h"])("span",{class:"inner-link",onClick:t[6]||(t[6]=function(t){return e.$router.push("/skill/component")})},"3-5. Component"),Js,Es,Ns])]),Ws])]),zs,Object(s["h"])("div",Bs,[Object(s["h"])("div",{class:"right",onClick:t[7]||(t[7]=function(t){return e.$router.push("/skill/router")})},[Gs,Object(s["h"])(a,{icon:"arrow-right"})])])])})),Ys={name:"architecture"};Ys.render=Ks,Ys.__scopeId="data-v-0473c402";var Qs=Ys,Xs=c("b122"),Zs=c.n(Xs),eb=c("375c"),tb=c.n(eb),cb=c("4415"),sb=c.n(cb),bb=c("7a75"),nb=c.n(bb),lb=c("7d80"),ab=c.n(lb),ib=c("7a21"),jb=c.n(ib),rb=c("b481"),Ob=c.n(rb),ob=c("aeb6"),ub=c.n(ob),hb=c("a214"),pb=c.n(hb),db=c("e197"),gb=c.n(db),vb=Object(s["F"])("data-v-cc43d278");Object(s["t"])("data-v-cc43d278");var mb={class:"router-page content-page"},xb=Object(s["h"])("div",{class:"main-title"},[Object(s["h"])("span",{class:"index"},"3-2."),Object(s["g"])(" Router"),Object(s["h"])("span",{class:"mini-title"},"(vue-router)")],-1),fb=Object(s["h"])("hr",null,null,-1),yb=Object(s["h"])("div",{class:"content-box"},[Object(s["h"])("div",{class:"sub-title"},[Object(s["h"])("span",{class:"index"},"1."),Object(s["g"])(" Summary")]),Object(s["h"])("div",{class:"content-level-1"},[Object(s["h"])("p",null,[Object(s["g"])(" 대부분의 웹 서비스는 N개의 화면들로 이루어져 있으며, URL의 변경에 따라 알맞게 매핑된 화면들이 호출되게 됩니다."),Object(s["h"])("br"),Object(s["g"])(" 예를 들어, JSP를 기반으로 한 http://www.uidev.com 라는 사이트가 있다고 가정하겠습니다. 이때 사용자가 http://www.uidev.com/main.do 라는 URL로 접근을 한다면 가장 뒤에 붙은 'main.do'가 path의 역할을 담당하며 그에 맞게 매핑된 main.jsp와 같은 파일을 호출하게 됩니다. "),Object(s["h"])("br"),Object(s["h"])("br"),Object(s["g"])(" SPA 형태로 제공되는 웹 서비스도 이와크게 다르지 않습니다. URL의 변경에 따라 그에 맞게 매핑된 화면이 호출되게 되는데요. 다만, 기존의 jsp나 php등에서는 URL의 변경을 웹 브라우져가 인지해서 서버로 요청하는 방식이었다면, SPA는 브라우져가 해석하는 정적파일(HTML)이 하나인 서비스이기 때문에, "),Object(s["h"])("b",null,"URL의 변경을 브라우져가 인지하는 대신에 이와 유사하게 동작하도록 npm 패키지의 도움"),Object(s["g"])("을 받습니다. "),Object(s["h"])("br"),Object(s["h"])("br"),Object(s["g"])(" Vue.js의 경우 "),Object(s["h"])("b",null,"vue-router"),Object(s["g"])("라는 npm 패키지가 해당 역할을 합니다. ")])])],-1),Sb=Object(s["h"])("div",{class:"content-box"},[Object(s["h"])("div",{class:"sub-title"},[Object(s["h"])("span",{class:"index"},"2."),Object(s["g"])(" 설치하기")]),Object(s["h"])("div",{class:"content-level-1"},[Object(s["h"])("p",null,[Object(s["g"])(" vue-router 패키지를 프로젝트에 설치하는 방법에는 2가지가 있습니다."),Object(s["h"])("br")]),Object(s["h"])("div",{class:"gray-box"},[Object(s["h"])("p",null,[Object(s["g"])("1. "),Object(s["h"])("b",null,"npm install vue-router@4"),Object(s["g"])("명령어를 직접 실행")]),Object(s["h"])("p",null,[Object(s["g"])("2. package.json에 패키지 명과 버전명을 명시한 후 "),Object(s["h"])("b",null,"npm install"),Object(s["g"])("명령어 실행")])]),Object(s["h"])("div",{class:"image-box"},[Object(s["h"])("img",{src:Zs.a}),Object(s["h"])("span",{class:"under-text"},"[ package.json의 vue-router 명시 ]")]),Object(s["h"])("p",null," 패키지의 설치가 완료되었다면, 이제 활용할 Vue Application 객체에 vue-router를 사용하겠다고 정의해주어야 합니다. 정의해주는 위치는 Vue Application 객체에 use 함수를 이용해 플러그인형태로 심어주시면 됩니다. "),Object(s["h"])("div",{class:"image-box"},[Object(s["h"])("img",{src:tb.a}),Object(s["h"])("span",{class:"under-text"},"[ 엔트리파일의 vue-router 명시 ]")])])],-1),Vb=Object(s["h"])("div",{class:"content-box"},[Object(s["h"])("div",{class:"sub-title"},[Object(s["h"])("span",{class:"index"},"3."),Object(s["g"])(" Router의 구성")]),Object(s["h"])("div",{class:"content-level-1"},[Object(s["h"])("p",{class:"third-title"},[Object(s["h"])("span",{class:"index"},"#01."),Object(s["g"])(" 모식도")]),Object(s["h"])("p",null," 앞선 3-1. Architecture의 말미에 첨부된 파일간의 관계 모식도에 Router 역할을 하는 index.js를 추가해보았습니다. "),Object(s["h"])("div",{class:"image-box"},[Object(s["h"])("img",{src:sb.a}),Object(s["h"])("span",{class:"under-text"},"[ router에 대한 관계도가 추가된 모식도 ]")]),Object(s["h"])("p",null,[Object(s["g"])(" 위 모식도와 같이 index.js 파일의 createRouter 함수를 통해 Router 인스턴스가 생성됩니다. 이때 Router 생성시 파라미터로 전달되는 값에는 URL의 path와 path에 매핑된 화면(Vue 컴포넌트)들이 정의되어지며, entry 역할을 하는 main.js에 해당 Router 인스턴스가 모듈로써 import 되게 됩니다. "),Object(s["h"])("br"),Object(s["h"])("br"),Object(s["g"])(" 이렇게 import 된 Router 인스턴스는 활용될 Vue Application 인스턴스에 플러그인으로 심어지게되며, 이렇게 전달된 "),Object(s["h"])("b",null,"Router 인스턴스는 Vue.js의 내부로직에 따라 App.vue의 <router-view>태그영역에 자리잡게 됩니다."),Object(s["g"])(" 즉, 이후 URL이 변경될 겨우 Router 인스턴스가 변경을 인지하고 router.js에 정의된 내용을 기반으로 매핑된 Vue 컴포넌트들이 <router-view>태그 위치에 스위칭되듯이 렌더링되게 되는 것입니다. ")])]),Object(s["h"])("div",{class:"content-level-1"},[Object(s["h"])("p",{class:"third-title"},[Object(s["h"])("span",{class:"index"},"#02."),Object(s["g"])(" URL에 따른 매핑예제")]),Object(s["h"])("p",null," URL에 매핑될 컴포넌트는 아래와 같이 모듈로써 import되어야하며, 이를 통해 적절한 URL과 매핑하는 방식을 소개합니다. "),Object(s["h"])("div",{class:"image-box"},[Object(s["h"])("img",{src:nb.a}),Object(s["h"])("span",{class:"under-text"},"[ router.js의 import 영역 ]")]),Object(s["h"])("div",{class:"content-level-2"},[Object(s["h"])("p",{class:"fourth-title"},"1) component 매핑"),Object(s["h"])("p",null," 가장 일반적인 경우이며 path와 Vue 컴포넌트를 아래와 같이 직접 정의합니다. "),Object(s["h"])("div",{class:"image-box"},[Object(s["h"])("img",{src:ab.a}),Object(s["h"])("span",{class:"under-text"},"[ path와 component의 매핑 ]")]),Object(s["h"])("p",null,[Object(s["g"])(" 웹 서비스의 host가 http://www.vue.com 이라고 가정한다면,"),Object(s["h"])("br"),Object(s["g"])(" 'http://www.vue.com/#"),Object(s["h"])("b",null,"/home"),Object(s["g"])("'로 접근시 import된 Home 컴포넌트가 App.vue의 "),Object(s["h"])("br"),Object(s["g"])("<router-view> 태그 위치에 렌더링되게 됩니다. ")])]),Object(s["h"])("div",{class:"content-level-2"},[Object(s["h"])("p",{class:"fourth-title"},"2) redirect 경로 설정"),Object(s["h"])("p",null," 이 방법의 경우 특정 URL로 접근시, Vue 컴포넌트를 매핑하여 호출하는게 아니라 다른 경로로 URL을 강제 변경하여 한 번 더 router를 이동하게 됩니다. "),Object(s["h"])("div",{class:"image-box"},[Object(s["h"])("img",{src:jb.a}),Object(s["h"])("span",{class:"under-text"},"[ path와 redirect간의 정의 ]")]),Object(s["h"])("p",null,[Object(s["g"])(" 이 경우는 'http://www.uidev.com/#"),Object(s["h"])("b",null,"/base"),Object(s["g"])("'로 접근시 'http://www.uidev.com/#"),Object(s["h"])("b",null,"/base/mandatory"),Object(s["g"])("'로 경로가 변경되게되며 본예제를 기준으로는 한 번 더 'http://www.uidev.com/#"),Object(s["h"])("b",null,"/base/mandatory/spa"),Object(s["g"])("'로 URL이 변경되어 BaseSpa 컴포넌트가 App.vue의 <router-view> 태그 위치에 렌더링되게 됩니다. ")])]),Object(s["h"])("div",{class:"content-level-2"},[Object(s["h"])("p",{class:"fourth-title"},"3) children 설정"),Object(s["h"])("p",null," 웹 서비스의 메뉴를 구성하다보면 트리의 형태를 띄는 경우가 많으며 이 경우엔 공통된 키워드가 path에 반복적으로 사용되는 경우가 잦습니다. "),Object(s["h"])("div",{class:"image-box"},[Object(s["h"])("img",{src:Ob.a}),Object(s["h"])("span",{class:"under-text"},"[ router path의 children 설정 ]")]),Object(s["h"])("p",null,[Object(s["g"])(" 위 코드에서는 '/main'라는 path에 대해서 children이 배열로 정의되어 있습니다."),Object(s["h"])("br"),Object(s["g"])(" 이때 children 배열안에 정의된 요소들의 path에는 '/main'가 빠져있지만, 실제 URL을 통한 접근시에는 'http://www.vue.com/#"),Object(s["h"])("b",null,"/main/intro"),Object(s["g"])("'로 접근해야 Intro 라는 컴포넌트가 렌더링되며"),Object(s["h"])("br"),Object(s["g"])(" 만약 '/main'를 기입하지않고 'http://www.uidev.com/#"),Object(s["h"])("b",null,"/intro"),Object(s["g"])("'로 이동을 하려하면 해당 path에 매핑된 컴포넌트가 존재하지 않기 때문에 Router에 정의한 사항을 따라 404 Not found 페이지로 이동하게 됩니다. ")])])]),Object(s["h"])("div",{class:"content-level-1"},[Object(s["h"])("p",{class:"third-title"},[Object(s["h"])("span",{class:"index"},"#03."),Object(s["g"])(" 네비게이션 가드")]),Object(s["h"])("p",null,[Object(s["g"])(" URL에 따른 Router 이동시 권한이나, 사용자의 세션등을 체크하는 로직이 필요한 경우가 종종 있는데 vue-router는 이를 위해 네비게이션 가드(Navigation Guard)라는 개념을 가지고 있습니다. "),Object(s["h"])("br"),Object(s["h"])("br"),Object(s["g"])(" 그 중에서도 가장 많이 쓰이는 beforeEach와 beforeRouteLeave를 소개합니다. ")]),Object(s["h"])("div",{class:"content-level-2"},[Object(s["h"])("p",{class:"fourth-title"},"1) beforeEach"),Object(s["h"])("p",null,[Object(s["g"])(" beforeEach는 URL의 변경에 따른 Router의 이동시마다 전역레벨에서 사용되는 훅(Hook)입니다."),Object(s["h"])("br"),Object(s["g"])(" 따라서 beforeEach가 정의되는 위치는 createRouter 키워드를 통해 생성된 Router 인스턴스와 함께 있어야하며 아래와 같은 코드로 활용되게 됩니다. ")]),Object(s["h"])("div",{class:"image-box"},[Object(s["h"])("img",{src:ub.a}),Object(s["h"])("span",{class:"under-text"},"[ router의 beforeEach ]")]),Object(s["h"])("p",null," beforeEach는 기본적으로 3개의 기본 파라미터를 가지며 각각의 객체가 가진 정보를 바탕으로 추가 로직을 구현할수도 있고 Store를 활용할 수도 있습니다. "),Object(s["h"])("div",{class:"gray-box"},[Object(s["h"])("p",null,"1. to : URL의 변경에 따른 다음 경로에 대한 정보가 담긴 객체"),Object(s["h"])("p",null,"2. from : URL의 변경으로 이동해 온 이전 경로에 대한 정보가 담긴 객체"),Object(s["h"])("p",null,"3. next : Router의 이동을 주관하는 콜백함수")]),Object(s["h"])("p",null,[Object(s["g"])(" 이 때 주의해야 할 점이 있는데, beforeEach 훅을 사용했을 경우에는 "),Object(s["h"])("b",null,"정상적으로 Router를 이동시켜주기위해 반드시 next(); 콜백함수를 호출"),Object(s["g"])("해 줘야합니다. 만약 훅을 정의하고 해당 콜백함수를 호출하지 않는다면, Router가 이동을 하지 않게됩니다. 또한, 특정 조건에 따라 이동하는 경로를 해당 Hook에서 비틀고 싶을 경우 next('/another')과 같이 "),Object(s["h"])("b",null,"next 콜백함수의 파라미터로 경로를 주입"),Object(s["g"])("할 수 있습니다. ")])]),Object(s["h"])("div",{class:"content-level-2"},[Object(s["h"])("p",{class:"fourth-title"},"2) beforeRouteLeave"),Object(s["h"])("p",null,[Object(s["g"])(" beforeRouteLeave는 컴포넌트의 내부 가드입니다."),Object(s["h"])("br"),Object(s["g"])(" 즉, beforeEach와 달리 전역에서 사용되는 훅이 아니라 선언된 컴포넌트에 한정적이며, URL의 변경에 따라 현재 컴포넌트를 다른 컴포넌트로로 변경되기 전에 호출이 되게 됩니다. ")]),Object(s["h"])("div",{class:"image-box"},[Object(s["h"])("img",{src:pb.a}),Object(s["h"])("span",{class:"under-text"},"[ router의 beforeRouteLeave ]")]),Object(s["h"])("p",null,[Object(s["g"])(" beforeEach 훅과 동일한 3개의 객체&콜백함수를 파라미터로 가지며, 마찬가지로 "),Object(s["h"])("b",null,"정상적인 URL의 이동을 위해서는 next(); 콜백함수를 호출"),Object(s["g"])("해주어야 합니다. ")])])])],-1),kb=Object(s["h"])("div",{class:"content-box"},[Object(s["h"])("div",{class:"sub-title"},[Object(s["h"])("span",{class:"index"},"4."),Object(s["g"])(" Router의 사용")]),Object(s["h"])("div",{class:"content-level-1"},[Object(s["h"])("p",null," new Router 키워드를 통해 생성된 Router 인스턴스는, 개발 및 운영시에 아래와 같은 2개의 전역 객체를 가지게 됩니다. "),Object(s["h"])("div",{class:"gray-box"},[Object(s["h"])("p",null,"this.$route : 현재 전역으로 생성된 Router 인스턴스의 종합정보객체"),Object(s["h"])("p",null,"this.$router : $route와 달리, 순수한 Router 객체")]),Object(s["h"])("p",null,[Object(s["g"])(" 현재 경로나 router.js에 정의된 path&component 정보, 페이지 이동시 전달된 query파라미터와 같이 인스턴스화해서 사용중인 Router객체가 내포하고 있는 '정보'를 알고 싶다면 this.$route 객체를 참고하셔야 합니다. "),Object(s["h"])("br"),Object(s["h"])("br")]),Object(s["h"])("p",null," 만약 그게 아니라, 페이지를 이동시키거나 옵션을 변경하는 것과 같이 vue-router 라는 패키지에 정의된 Router 자체에 특정 액션을 취해야하는 경우에는 this.$router 객체를 활용해 주셔야합니다. 그래서 우리는 흔히 GNB나 LNB, 버튼이나 링크를 통해 URL을 변경하고 페이지를 전환하고자 할 때에는 아래와 같이 this.$router.push('경로')의 방식으로 Router를 이동시켜줍니다. "),Object(s["h"])("div",{class:"image-box"},[Object(s["h"])("img",{src:gb.a}),Object(s["h"])("span",{class:"under-text"},"[ 루트 경로로 이동하는 this.$router.push ]")]),Object(s["h"])("p",null,[Object(s["g"])(" this.$router.push를 통한 라우터의 이동은 <template>영역의 이벤트에 정의할 수도 있고"),Object(s["h"])("br"),Object(s["g"])(" <script>에서도 선언하여 활용할 수 있습니다. ")])])],-1),_b=Object(s["h"])("hr",null,null,-1),wb=Object(s["h"])("div",{class:"content-box"},[Object(s["h"])("div",{class:"sub-title"},[Object(s["h"])("span",{class:"index"},"-1."),Object(s["g"])(" 별첨")]),Object(s["h"])("div",{class:"content-level-1"},[Object(s["h"])("p",{class:"third-title"},[Object(s["h"])("span",{class:"index"},"#01."),Object(s["g"])(" Vue 2.x의 vue-router 설치")]),Object(s["h"])("p",null,[Object(s["g"])(" 앞선 목차들에서 설명했던 것처럼, Vue 3.x 버전부터는 Vue.js의 활용법이 전면적으로 변경되었기 때문에 연계된 vue-router와 같은 3rd 파티 패키지들의 설치 버전도 조금 달라지게 되었습니다. 따라서 Vue 3.x 버전을 사용하시는 경우에는 흔히 쓰는 방식인 "),Object(s["h"])("b",null,"npm install vue-router 명령어를 사용하시면 안 되구요."),Object(s["g"])(" 본문의 2. 설치하기 항목에 안내된 것과 같이 "),Object(s["h"])("b",null,"npm install vue-router@4"),Object(s["g"])("처럼 버전까지 명시해주셔야 합니다. (vue-router는 버전을 갈라침으로써 Vue 2.x와 3.x에 대응하고 있습니다) ")]),Object(s["h"])("div",{class:"gray-box"},[Object(s["h"])("p",null,[Object(s["g"])("1. Vue 2.x 를 쓰신다면 : "),Object(s["h"])("b",null,"npm install vue-router")]),Object(s["h"])("p",null,[Object(s["g"])("2. Vue 3.x 를 쓰신다면 : "),Object(s["h"])("b",null,"npm install vue-router@4")])])]),Object(s["h"])("div",{class:"content-level-1"},[Object(s["h"])("p",{class:"third-title"},[Object(s["h"])("span",{class:"index"},"#02."),Object(s["g"])(" URL에 '#'이 붙는 이유")]),Object(s["h"])("p",null,[Object(s["g"])(" 웹에서 URL을 인지하는 주체는 웹 브라우져이며, 브라우져가 URL의 변경을 감지하고 그에 알맞은 요청을 함으로써 적절한 웹 페이지가 로딩되어 렌더링되게 됩니다. "),Object(s["h"])("br"),Object(s["h"])("br"),Object(s["g"])(" 하지만 Vue.js나 React.js와 같은 SPA기반의 프론트엔드 프레임워크에서는 브라우져가 해석하는 정적파일(HTML)이 하나이기 때문에 URL이 변경되더라도 타 사이트로의 이동이 아닌이상 별도의 요청이 발생하지 않아야합니다. 하지만 SPA환경에서도 화면의 변경은 가능해야했고 이에 연동된 URL의 변경은 불가피한 것이었기에 Router의 역할을 하는 npm 패키지들은 URL의 path영역에 해시태그(#)를 끼워넣음으로써 브라우져가 URL의 변경을 인지하지 못 하도록 하였습니다. "),Object(s["h"])("br"),Object(s["h"])("br"),Object(s["g"])(" 물론, 이러한 해시태그를 사용하지 않고 기존과 같은 URL형태를 유지하는 history 모드도 제공되고 있습니다만 일반적인 SPA에서는 URL에 해시태그가 존재하고 해시태그의 뒷부분을 path의 개념으로 각 화면에 매핑해주게 됩니다. ")])])],-1),Ab=Object(s["h"])("hr",null,null,-1),Cb={class:"bottom-navigation"},Mb=Object(s["g"])("    3-1. Architecture "),Rb=Object(s["g"])(" 3-3. Axios(ajax)    ");Object(s["r"])();var Lb=vb((function(e,t,c,b,n,l){var a=Object(s["y"])("toy-icon");return Object(s["q"])(),Object(s["d"])("div",mb,[xb,fb,yb,Sb,Vb,kb,_b,wb,Ab,Object(s["h"])("div",Cb,[Object(s["h"])("div",{class:"left",onClick:t[1]||(t[1]=function(t){return e.$router.push("/skill/architecture")})},[Object(s["h"])(a,{icon:"arrow-left"}),Mb]),Object(s["h"])("div",{class:"right",onClick:t[2]||(t[2]=function(t){return e.$router.push("/skill/axios")})},[Rb,Object(s["h"])(a,{icon:"arrow-right"})])])])})),Ib={name:"router"};Ib.render=Lb,Ib.__scopeId="data-v-cc43d278";var $b=Ib,Pb=c("5035"),Tb=c.n(Pb),Db=c("e8df"),Hb=c.n(Db),Ub=c("1418"),Fb=c.n(Ub),qb=c("61e2"),Jb=c.n(qb),Eb=c("faf2"),Nb=c.n(Eb),Wb=Object(s["F"])("data-v-2102f9e5");Object(s["t"])("data-v-2102f9e5");var zb={class:"axios-page content-page"},Bb=Object(s["h"])("div",{class:"main-title"},[Object(s["h"])("span",{class:"index"},"3-3."),Object(s["g"])(" Axios"),Object(s["h"])("span",{class:"mini-title"},"(ajax)")],-1),Gb=Object(s["h"])("hr",null,null,-1),Kb=Object(s["h"])("div",{class:"content-box"},[Object(s["h"])("div",{class:"sub-title"},[Object(s["h"])("span",{class:"index"},"1."),Object(s["g"])(" Summary")]),Object(s["h"])("div",{class:"content-level-1"},[Object(s["h"])("p",null," Vue.js는 REST API 체계로 지원되는 백엔드와의 ajax를 위해, axios라는 3rd 파티 라이브러리(npm 패키지)를 추천하고 있습니다. 해당 패키지는 package.json에 정의되어있으며 npm install 명령어를 통해 설치할 수 있습니다. ")])],-1),Yb=Object(s["h"])("div",{class:"content-box"},[Object(s["h"])("div",{class:"sub-title"},[Object(s["h"])("span",{class:"index"},"2."),Object(s["g"])(" 사용법")]),Object(s["h"])("div",{class:"content-level-1"},[Object(s["h"])("p",{class:"third-title"},[Object(s["h"])("span",{class:"index"},"#01."),Object(s["g"])(" 전역속성으로 할당하기")]),Object(s["h"])("p",null," Axios를 선언하는 방법은 아래 2가지가 있습니다. "),Object(s["h"])("div",{class:"gray-box"},[Object(s["h"])("p",null,"1. 필요한 *.vue 파일마다 import 해주는 방법"),Object(s["h"])("p",null,"2. Vue Application내의 전역 속성으로 Axios를 심어서 this.$router와 같이 코드 어디서든 사용하는 방법")]),Object(s["h"])("p",null," 대부분의 웹 서비스에서의 클라이언트는, 백엔드와의 연계가 필수적이기때문에 보편적으로 2번 방법을 사용하며, 본 Vue 가이드와 함께 제공되는 Vue 스타터에도 아래와 같이 Vue Application 인스턴스의 전역속성으로 Axios를 등록해놓았습니다. "),Object(s["h"])("div",{class:"image-box"},[Object(s["h"])("img",{src:Tb.a}),Object(s["h"])("span",{class:"under-text"},"[ Vue Application의 전역 속성에 axios를 주입 ]")]),Object(s["h"])("p",null,[Object(s["g"])(" 위와 같이 createApp 함수로 생성한 Vue Application 객체가 가지고있는 "),Object(s["h"])("b",null,"globalProperties라는 전역속성"),Object(s["g"])("에 axios를 심어줬으며, 실제 Vue 파일내에서는 아래와 같이 this.axios 라는 객체명을 통해 Axios의 ajax 기능을 활용할 수 있습니다. ")])]),Object(s["h"])("div",{class:"content-level-1"},[Object(s["h"])("p",{class:"third-title"},[Object(s["h"])("span",{class:"index"},"#02."),Object(s["g"])(" HTTP Method 별로 통신하기")]),Object(s["h"])("p",null,[Object(s["g"])(" globalProperties에 등록하였기때문에, Vue 파일 어디서든 this.axios라는 객체명으로 Axios의 기능을 활용하실 수 있습니다. 이 객체는 아래와 같이 각각의 HTTP Method명과 동일한 function을 내장하고 있습니다. 첫번째 파라미터는 백엔드의 REST API로 정의되어있는 URI로 공통이며 두번째 파라미터부터는 백엔드와 연계하여 전달해주는 값을 JSON 객체의 형태로 던짐으로써, 직렬화를 통해 REST API가 필요로 하는 데이터를 받아서 처리하게 됩니다. "),Object(s["h"])("br"),Object(s["h"])("br")]),Object(s["h"])("div",{class:"content-level-2"},[Object(s["h"])("p",{class:"fourth-title"},"1) get"),Object(s["h"])("div",{class:"image-box"},[Object(s["h"])("img",{src:Hb.a}),Object(s["h"])("span",{class:"under-text"},"[ this.$http의 get method 사용법 ]")])]),Object(s["h"])("div",{class:"content-level-2"},[Object(s["h"])("p",{class:"fourth-title"},"2) post"),Object(s["h"])("div",{class:"image-box"},[Object(s["h"])("img",{src:Fb.a}),Object(s["h"])("span",{class:"under-text"},"[ this.$http의 post method 사용법 ]")])]),Object(s["h"])("div",{class:"content-level-2"},[Object(s["h"])("p",{class:"fourth-title"},"3) put"),Object(s["h"])("div",{class:"image-box"},[Object(s["h"])("img",{src:Jb.a}),Object(s["h"])("span",{class:"under-text"},"[ this.$http의 put method 사용법 ]")])]),Object(s["h"])("div",{class:"content-level-2"},[Object(s["h"])("p",{class:"fourth-title"},"4) delete"),Object(s["h"])("div",{class:"image-box"},[Object(s["h"])("img",{src:Nb.a}),Object(s["h"])("span",{class:"under-text"},"[ this.$http의 delete method 사용법 ]")])])])],-1),Qb=Object(s["h"])("hr",null,null,-1),Xb=Object(s["h"])("div",{class:"content-box"},[Object(s["h"])("div",{class:"sub-title"},[Object(s["h"])("span",{class:"index"},"-1."),Object(s["g"])(" 별첨")]),Object(s["h"])("div",{class:"content-level-1"},[Object(s["h"])("p",{class:"third-title"},[Object(s["h"])("span",{class:"index"},"#01."),Object(s["g"])(" 백엔드가 Axios와 통신할 때 데이터를 받는 법")]),Object(s["h"])("p",null,[Object(s["g"])(" Axios는 사실 단독으로 활용이 불가능한 npm 패키지라고 할 수 있습니다. 태생자체가 백엔드의 REST API와 연계할 때 활용하고자 만들어졌기 때문입니다. REST API를 개발하는 백엔드측에서는 아래와 같은 4가지 방식으로 Axios를 이용하는 프론트엔드로부터 '값'들을 받을 수 있습니다."),Object(s["h"])("br")]),Object(s["h"])("div",{class:"gray-box"},[Object(s["h"])("p",null,"1. PathVariable : REST API의 URL 경로에 값을 포함시켜 보냄."),Object(s["h"])("p",null,"2. ModelAttribute : 전달하려는 값의 형태가 Object 형태일 경우에 사용."),Object(s["h"])("p",null,"3. RequestParam : 전달하려는 값의 형태가 JAVA의 원시타입(Primitive)일 경우 사용."),Object(s["h"])("p",null,"4. RequestBody : RequestBody에 데이터를 실어서 보냄.")])])],-1),Zb=Object(s["h"])("hr",null,null,-1),en={class:"bottom-navigation"},tn=Object(s["g"])("    3-2. Router "),cn=Object(s["g"])(" 3-4. Vue File Structure    ");Object(s["r"])();var sn=Wb((function(e,t,c,b,n,l){var a=Object(s["y"])("toy-icon");return Object(s["q"])(),Object(s["d"])("div",zb,[Bb,Gb,Kb,Yb,Qb,Xb,Zb,Object(s["h"])("div",en,[Object(s["h"])("div",{class:"left",onClick:t[1]||(t[1]=function(t){return e.$router.push("/skill/router")})},[Object(s["h"])(a,{icon:"arrow-left"}),tn]),Object(s["h"])("div",{class:"right",onClick:t[2]||(t[2]=function(t){return e.$router.push("/skill/structure/summary")})},[cn,Object(s["h"])(a,{icon:"arrow-right"})])])])})),bn={name:"axios"};bn.render=sn,bn.__scopeId="data-v-2102f9e5";var nn=bn,ln=c("6f67"),an=c.n(ln),jn=c("5f02"),rn=c.n(jn),On=Object(s["F"])("data-v-01debd02");Object(s["t"])("data-v-01debd02");var on={class:"structure-summary-page content-page"},un=Object(s["h"])("div",{class:"main-title"},[Object(s["h"])("span",{class:"index"},"3-4-1."),Object(s["g"])(" Summary")],-1),hn=Object(s["h"])("hr",null,null,-1),pn={class:"content-box"},dn=Object(s["h"])("div",{class:"sub-title"},[Object(s["h"])("span",{class:"index"},"1."),Object(s["g"])(" 3개의 태그영역")],-1),gn={class:"content-level-1"},vn=Object(s["h"])("p",null," 하나의 Vue 파일은 총 3개의 태그 영역으로 나뉩니다. ",-1),mn=Object(s["h"])("div",{class:"image-box"},[Object(s["h"])("img",{src:an.a}),Object(s["h"])("span",{class:"under-text"},"[ Vue 파일의 기본형태 ]")],-1),xn=Object(s["g"])(" 앞서서 SPA를 설명("),fn=Object(s["g"])(")할 때 웹서비스는 보통 HTML / CSS / Javascript로 이루어진다고 설명드렸습니다."),yn=Object(s["h"])("br",null,null,-1),Sn=Object(s["g"])(" 그에따라 Vue 파일도, 내부에 나뉘어진 태그가 각각 그와 유사한 기능과 코드형태를 띄고 있습니다. "),Vn=Object(s["h"])("div",{class:"gray-box"},[Object(s["h"])("p",null,"1. tempalte: HTML와 유사한 형태를 띄며, HTML DOM 태그 및 Vue의 컴포넌트들도 태그의 형태로 활용되는 영역"),Object(s["h"])("p",null,"2. script: Javascript와 유사한 형태를 띄며, 변수 선언 및 메소드를 정의할 수 있습니다."),Object(s["h"])("p",null,"3. style: CSS와 유사한 형태를 띄며, 옵션에 따라 SCSS, LESS와 같은 문법도 활용할 수 있습니다.")],-1),kn=Object(s["h"])("div",{class:"content-box"},[Object(s["h"])("div",{class:"sub-title"},[Object(s["h"])("span",{class:"index"},"2."),Object(s["g"])(" 2-way 바인딩")]),Object(s["h"])("div",{class:"content-level-1"},[Object(s["h"])("p",null," Vue.js는 기본적으로 데이터에 대한 2-way 바인딩을 제공합니다. "),Object(s["h"])("div",{class:"image-box"},[Object(s["h"])("img",{src:rn.a}),Object(s["h"])("span",{class:"under-text"},"[ 2-way 바인딩 ]")]),Object(s["h"])("p",null,[Object(s["g"])(" 위 스크린샷을 보면 <script>영역에서 "),Object(s["h"])("b",null,"title"),Object(s["g"])("이라는 변수가 선언되고 기본값이 정의되어있으며 <template>영역에서 해당값이 활용되고 있다는 걸 볼 수 있습니다. 2-way 바인딩이라는 말은 Vue.js나 React.js와 같은 프론트엔드 프레임워크들에서 흔히 쓰는 말인데요. 기존의 프론트엔드 개발시에는 HTML 태그에서 활용되는 변수와 같이 특정 '값'에 대한 실제 변경을 해주기 위해서는 Javascript 레벨에서의 코딩을 통해 한 번 더 수정해주는 과정을 거쳐야했습니다. "),Object(s["h"])("br"),Object(s["h"])("br"),Object(s["g"])(" 하지만 Vue.js는 이런 과정을 내장함으로써 위와 같은 코드일 때 <template>영역에 있는 <input>태그에 사용자가 입력함과 동시에 <script>영역에 있는 title변수가 변경되게 됩니다. 또한, changeTitle 메서드 영역내와 같이 <script>영역에서 변수의 값을 변경하는 경우에도 <template>영역에 활용중인 값이 함께 변경되게 됩니다. "),Object(s["h"])("br"),Object(s["h"])("br"),Object(s["g"])(" 즉, "),Object(s["h"])("b",null,"활용되는 변수에 대해 <template>영역에서 변경하더라도 <script>에 반영되고 <script>영역에서 변경하더라도 <template>영역에 반영되므로 이것을 두 영역간의 2-way 바인딩"),Object(s["g"])("이라고합니다. ")])])],-1),_n=Object(s["h"])("hr",null,null,-1),wn={class:"bottom-navigation"},An=Object(s["g"])(" 3-4-2. template    ");Object(s["r"])();var Cn=On((function(e,t,c,b,n,l){var a=Object(s["y"])("toy-icon");return Object(s["q"])(),Object(s["d"])("div",on,[un,hn,Object(s["h"])("div",pn,[dn,Object(s["h"])("div",gn,[vn,mn,Object(s["h"])("p",null,[xn,Object(s["h"])("span",{class:"inner-link",onClick:t[1]||(t[1]=function(t){return e.$router.push("/base/mandatory/spa")})},"2-1-1. SPA"),fn,yn,Sn]),Vn])]),kn,_n,Object(s["h"])("div",wn,[Object(s["h"])("div",{class:"right",onClick:t[2]||(t[2]=function(t){return e.$router.push("/skill/structure/template")})},[An,Object(s["h"])(a,{icon:"arrow-right"})])])])})),Mn={name:"structureSummary"};Mn.render=Cn,Mn.__scopeId="data-v-01debd02";var Rn=Mn,Ln=c("f56e"),In=c.n(Ln),$n=c("7bca"),Pn=c.n($n),Tn=c("b8b0"),Dn=c.n(Tn),Hn=c("051b"),Un=c.n(Hn),Fn=c("7ec7"),qn=c.n(Fn),Jn=c("b74d"),En=c.n(Jn),Nn=c("f728"),Wn=c.n(Nn),zn=c("0e2e"),Bn=c.n(zn),Gn=c("9976"),Kn=c.n(Gn),Yn=c("2b9a"),Qn=c.n(Yn),Xn=c("e5c5"),Zn=c.n(Xn),el=c("77fc"),tl=c.n(el),cl=Object(s["F"])("data-v-d95fa70a");Object(s["t"])("data-v-d95fa70a");var sl={class:"template-page content-page"},bl=Object(s["h"])("div",{class:"main-title"},[Object(s["h"])("span",{class:"index"},"3-4-2."),Object(s["g"])(" template")],-1),nl=Object(s["h"])("hr",null,null,-1),ll=Object(s["h"])("div",{class:"content-box"},[Object(s["h"])("div",{class:"content-level-1"},[Object(s["h"])("p",null,[Object(s["g"])(" <template>태그영역은 흔히아는 HTML 영역이라고 생각하시면 됩니다."),Object(s["h"])("br"),Object(s["g"])(" <div>나 <h1>과 같이 흔히 사용되는 HTML DOM 태그들을 그대로 사용하실 수 있으며, Vue.js를 바탕으로 제공되는 컴포넌트들과 <script>영역에 정의된 변수, 메서드들의 활용과 더불어 v-for나 v-if 같은 디렉티브들까지 활용할 수 있습니다. ")])])],-1),al={class:"content-box"},il=Object(s["h"])("div",{class:"sub-title"},[Object(s["h"])("span",{class:"index"},"1."),Object(s["g"])(" :과 @")],-1),jl=Object(s["h"])("div",{class:"content-level-1"},[Object(s["h"])("p",null," 기본적으로 <template>영역은 일반 HTML DOM 태그들을 사용할 수 있습니다. 그리고 태그들의 각 요소(attribute)와 이벤트(onClick, onChange등)도 함께 사용 할 수 있는데요. 이러한 요소와 이벤트들을 Vue.js와 연계하기위해 사용되는 기호가 :(콜론)과 @(at)입니다. "),Object(s["h"])("div",{class:"image-box"},[Object(s["h"])("img",{src:In.a}),Object(s["h"])("span",{class:"under-text"},"[ 콜론과 at ]")])],-1),rl={class:"content-level-1"},Ol=Object(s["h"])("p",{class:"third-title"},[Object(s["h"])("span",{class:"index"},"#01."),Object(s["g"])(" 콜론(:)")],-1),ol=Object(s["h"])("p",null,[Object(s["g"])(" 태그내에 활용된 콜론(:)은 v-bind라는 디렉티브의 약어입니다."),Object(s["h"])("br"),Object(s["g"])(" 이름에서 볼 수 있듯이 v-bind는 서로간을 묶어주는(바인딩) 역할을 담당합니다."),Object(s["h"])("br"),Object(s["g"])(" 위와같이 '"),Object(s["h"])("b",null,":"),Object(s["g"])("'"),Object(s["h"])("b",null,"을 DOM 태그의 요소에 사용하게 되면, Vue.js의 <script>영역에서 정의한 변수와 연계가 가능"),Object(s["g"])("해집니다."),Object(s["h"])("br"),Object(s["g"])(" 반대로, '"),Object(s["h"])("b",null,":"),Object(s["g"])("'이 없는 상태로 코드를 정의하게되면 변수 'money'가 아니라 문자열로써의 값 'money'가 input 태그의 value 요소에 주입되게 됩니다 즉, 콜론이 붙었을 경우 input 태그가 가지는 값은 '1000'이지만, 콜론이 붙지 않을 경우 가지는 값은 'money'입니다. "),Object(s["h"])("br"),Object(s["h"])("br"),Object(s["g"])(" 추가적으로 <template>영역의 태그내에서 사용되는 콜론 기호는, Vue.js기반의 컴포넌트가 가지고 있는 props라는 내부 속성값과도 연계가 됩니다. ")],-1),ul=Object(s["h"])("div",{class:"image-box"},[Object(s["h"])("img",{src:Pn.a}),Object(s["h"])("span",{class:"under-text"},"[ 콜론과 props ]")],-1),hl=Object(s["g"])(" 위에 코드는 제가 스타터를 만들면서 커스텀하게 만든 컴포넌트 중 버튼 컴포넌트의 사용 예제입니다. 컴포넌트에 대한 상세설명은 "),pl=Object(s["g"])("에서 할 예정이기에 필요부분만 간략히 설명해보자면 버튼 컴포넌트는 내부적으로 size라는 props를 가지고 있으며, 해당 "),dl=Object(s["h"])("b",null,"props의 값으로 data영역에 정의된 width라는 변수를 전달하는 것이고 이를 위해 바인딩을 해줘야하므로 v-bind의 약어인 콜론(:)을 사용",-1),gl=Object(s["g"])("한 것입니다. "),vl=Object(s["h"])("div",{class:"content-level-1"},[Object(s["h"])("p",{class:"third-title"},[Object(s["h"])("span",{class:"index"},"#02."),Object(s["g"])(" at(@)")]),Object(s["h"])("p",null,[Object(s["g"])(" at(@)은 v-on의 약어로써, 해당 태그/컴포넌트가 내포하고 있는 이벤트에 대한 연계를 담당합니다. 위 캡쳐된 코드들에서는 "),Object(s["h"])("b",null,"<input>태그가 내장하고 있는 onInput에 changeValue 메서드를 연결하기위해 @input을 정의"),Object(s["g"])("하였고, <toy-button> 컴포넌트에서는 "),Object(s["h"])("b",null,"onClick 이벤트에 withdraw 메서드를 연결하기 위해 @click을 정의"),Object(s["g"])("하였습니다. "),Object(s["h"])("br"),Object(s["h"])("br"),Object(s["g"])(" 순수 HTML 태그를 사용했을 경우에는 내장하고 있는 onInput이나 onChange와 같은 이벤트에 @를 활용할 수 있으며, 직접 만든 커스텀 컴포넌트나 3rd 파티의 컴포넌트를 활용할 경우에는 각 컴포넌트들의 스펙에 따라 다양한 이벤트를 활용할 수도 있습니다. ")])],-1),ml={class:"content-box"},xl=Object(s["h"])("div",{class:"sub-title"},[Object(s["h"])("span",{class:"index"},"2."),Object(s["g"])(" <script>와의 연계")],-1),fl={class:"content-level-1"},yl=Object(s["h"])("div",{class:"image-box"},[Object(s["h"])("img",{src:Dn.a}),Object(s["h"])("span",{class:"under-text"},"[ data와 computed, methods를 <template>에서 활용하는 예시 ]")],-1),Sl=Object(s["h"])("p",{class:"third-title"},[Object(s["h"])("span",{class:"index"},"#01."),Object(s["g"])(" data/computed")],-1),Vl=Object(s["g"])(" Vue.js에서는 <script>영역에 선언한 '변수'를 <template>에서 활용할 수 있습니다."),kl=Object(s["h"])("br",null,null,-1),_l=Object(s["g"])(" 이때 변수의 형태로 활용될 수 있는 선언 위치는, 바로 "),wl=Object(s["h"])("b",null,"data",-1),Al=Object(s["g"])("와 "),Cl=Object(s["h"])("b",null,"computed",-1),Ml=Object(s["g"])(" 영역입니다."),Rl=Object(s["h"])("br",null,null,-1),Ll=Object(s["g"])(" (data와 computed에 대해서는 "),Il=Object(s["g"])("에서 상세하게 설명하겠습니다) "),$l=Object(s["h"])("br",null,null,-1),Pl=Object(s["h"])("br",null,null,-1),Tl=Object(s["g"])(" 2개 영역에서 선언된 변수를 DOM객체 내부(inner 위치)에서 활용하고자 할 때에는 예시코드와 같이 Mustache(콧수염) 형식으로 감싸주시고, DOM 태그의 속성(attribute) 위치에서 활용하고자 하실때에는 변수명을 그대로 사용해주시면 됩니다. "),Dl=Object(s["h"])("div",{class:"content-level-1"},[Object(s["h"])("p",{class:"third-title"},[Object(s["h"])("span",{class:"index"},"#02."),Object(s["g"])(" methods")]),Object(s["h"])("p",null," <template>에서 사용자의 액션에 따라 callback function을 호출하는 기능이 필요할 경우, Vue.js에서는 <script>영역에 methods라는 요소로 각각의 function을 정의할 수 있습니다. 그에따라 이벤트에 맞는 method를 정의해주시면 됩니다. ")],-1),Hl=Object(s["h"])("div",{class:"content-box"},[Object(s["h"])("div",{class:"sub-title"},[Object(s["h"])("span",{class:"index"},"3."),Object(s["g"])(" Vue.js의 디렉티브 활용")]),Object(s["h"])("div",{class:"content-level-1"},[Object(s["h"])("p",{class:"third-title"},[Object(s["h"])("span",{class:"index"},"#01."),Object(s["g"])(" v-model")]),Object(s["h"])("div",{class:"image-box"},[Object(s["h"])("img",{src:Un.a}),Object(s["h"])("span",{class:"under-text"},"[ v-model ]")]),Object(s["h"])("p",null,[Object(s["g"])(" v-model은 2-way 바인딩을 위해 존재하는 Vue.js의 디렉티브입니다. HTML DOM 태그들 중에는 <input>태그와 같이 내부적으로 값을 가지게 되는 태그들이 있고, 혹은 커스텀하게 만든 컴포넌트들이 값을 가져야 하는 경우가 있습니다. 이런 태그들은 보통 'value'라는 요소명으로 값을 가지고 있으며 v-model은 이 value 요소에 바인딩됨과 동시에 사용자의 액션에 따라 변하면 value 요소의 값도 함께 변경해주게 됩니다. "),Object(s["h"])("br"),Object(s["h"])("br"),Object(s["g"])(" 즉, 위와 같은 코드에서 사용자가 input태그를 이용해서 값을 수정하면 <script>영역에 있는 money라는 변수의 값도 동시에 변경되게 됩니다. ")]),Object(s["h"])("div",{class:"gray-box"},[Object(s["h"])("p",null,[Object(s["g"])(" Vue.js에서 v-model이라는 디렉티브만으로 2-way 바인딩이 가능한 이유는,"),Object(s["h"])("br"),Object(s["g"])(" 내부적으로 v-bind:value와 v-on:input의 2가지 디렉티브를 내포하기 때문입니다."),Object(s["h"])("br"),Object(s["g"])(" 아래 작성된 2줄은 코드의 형태만 다를뿐, 동일하게 동작하는 코드입니다. ")]),Object(s["h"])("div",{class:"image-box"},[Object(s["h"])("img",{src:qn.a}),Object(s["h"])("span",{class:"under-text"},"[ v-model 과 :value / @input 의 비교 ]")]),Object(s["h"])("p",null," 즉, v-model의 2-way는 v-bind:value의 1-way와 v-on:input의 1-way가 합쳐져서 2-way가 되는 것입니다. ")])]),Object(s["h"])("div",{class:"content-level-1"},[Object(s["h"])("p",{class:"third-title"},[Object(s["h"])("span",{class:"index"},"#02."),Object(s["g"])(" v-if/v-else & v-show")]),Object(s["h"])("div",{class:"content-level-2"},[Object(s["h"])("p",{class:"fourth-title"},"1) v-if/v-else"),Object(s["h"])("div",{class:"image-box"},[Object(s["h"])("img",{src:En.a}),Object(s["h"])("span",{class:"under-text"},"[ v-if ]")]),Object(s["h"])("p",null,[Object(s["g"])(" 프로그래밍 언어에서 흔히 쓰는 if/else 구문이 Vue.js에서는 "),Object(s["h"])("b",null,"v-"),Object(s["g"])("라는 prefix를 추가해서 v-if와 v-else-if, v-else로 사용되고 있습니다. 해당 디렉티브를 추가하게되면 정의된 조건에 따라서 해당 태그에 대한 화면 노출여부를 결정하게 됩니다. 여기서 v-if와 v-else-if는 분기를 위한 조건이 필수로 정의되어야하며 v-else는 그 외의 모든 경우의 수를 담당하게 됩니다. ")])]),Object(s["h"])("div",{class:"content-level-2"},[Object(s["h"])("p",{class:"fourth-title"},"2) v-show"),Object(s["h"])("div",{class:"image-box"},[Object(s["h"])("img",{src:Wn.a}),Object(s["h"])("span",{class:"under-text"},"[ v-if와 v-show ]")]),Object(s["h"])("p",null,[Object(s["g"])(" 사용자의 입장에서는 v-if와 v-show 디렉티브에 대한 체감이 크지않습니다."),Object(s["h"])("br"),Object(s["g"])(" 두 디렉티브 모두 해당 태그(혹은 컴포넌트)를 화면에 노출할 지, 하지 않을지를 판별하는 용도로 쓰이기 때문인데요. 하지만 개발하는 입장에서는 두 디렉티브는 분명히 차이가 있습니다. 실제 화면으로 렌더링되는 HTML DOM의 코드를 보면 그 차이를 알 수 있는데요. v-if를 사용하는 태그는 만약 조건이 false일 경우 HTML DOM 트리에서 아예 제거해버리지만, v-show의 경우 조건이 false이면 css 요소인 display의 값을 none으로 처리함으로써 화면내에 숨겨놓게 됩니다. "),Object(s["h"])("br"),Object(s["h"])("br"),Object(s["g"])(" 이는 "),Object(s["h"])("b",null,"어느정도 성능에 영향을 끼치는 요소"),Object(s["g"])("로써, 노출에 대한 토글 빈도가 잦은 태그의 경우에는 v-show를 통해 css 속성으로 제어하는 것이 좋으며 노출에 대한 토글빈도가 적은 경우에는 v-if/v-else 를 사용하는 것이 성능적으로 유리합니다. ")])])]),Object(s["h"])("div",{class:"content-level-1"},[Object(s["h"])("p",{class:"third-title"},[Object(s["h"])("span",{class:"index"},"#03."),Object(s["g"])(" v-for")]),Object(s["h"])("div",{class:"image-box"},[Object(s["h"])("img",{src:Bn.a}),Object(s["h"])("span",{class:"under-text"},"[ v-for ]")]),Object(s["h"])("p",null,[Object(s["g"])(" v-for는 Javascript의 for in 반복문과 사용법이 유사합니다. "),Object(s["h"])("b",null,"in"),Object(s["g"])(" 키워드 뒤에는 배열형태의 전체 데이터가 위치하고 앞쪽괄호에는 배열내 데이터의 변수명, 그리고 인덱싱 숫자로 사용할 변수명이 위치하게 됩니다. 현재 예시는 총 5개의 문자열을 가진 member라는 배열형 변수로 v-for문을 작성해두었으며, 해당 코드는 맨 우측 캡쳐와 같이 실제 HTML DOM 트리를 구성하게 됩니다. "),Object(s["h"])("br"),Object(s["h"])("br"),Object(s["g"])(" v-for를 정의할 시에 필수는 아니지만 같이 쓰면 좋은 "),Object(s["h"])("b",null,"key"),Object(s["g"])("라는 props가 있습니다."),Object(s["h"])("br"),Object(s["g"])(" 해당 props는 v-for 디렉티브에 의해 화면에 렌더링되는 N개의 Virtual DOM(가상 DOM)에 대해 유니크한 ID값을 부여함으로써 리렌더링시의 성능향상(어떤 가성 DOM을 수정해야 하는지 빠르게 찾는)을 목적으로 하고 있습니다. key props를 정의하지 않아도 에러는 발생하지 않습니다만, 개발자도구의 콘솔에는 Warning 메시지가 뜰 정도로 권고하는 사항이므로 지켜주시는 게 좋습니다. ")])]),Object(s["h"])("div",{class:"content-level-1"},[Object(s["h"])("p",{class:"third-title"},[Object(s["h"])("span",{class:"index"},"#04."),Object(s["g"])(" class/style")]),Object(s["h"])("p",null,[Object(s["g"])(" HTML DOM 태그가 가진 요소(attribute)에 콜론(:)을 추가하여 Vue.js와 연계하였듯이 class와 style에도 콜론을 추가함으로써 Vue.js의 변수나 메서드를 활용 할 수 있습니다. 또한, 이때는 style과 :style, class와 :class를 함께 사용할 수 있습니다. "),Object(s["h"])("br"),Object(s["h"])("br")]),Object(s["h"])("div",{class:"content-level-2"},[Object(s["h"])("p",{class:"fourth-title"},"1) style"),Object(s["h"])("div",{class:"image-box"},[Object(s["h"])("img",{src:Kn.a}),Object(s["h"])("span",{class:"under-text"},"[ inline을 이용한 style의 삼항연산 ]")]),Object(s["h"])("div",{class:"image-box"},[Object(s["h"])("img",{src:Qn.a}),Object(s["h"])("span",{class:"under-text"},"[ computed를 통한 style 설정 ]")]),Object(s["h"])("p",null,[Object(s["g"])(" 위 2개의 코드는 동일한 결과를 가지는 예제이며, :style에 대한 정의방식을 inline과 computed로 나눈 예시입니다."),Object(s["h"])("br"),Object(s["g"])(" style의 경우 조건에 따라 특정 요소에 해당 '값'을 부여하는 개념이기에 조건에 따른 분기처리를 위와 같이 합니다. ")])]),Object(s["h"])("div",{class:"content-level-2"},[Object(s["h"])("p",{class:"fourth-title"},"2) class"),Object(s["h"])("div",{class:"image-box"},[Object(s["h"])("img",{src:Zn.a}),Object(s["h"])("span",{class:"under-text"},"[ inline을 이용한 class예시 ]")]),Object(s["h"])("div",{class:"image-box"},[Object(s["h"])("img",{src:tl.a}),Object(s["h"])("span",{class:"under-text"},"[ computed를 통한 class 설정 ]")]),Object(s["h"])("p",null,[Object(s["g"])(" 위 2개의 코드 또한 동일한 결과를 가지는 예제이며, :class에 대한 정의방식을 inline과 computed로 나눈 예시입니다."),Object(s["h"])("br"),Object(s["g"])(" class의 경우 세부 값은 이미 class 내부에 정의되어있으므로, 해당 class 명의 사용여부에 대한 것을 조건에 따라 분기처리하므로 위와 같이 정의할 수 있습니다. ")])])])],-1),Ul=Object(s["h"])("hr",null,null,-1),Fl={class:"bottom-navigation"},ql=Object(s["g"])("    3-4-1. Summary "),Jl=Object(s["g"])(" 3-4-3. script    ");Object(s["r"])();var El=cl((function(e,t,c,b,n,l){var a=Object(s["y"])("toy-icon");return Object(s["q"])(),Object(s["d"])("div",sl,[bl,nl,ll,Object(s["h"])("div",al,[il,jl,Object(s["h"])("div",rl,[Ol,ol,ul,Object(s["h"])("p",null,[hl,Object(s["h"])("span",{class:"inner-link",onClick:t[1]||(t[1]=function(t){return e.$router.push("/skill/component")})},"3-5.Component"),pl,dl,gl])]),vl]),Object(s["h"])("div",ml,[xl,Object(s["h"])("div",fl,[yl,Sl,Object(s["h"])("p",null,[Vl,kl,_l,wl,Al,Cl,Ml,Rl,Ll,Object(s["h"])("span",{class:"inner-link",onClick:t[2]||(t[2]=function(t){return e.$router.push("/skill/structure/script")})},"3-4-3. script"),Il,$l,Pl,Tl])]),Dl]),Hl,Ul,Object(s["h"])("div",Fl,[Object(s["h"])("div",{class:"left",onClick:t[3]||(t[3]=function(t){return e.$router.push("/skill/structure/summary")})},[Object(s["h"])(a,{icon:"arrow-left"}),ql]),Object(s["h"])("div",{class:"right",onClick:t[4]||(t[4]=function(t){return e.$router.push("/skill/structure/script")})},[Jl,Object(s["h"])(a,{icon:"arrow-right"})])])])})),Nl={name:"template"};Nl.render=El,Nl.__scopeId="data-v-d95fa70a";var Wl=Nl,zl=c("b89a"),Bl=c.n(zl),Gl=c("c0b5"),Kl=c.n(Gl),Yl=c("4084"),Ql=c.n(Yl),Xl=c("9f74"),Zl=c.n(Xl),ea=c("19b4"),ta=c.n(ea),ca=c("ca2a"),sa=c.n(ca),ba=c("f3cc"),na=c.n(ba),la=c("151a"),aa=c.n(la),ia=c("d12b"),ja=c.n(ia),ra=c("5aa7"),Oa=c.n(ra),oa=c("ea70"),ua=c.n(oa),ha=c("e5ee"),pa=c.n(ha),da=c("105e"),ga=c.n(da),va=Object(s["F"])("data-v-0767851a");Object(s["t"])("data-v-0767851a");var ma={class:"script-page content-page"},xa=Object(s["h"])("div",{class:"main-title"},[Object(s["h"])("span",{class:"index"},"3-4-3."),Object(s["g"])(" script")],-1),fa=Object(s["h"])("hr",null,null,-1),ya=Object(s["h"])("div",{class:"content-box"},[Object(s["h"])("div",{class:"content-level-1"},[Object(s["h"])("p",null,[Object(s["g"])(" <script>영역은 Javascript와 대응되는 영역으로 Vue.js에서 가장 핵심을 담당하는 부분입니다. 변수를 선언 할 수 있고, 메서드(function 개념)를 활용할 수 있으며 컴포넌트의 렌더링과 관련된 라이프사이클 함수도 여기서 제어할 수 있습니다."),Object(s["h"])("br"),Object(s["h"])("b",null,"코드의 익숙한 Javascript와 거의 동일"),Object(s["g"])("합니다. ")])])],-1),Sa=Object(s["h"])("div",{class:"content-box"},[Object(s["h"])("div",{class:"sub-title"},[Object(s["h"])("span",{class:"index"},"1."),Object(s["g"])(" this")]),Object(s["h"])("div",{class:"content-level-1"},[Object(s["h"])("p",null," 여기서의 this는 <script>영역에서 주효하게 사용되는 객체입니다. Javascript에서 활용되는 this가 window, 혹은 중괄호에 의한 block scope등과 같이 한정된 범위내의 객체를 가리켰듯이, Vue.js의 <script>영역내의 this도 한정된 영역에 scope가 맞춰지며 그 영역의 범위는 해당 Vue 파일(컴포넌트)을 가리킵니다. "),Object(s["h"])("div",{class:"image-box"},[Object(s["h"])("img",{src:Bl.a}),Object(s["h"])("span",{class:"under-text"},"[ this의 다양한 사용처 ]")]),Object(s["h"])("p",null,[Object(s["h"])("b",null,"this"),Object(s["g"])("는 보통 위와같이 data나 computed에 선언된 변수와 methods에 정의된 메서드를 호출하거나 활용할 때 사용되게 됩니다. 이를 통해 개발자는 <script>영역내에서 선언한 변수나 메서드에 자유롭게 접근할 수 있습니다. ")]),Object(s["h"])("div",{class:"gray-box"},[Object(s["h"])("p",null,[Object(s["g"])(" 다만, <template>영역에서는 아래와 같이 "),Object(s["h"])("b",null,"this"),Object(s["g"])("라는 키워드를 사용하지 않고 변수와 메서드를 활용해야 합니다 ")]),Object(s["h"])("div",{class:"image-box"},[Object(s["h"])("img",{src:Kl.a}),Object(s["h"])("span",{class:"under-text"},"[ template에서의 활용 ]")])])])],-1),Va=Object(s["h"])("div",{class:"content-box"},[Object(s["h"])("div",{class:"sub-title"},[Object(s["h"])("span",{class:"index"},"2."),Object(s["g"])(" import")]),Object(s["h"])("div",{class:"content-level-1"},[Object(s["h"])("p",null,[Object(s["g"])(" N개의 파일을 통해서 SPA를 구성하고, 그 구성을 도와주는 것이 Webpack이라고 설명했었습니다. 이때 Webpack이 모듈 번들링을 위해 entry파일 설정에서 지정하고 있고 그 파일이 진입점이 되어 N개의 파일이 물고 물리는 의존성을 생성하는데요. "),Object(s["h"])("br"),Object(s["h"])("br"),Object(s["g"])(" ES6부터 이를 좀 더 편하게 사용하고자 import/export와 같은 모듈과 관련된 키워드가 추가되었으며 Vue.js또한 코드내에서 이 키워드를 통해 다른 Vue 컴포넌트나 Javascript를 가져와서 활용할 수 있습니다. ")])]),Object(s["h"])("div",{class:"content-level-1"},[Object(s["h"])("p",{class:"third-title"},[Object(s["h"])("span",{class:"index"},"#01."),Object(s["g"])(" javascript")]),Object(s["h"])("p",null," Javascript 파일의 경우 주로 공통으로 사용하는 function이 정의된 유틸성 파일들을 import해서 사용하는데요. 단순히 import만을 해주게되면 아래와 같이 <script>영역내에서 해당 파일내의 function을 호출해서 사용할 수 있습니다. "),Object(s["h"])("div",{class:"image-box"},[Object(s["h"])("img",{src:Ql.a}),Object(s["h"])("span",{class:"under-text"},"[ javascript import 후 활용 ]")])]),Object(s["h"])("div",{class:"content-level-1"},[Object(s["h"])("p",{class:"third-title"},[Object(s["h"])("span",{class:"index"},"#02."),Object(s["g"])(" components")]),Object(s["h"])("p",null,[Object(s["g"])(" Vue.js는 각각의 Vue 파일을 "),Object(s["h"])("b",null,"컴포넌트"),Object(s["g"])("라고 지칭합니다. 이는 각 Vue파일들이 다른 Vue 파일 어디에서든지 재사용이 가능하다는 뜻을 내포하고 있는데요. 텍스트필드나 체크박스와 같이 간단한 컴포넌트만이 아니라, 모달과 같이 복잡한 형태의 컴포넌트도 import를 통해서 재사용이 가능합니다. "),Object(s["h"])("br"),Object(s["h"])("br"),Object(s["g"])(" 이때, Javascript와의 차이점은 컴포넌트로의 활용을 위해서는 <template>영역에도 선언되어야하기때문에 import한 모듈로써의 컴포넌트를 <script>영역의 componets 항목에 정의해주면 아래와 같이 태그의 형태로 <template>영역에서 사용할 수 있게 됩니다. "),Object(s["h"])("br"),Object(s["h"])("br"),Object(s["h"])("b",null,"태그명의 형태는 HTML DOM태그들과의 규칙성을 맞추기 위해 케밥케이스로 자동변경됩니다.")]),Object(s["h"])("div",{class:"image-box"},[Object(s["h"])("img",{src:Zl.a}),Object(s["h"])("span",{class:"under-text"},"[ component import 후 활용 ]")]),Object(s["h"])("p",null,[Object(s["g"])(" 추가적으로 아래 캡쳐는 위와 동일한 기능을 하는 코드인데요. 태그명이 조금 다른 걸 보실 수 있습니다. alias기능을 사용해서 <template>영역에 활용할 태그명을 컴포넌트명과 다르게도 적용 할 수도 있는데요."),Object(s["h"])("br"),Object(s["g"])(" 특별한 경우가 아니라면, 컴포넌트명과의 통일성을 위해 추천드리지 않습니다. ")]),Object(s["h"])("div",{class:"image-box"},[Object(s["h"])("img",{src:ta.a}),Object(s["h"])("span",{class:"under-text"},"[ component import 후 태그명 변경 ]")])]),Object(s["h"])("div",{class:"content-level-1"},[Object(s["h"])("p",{class:"third-title"},[Object(s["h"])("span",{class:"index"},"#03."),Object(s["g"])(" mixins")]),Object(s["h"])("p",null," mixin은 <template>와 <style>영역없이 <script>영역만을 가진 Vue파일입니다. 주활용처는 공통으로 사용되는 변수나 메서드, 라이프 사이클 함수가 정의된 Vue파일이며 컴포넌트의 import시에 components 키워드를 사용했던 것처럼, import 한 후에 mixins 키워드를 사용하여 정의합니다. "),Object(s["h"])("div",{class:"image-box"},[Object(s["h"])("img",{src:sa.a}),Object(s["h"])("span",{class:"under-text"},"[ mixin import ]")]),Object(s["h"])("p",null,[Object(s["g"])(" 좌측의 example.vue는 commonMixin.vue 라는 Vue 파일을 mixin 키워드로 정의하였습니다."),Object(s["h"])("br"),Object(s["g"])(" 그리고 "),Object(s["h"])("b",null,"example.vue에서 활용되는 money라는 변수나 deposit, withdraw와 같은 메서드(빨간 테두리로 표시)는 mixin으로 가져온 commonMixin.vue에 있는 변수와 메서드"),Object(s["g"])("입니다. 위와 같이 mixin으로 포함시킨 Vue파일의 script 영역에 있는 요소들을 마치, 현재 파일에서 정의한 것처럼 활용할 수 있게 해주는 것이 mixin인 것입니다. "),Object(s["h"])("br"),Object(s["h"])("br"),Object(s["g"])(" 즉, import를 해서 mixins으로 선언한 변수나 메서드들도 "),Object(s["h"])("b",null,"그 Vue 파일의 this 영향권 안"),Object(s["g"])("에 놓이게 되는 것입니다. ")])])],-1),ka=Object(s["h"])("div",{class:"content-box"},[Object(s["h"])("div",{class:"sub-title"},[Object(s["h"])("span",{class:"index"},"3."),Object(s["g"])(" data")]),Object(s["h"])("div",{class:"content-level-1"},[Object(s["h"])("p",null,[Object(s["g"])(" data 영역은 변수를 "),Object(s["h"])("b",null,"선언"),Object(s["g"])("하는 영역입니다. ")]),Object(s["h"])("div",{class:"image-box"},[Object(s["h"])("img",{src:na.a}),Object(s["h"])("span",{class:"under-text"},"[ script의 data ]")]),Object(s["g"])(" 문자열과 숫자, 배열 및 객체와 같이 Javascript에서 제공하는 모든 타입으로 변수를 선언할 수 있습니다. ")])],-1),_a=Object(s["h"])("div",{class:"content-box"},[Object(s["h"])("div",{class:"sub-title"},[Object(s["h"])("span",{class:"index"},"4."),Object(s["g"])(" computed")]),Object(s["h"])("div",{class:"content-level-1"},[Object(s["h"])("p",null," computed는 사용될 때에는 data영역에 선언된 변수들과 같이 활용되지만, 정의할 때는 함수의 형태로 선언되는 독특한 형태입니다. "),Object(s["h"])("div",{class:"image-box"},[Object(s["h"])("img",{src:aa.a}),Object(s["h"])("span",{class:"under-text"},"[ script의 computed ]")]),Object(s["h"])("p",null,[Object(s["g"])(" 엄밀히 말해서 computed는 "),Object(s["h"])("b",null,"계산된 변수"),Object(s["g"])("라고 생각하시면 됩니다. 그리고 이때 바탕이 되는 "),Object(s["h"])("b",null,"계산"),Object(s["g"])("의 종속성은 data영역의 변수가 가지게 됩니다. 계산되어야하기에 정의되는 형식은 함수이고 활용될 때는 변수의 형태를 띄는 것입니다. "),Object(s["h"])("br"),Object(s["h"])("br"),Object(s["g"])(" 그래서 해당 함수내에 활용된 data 변수가 변경될시에는 그에 따라 computed의 값이 재계산되게 됩니다."),Object(s["h"])("br"),Object(s["g"])(" 위 예시 코드를 설명해보자면 input 태그에 data영역 변수인 "),Object(s["h"])("b",null,"money"),Object(s["g"])("가 v-model로 바인딩되어있습니다. 이때, 사용자가 input 태그에 입력을 하면 v-model로 바인딩된 money 변수의 값은 당연히 변경이 될 것인데 money 변수의 값을 함수 내에서 사용한 computed 변수인 "),Object(s["h"])("b",null,"currency"),Object(s["g"])("도 함께 변경되게 됩니다. "),Object(s["h"])("br"),Object(s["h"])("br"),Object(s["g"])(" 정리하자면, "),Object(s["h"])("b",null,"computed 변수는 함수로 정의되어있으며 해당 함수는 내부에 활용된 data변수가 변경되면 호출"),Object(s["g"])("되게 됩니다."),Object(s["h"])("br"),Object(s["g"])(" 이와같은 computed 변수의 활용처는 주로 실제 데이터와 화면상에 보여지는 데이터가 다른 형태를 띄어야 할 경우에 사용됩니다. (대표적으로 예시 코드로 보여드리는, 실 데이터는 숫자지만 셋째자리마다 컴마를 찍어야하는 금액이나 통화 표시가 이에 해당합니다) ")])])],-1),wa=Object(s["h"])("div",{class:"content-box"},[Object(s["h"])("div",{class:"sub-title"},[Object(s["h"])("span",{class:"index"},"5."),Object(s["g"])(" props")]),Object(s["h"])("div",{class:"content-level-1"},[Object(s["h"])("p",null,[Object(s["g"])(" HTML DOM 태그를 사용할 때 요소(attributes)를 활용해서 특정 태그의 생김새나 활용법을 변경하곤 했습니다. Vue.js 기반의 컴포넌트도 이러한 활용법이 있으며 이를 "),Object(s["h"])("b",null,"props"),Object(s["g"])("가 담당하고 있습니다. ")]),Object(s["h"])("div",{class:"image-box"},[Object(s["h"])("img",{src:ja.a}),Object(s["h"])("span",{class:"under-text"},"[ script의 props ]")]),Object(s["h"])("p",null,[Object(s["g"])(" props가 정의되는 위치는 HTML 태그의 요소위치와 동일하며, 콜론(:)을 통해서 <script>영역과의 연계도 가능합니다. 위 코드는 제가 작성한 Toy 컴포넌트 중 버튼 컴포넌트를 작성한 예시이며, "),Object(s["h"])("b",null,"primary"),Object(s["g"])(" props와 "),Object(s["h"])("b",null,"solid"),Object(s["g"])(" props를 활용해서 컴포넌트는 동일하지만 서로 다른 옵션을 줘보았습니다. 그 결과로 버튼의 생김새가 달라지기도하고 클릭 이벤트에 따라 형태가 변경되기도 합니다. ")]),Object(s["h"])("div",{class:"image-box"},[Object(s["h"])("img",{src:Oa.a}),Object(s["h"])("span",{class:"under-text"},"[ props 정의예시 ]")]),Object(s["h"])("p",null,[Object(s["g"])(" 위와 같이 type, default, required처럼 여러가지 설정값을 props에 정의할 수 있습니다. type의 경우 복수개로 설정도 가능하며, 주의해야 할 점은 type이 Array나 Object 일 경우에는 default를 리턴하는 함수의 형태로 정의해야 한다는 것입니다. "),Object(s["h"])("br"),Object(s["h"])("br"),Object(s["g"])(" <toy-button>에도 위와 유사하게 primary, solid와 같은 props가 정의되어있고 예시코드에서 이를 활용한 것입니다. ")])])],-1),Aa=Object(s["h"])("div",{class:"content-box"},[Object(s["h"])("div",{class:"sub-title"},[Object(s["h"])("span",{class:"index"},"6."),Object(s["g"])(" methods")]),Object(s["h"])("div",{class:"content-level-1"},[Object(s["h"])("p",null," 메서드는 Javascript에 비유하자면 기명함수라고 생각하시면 됩니다. "),Object(s["h"])("div",{class:"image-box"},[Object(s["h"])("img",{src:ua.a}),Object(s["h"])("span",{class:"under-text"},"[ methods 활용 예시 ]")]),Object(s["h"])("p",null,[Object(s["g"])(" 정의된 메서드는 data나 computed와 같이 "),Object(s["h"])("b",null,"this"),Object(s["g"])("객체에 속하게됩니다. 따라서 methods 영역에 정의된 메서드는 "),Object(s["h"])("b",null,"this.메서드명의 형태"),Object(s["g"])("를 통해 created와 같은 라이프사이클 함수에서도 호출가능하며, 메서드에서 타 메서드를 호출 할 수도 있으며, 클릭과 같이 <template>에서 발생하는 사용자 액션에 대해서도 호출 할 수 있습니다. ")])])],-1),Ca=Object(s["h"])("div",{class:"content-box"},[Object(s["h"])("div",{class:"sub-title"},[Object(s["h"])("span",{class:"index"},"7."),Object(s["g"])(" lifecycle")]),Object(s["h"])("div",{class:"content-level-1"},[Object(s["h"])("p",null," Vue.js 기반의 화면 및 컴포넌트들이 브라우져서 생성되고 렌더링되며 해제되는 전체 주기를 라이프 사이클이라고 하는데요. 이 라이프사이클의 특정 시점마다 제공되는 함수들이 있습니다. 이를 라이프 사이클 함수라고하며, 개발자는 해당시기마다 필요한 로직을 구현할 수 있습니다. "),Object(s["h"])("div",{class:"image-box"},[Object(s["h"])("img",{src:pa.a}),Object(s["h"])("span",{class:"under-text"},"[ vue lifecycle ]")]),Object(s["h"])("p",null,[Object(s["g"])(" 위 그림에서 빨간 영역이 모두 라이프사이클 함수입니다."),Object(s["h"])("br"),Object(s["g"])(" 일반적으로 모든 함수를 매번 사용하는 것은 아니기에, 사용이 빈번한 함수 몇가지만 소개하도록 하겠습니다. ")])]),Object(s["h"])("div",{class:"content-level-1"},[Object(s["h"])("p",{class:"third-title"},[Object(s["h"])("span",{class:"index"},"#01."),Object(s["g"])(" created")]),Object(s["h"])("p",null,[Object(s["g"])(" 해당 시점은 <script>영역의 변수와 메서드를 사용할 수 있는 단계입니다. Vue.js의 공식가이드에는 REST API를 통해 가져와야하는 초기 데이터가 있을 경우, 이 라이프사이클 함수 내에서 호출하도록 가이드하고 있습니다. "),Object(s["h"])("br"),Object(s["h"])("br"),Object(s["g"])(" 즉, 해당 Vue 화면(컴포넌트)를 활용하기위해 필요한 '초기 값'들을 세팅하는 단계라고 보시면 됩니다. ")])]),Object(s["h"])("div",{class:"content-level-1"},[Object(s["h"])("p",{class:"third-title"},[Object(s["h"])("span",{class:"index"},"#02."),Object(s["g"])(" mounted")]),Object(s["h"])("p",null," created와 흡사한 단계이며, 차이점은 해당 시점에는 <template>영역에 작성된 코드들이 HTML DOM이 되어 화면상에 렌더링까지 되어있다는 것입니다. 흔하게 사용하던 document.getElementsByClassName와 같은 DOM 객체를 잡아서 동작해야하는 로직이 있는경우, created 시점에는 해당 DOM이 존재하지 않기 때문에 불가능하며 mounted 시점이 되어서야 가능해지는 것입니다. 그래서 만약 DOM객체에 직접 접근하여 어떤 초기 세팅이 필요한 경우라면 created 시점이 아닌 mounted 시점을 활용해야 하는 것입니다. ")]),Object(s["h"])("div",{class:"content-level-1"},[Object(s["h"])("p",{class:"third-title"},[Object(s["h"])("span",{class:"index"},"#03."),Object(s["g"])(" beforeUnmount")]),Object(s["h"])("p",null,[Object(s["g"])(" 렌더링되었던 Vue 화면(컴포넌트)이 완전히 파괴된 이후의 시점은 unmounted 함수이며, beforeUnmount 함수의 호출시기는 파괴되기 직전의 시점입니다. created와 mounted가 초기 세팅에 연관된 역할을 해줬듯이 beforeUnmount는 뒷정리를 해주는 역할을 한다고 보시면 됩니다. "),Object(s["h"])("br"),Object(s["h"])("br"),Object(s["g"])(" 부득이하게 추가한 동적 변수라던가 혹은, 브라우져 쿠키에 값을 지우거나 저장해야하는 경우, 그리고 커스텀 디렉티브를 별도로 선언하거나 window, document와 같은 브라우져 전역 객체를 활용했던 경우라면 해당 위치에서 모두 정리를 해주어야 합니다. ")])])],-1),Ma=Object(s["h"])("div",{class:"content-box"},[Object(s["h"])("div",{class:"sub-title"},[Object(s["h"])("span",{class:"index"},"8."),Object(s["g"])(" watch")]),Object(s["h"])("div",{class:"content-level-1"},[Object(s["h"])("p",null,[Object(s["g"])(" 이름 그대로 "),Object(s["h"])("b",null,"감시자"),Object(s["g"])("의 역할이며 감시하는 대상은 바로 "),Object(s["h"])("b",null,"변수"),Object(s["g"])("입니다."),Object(s["h"])("br"),Object(s["g"])(" watch 내에는 computed와 동일하게 함수의 형태로 정의하며, 이때 정의되는 함수명이 바로 감시하고자하는 변수명입니다. ")]),Object(s["h"])("div",{class:"image-box"},[Object(s["h"])("img",{src:ga.a}),Object(s["h"])("span",{class:"under-text"},"[ vue watch ]")]),Object(s["h"])("p",null,[Object(s["g"])(" 위와같이 객체내에 정의된 개별변수까지 감시가 가능하며, 해당 함수의 첫번째 파라미터는 다음 값을, 두번째 파라미터는 이전 값을 가진채로 함수내에서 활용할 수 있습니다. 변수에 종속적이라는 면에서 computed와 동일해보일 수 있으나, watch는 특정 변수를 기준으로 한다는 점과 리턴되는 값이 존재하지 않기 때문에 변수로 활용할 수 없다는 차이점를 가지고 있습니다. "),Object(s["h"])("br"),Object(s["h"])("br"),Object(s["g"])(" 따라서 watch는 변수에 값이 변할 때 필요한 로직이 있다면 해당 영역에서 구현해주면 됩니다. 다만, watch 사용시에는 가장 중요한 주의사항이 있는데요. "),Object(s["h"])("b",null,"변수의 변화 감지를 기준으로 watch가 호출되기때문에 종속의 기준이되는 변수는 해당 영역내에서 수정하시면 안 됩니다."),Object(s["h"])("br"),Object(s["g"])(" (즉, 위와같은 경우 title을 감시하는 watch내 함수에서 "),Object(s["h"])("b",null,"this.title = 'ABC'"),Object(s["g"])("와 같은 형식으로 값을 변경하시면 안 됩니다) ")])])],-1),Ra=Object(s["h"])("hr",null,null,-1),La={class:"bottom-navigation"},Ia=Object(s["g"])("    3-4-2. template "),$a=Object(s["g"])(" 3-4-4. style    ");Object(s["r"])();var Pa=va((function(e,t,c,b,n,l){var a=Object(s["y"])("toy-icon");return Object(s["q"])(),Object(s["d"])("div",ma,[xa,fa,ya,Sa,Va,ka,_a,wa,Aa,Ca,Ma,Ra,Object(s["h"])("div",La,[Object(s["h"])("div",{class:"left",onClick:t[1]||(t[1]=function(t){return e.$router.push("/skill/structure/template")})},[Object(s["h"])(a,{icon:"arrow-left"}),Ia]),Object(s["h"])("div",{class:"right",onClick:t[2]||(t[2]=function(t){return e.$router.push("/skill/structure/style")})},[$a,Object(s["h"])(a,{icon:"arrow-right"})])])])})),Ta={name:"script"};Ta.render=Pa,Ta.__scopeId="data-v-0767851a";var Da=Ta,Ha=c("62bb"),Ua=c.n(Ha),Fa=c("3637"),qa=c.n(Fa),Ja=c("37d8"),Ea=c.n(Ja),Na=Object(s["F"])("data-v-ccde6ade");Object(s["t"])("data-v-ccde6ade");var Wa={class:"style-page content-page"},za=Object(s["h"])("div",{class:"main-title"},[Object(s["h"])("span",{class:"index"},"3-4-4."),Object(s["g"])(" style")],-1),Ba=Object(s["h"])("hr",null,null,-1),Ga=Object(s["h"])("div",{class:"content-box"},[Object(s["h"])("div",{class:"content-level-1"},[Object(s["h"])("p",null,[Object(s["g"])(" <style>태그영역은 흔히아는 CSS를 위한 영역이라고 생각하시면 됩니다."),Object(s["h"])("br"),Object(s["g"])(" Dot(.)을 이용해 클래스명을 지정하고 CSS 속성을 부여하거나 태그명을 이용해서 스타일을 아래와 같이 정의할 수 있습니다. ")]),Object(s["h"])("div",{class:"image-box"},[Object(s["h"])("img",{src:Ua.a}),Object(s["h"])("span",{class:"under-text"},"[ style 기본형태 ]")])])],-1),Ka={class:"content-box"},Ya=Object(s["h"])("div",{class:"sub-title"},[Object(s["h"])("span",{class:"index"},"1."),Object(s["g"])(" style 태그의 요소")],-1),Qa=Object(s["h"])("div",{class:"content-level-1"},[Object(s["h"])("p",null," <style>태그를 정의할 때 함께 사용가능한 몇가지 요소를 소개합니다. ")],-1),Xa=Object(s["h"])("div",{class:"content-level-1"},[Object(s["h"])("p",{class:"third-title"},[Object(s["h"])("span",{class:"index"},"#01."),Object(s["g"])(" scoped")]),Object(s["h"])("p",null," <style>태그내에 정의된 내용들이 적용될 범위를 지정하는 요소입니다. "),Object(s["h"])("div",{class:"image-box"},[Object(s["h"])("img",{src:qa.a}),Object(s["h"])("span",{class:"under-text"},"[ style scoped ]")]),Object(s["h"])("p",null,[Object(s["g"])(" 위 코드는 HTML태그 중 h3 태그에 대한 스타일을 지정하고 있습니다."),Object(s["h"])("br"),Object(s["g"])(" 차이점은 상단에는 scoped가 적용되어있고, 하단에는 적용되어있지않다는 점인데요. <style>태그내에 정의한 CSS들은 기본적으로 전역에 영향을 끼치게 됩니다. 그에따라 위와 같은 경우, 해당 웹에 작성된 모든 h3 태그는 글자 색이 파란색으로 설정이 되는데요. 다만, "),Object(s["h"])("b",null,"scoped"),Object(s["g"])("라는 요소를 통해 해당 Vue 파일만으로 영향의 범위를 제한 할 수 있습니다. 그래서 위 코드가 작성된 화면에서는 h3 태그의 색상이 파란색이 아니라 빨간색으로 나오게 됩니다. ")])],-1),Za=Object(s["h"])("div",{class:"content-level-1"},[Object(s["h"])("p",{class:"third-title"},[Object(s["h"])("span",{class:"index"},"#02."),Object(s["g"])(" lang")]),Object(s["h"])("div",{class:"image-box"},[Object(s["h"])("img",{src:Ea.a}),Object(s["h"])("span",{class:"under-text"},"[ style lang ]")]),Object(s["h"])("p",null,[Object(s["g"])(" <style>태그 내에서는 기본적으로 css 문법을 사용 할 수 있지만, 보다 효율적인 스타일 적용을 위해 SCSS나 LESS와 같은 전처리기법을 활용할 수도 있습니다. 이와 같은 경우 "),Object(s["h"])("b",null,"lang"),Object(s["g"])(" 요소를 통해 태그내에 정의된 문법이 어떤 기법인지를 위와같이 정의해주면, 예시와 같이 SCSS 토큰을 통한 변수 활용이나 하위 연산자 기법을 활용할 수 있습니다."),Object(s["h"])("br"),Object(s["g"])(" (위 예시의 style 적용시 해당 Vue 코드의 h3 태그는 기본적으로 빨간색으로 나오지만, class가 empty-class로 명시된 DOM의 하위 h3태그들은 녹색으로 렌더링 됩니다) ")])],-1),ei=Object(s["h"])("hr",null,null,-1),ti={class:"bottom-navigation"},ci=Object(s["g"])("    3-4-3. script "),si=Object(s["g"])(" 3-5. Component    ");Object(s["r"])();var bi=Na((function(e,t,c,b,n,l){var a=Object(s["y"])("toy-icon");return Object(s["q"])(),Object(s["d"])("div",Wa,[za,Ba,Ga,Object(s["h"])("div",Ka,[Ya,Qa,Xa,Za,ei,Object(s["h"])("div",ti,[Object(s["h"])("div",{class:"left",onClick:t[1]||(t[1]=function(t){return e.$router.push("/skill/structure/script")})},[Object(s["h"])(a,{icon:"arrow-left"}),ci]),Object(s["h"])("div",{class:"right",onClick:t[2]||(t[2]=function(t){return e.$router.push("/skill/component/summary")})},[si,Object(s["h"])(a,{icon:"arrow-right"})])])])])})),ni={name:"style"};ni.render=bi,ni.__scopeId="data-v-ccde6ade";var li=ni,ai=c("0c7f"),ii=c.n(ai),ji=Object(s["F"])("data-v-df6cad8c");Object(s["t"])("data-v-df6cad8c");var ri={class:"component-summary-page content-page"},Oi=Object(s["h"])("div",{class:"main-title"},[Object(s["h"])("span",{class:"index"},"3-5-1."),Object(s["g"])(" Summary")],-1),oi=Object(s["h"])("hr",null,null,-1),ui=Object(s["h"])("div",{class:"content-box"},[Object(s["h"])("div",{class:"content-level-1"},[Object(s["h"])("p",null,[Object(s["g"])(" entry 파일을 진입점으로 하는 SPA에서의 Vue.js는 아래와 같이 화면들에 매핑된 Vue파일들이 "),Object(s["h"])("b",null,"트리형태로 구성"),Object(s["g"])("되어 있습니다. ")]),Object(s["h"])("div",{class:"image-box"},[Object(s["h"])("img",{src:ii.a}),Object(s["h"])("span",{class:"under-text"},"[ 화면과 Vue의 트리구조 ]")]),Object(s["h"])("p",null,[Object(s["g"])(" 이러한 트리 형태가 가능한 이유는, 우선적으로 vue-router를 통해서 URL의 변경시 해당 영역만 렌더링되는 중앙교체형 방식임과 동시에 각 Vue 파일내에서 필요한 타파일들을 import 함으로써 의존성이 체인처럼 연결되기 때문이며, 핵심적으로는 각 Vue파일이 "),Object(s["h"])("b",null,"컴포넌트"),Object(s["g"])("라는 단위로 분류됨으로써 재사용이 가능하기 때문입니다. "),Object(s["h"])("br")])])],-1),hi=Object(s["h"])("hr",null,null,-1),pi={class:"bottom-navigation"},di=Object(s["g"])(" 3-5-2. Custom    ");Object(s["r"])();var gi=ji((function(e,t,c,b,n,l){var a=Object(s["y"])("toy-icon");return Object(s["q"])(),Object(s["d"])("div",ri,[Oi,oi,ui,hi,Object(s["h"])("div",pi,[Object(s["h"])("div",{class:"right",onClick:t[1]||(t[1]=function(t){return e.$router.push("/skill/component/custom")})},[di,Object(s["h"])(a,{icon:"arrow-right"})])])])})),vi={name:"componentSummary"};vi.render=gi,vi.__scopeId="data-v-df6cad8c";var mi=vi,xi=c("84ef"),fi=c.n(xi),yi=c("374f"),Si=c.n(yi),Vi=c("2862"),ki=c.n(Vi),_i=Object(s["F"])("data-v-012df059");Object(s["t"])("data-v-012df059");var wi={class:"component-custom-page content-page"},Ai=Object(s["h"])("div",{class:"main-title"},[Object(s["h"])("span",{class:"index"},"3-5-2."),Object(s["g"])(" Custom")],-1),Ci=Object(s["h"])("hr",null,null,-1),Mi={class:"content-box"},Ri={class:"content-level-1"},Li=Object(s["g"])(" *.vue의 확장자를 가지는 Vue 파일은 모두 컴포넌트입니다."),Ii=Object(s["h"])("br",null,null,-1),$i=Object(s["g"])(" 따라서 모든 Vue 파일은 모든 Vue 파일에서 import 할 수 있으며, 그에따라 재사용이 가능합니다."),Pi=Object(s["h"])("br",null,null,-1),Ti=Object(s["g"])(" 기본적인 컴포넌트 활용에 대한 설명은 "),Di=Object(s["g"])("의 "),Hi=Object(s["h"])("b",null,"#02. components",-1),Ui=Object(s["g"])("항목에서 설명했었습니다. "),Fi=Object(s["h"])("div",{class:"image-box"},[Object(s["h"])("img",{src:Zl.a}),Object(s["h"])("span",{class:"under-text"},"[ component import 후 활용 ]")],-1),qi=Object(s["h"])("p",null,[Object(s["g"])(" 위와같이 활용할 컴포넌트를 import하고 "),Object(s["h"])("b",null,"components"),Object(s["g"])("쪽에 명시하면, HTML DOM 태그들과 동일한 형태로 <template>영역에서 사용할 수 있게됩니다. ")],-1),Ji={class:"content-box"},Ei=Object(s["h"])("div",{class:"sub-title"},[Object(s["h"])("span",{class:"index"},"1."),Object(s["g"])(" $emit과 props")],-1),Ni={class:"content-level-1"},Wi=Object(s["g"])(" Vue로 이루어진 웹페이지는 앞선 "),zi=Object(s["g"])(" 에서 보셨던 것처럼 트리형구조를 이루기때문에 아래와 같이 각 컴포넌트간에 Parent와 Child의 개념이 적용되게 됩니다. "),Bi=Object(s["h"])("div",{class:"image-box"},[Object(s["h"])("img",{src:fi.a}),Object(s["h"])("span",{class:"under-text"},"[ component 간 트리구조의 Parent & Child ]")],-1),Gi=Object(s["h"])("p",null,[Object(s["g"])(" 컴포넌트를 import 해서 사용하는 쪽이, "),Object(s["h"])("b",null,"Parent"),Object(s["g"])("."),Object(s["h"])("br"),Object(s["g"])(" 컴포넌트로 정의되어 사용당하는 쪽이, "),Object(s["h"])("b",null,"Child"),Object(s["g"])("로 보시면 되는데요."),Object(s["h"])("br"),Object(s["g"])(" 여기서 익숙한 "),Object(s["h"])("b",null,"props"),Object(s["g"])("키워드가 보입니다. ")],-1),Ki=Object(s["h"])("div",{class:"content-level-1"},[Object(s["h"])("p",{class:"third-title"},[Object(s["h"])("span",{class:"index"},"#01."),Object(s["g"])(" props(Parent to child)")]),Object(s["h"])("div",{class:"image-box"},[Object(s["h"])("img",{src:ja.a}),Object(s["h"])("span",{class:"under-text"},"[ 컴포넌트를 활용할 때의 Props ]")]),Object(s["h"])("p",null,[Object(s["g"])(" 이와같이 컴포넌트를 활용한 태그영역에서, 해당 컴포넌트의 옵션값으로 줄 수 있는 키워드들을 "),Object(s["h"])("b",null,"props"),Object(s["g"])("라고 했는데요. 엄밀히 말해서 이 props는 Parent로부터 데이터를 Child에게 전달해주는 역할을 하는 것입니다. 그리고 그 전달의 과정에서, 컴포넌트를 사용하는 측(Parent)이 사용되는 측(Child)의 형태 및 옵션을 핸들링하는 것이 당연하기에, Parent의 변수나 메서드를 바탕으로 props 값을 조율해서 Child에게 전달하는 것입니다. ")])],-1),Yi=Object(s["h"])("div",{class:"content-level-1"},[Object(s["h"])("p",{class:"third-title"},[Object(s["h"])("span",{class:"index"},"#02."),Object(s["g"])(" this.$emit(Child to parent)")]),Object(s["h"])("div",{class:"image-box"},[Object(s["h"])("img",{src:Si.a}),Object(s["h"])("span",{class:"under-text"},"[ 컴포넌트를 활용할 때의 emit ]")]),Object(s["h"])("p",null,[Object(s["g"])(" props를 통해서 Parent의 데이터가 Child에게 전달된다면, 당연히 반대로 Child로부터도 Parent에게 무언가를 요청할 수 있어야 합니다. 그리고 그때 쓰이는 함수가 바로 this가 내장하고있는 $emit이며, $emit은 이벤트를 발생시킵니다. Child내부에서 $emit을 통해 발생한 이벤트는 Javascript의 특성에 따라 버블링되며 이를 캐치하는 디렉티브가 바로 "),Object(s["h"])("b",null,"v-on"),Object(s["g"])(" 즉, "),Object(s["h"])("b",null,"@(at)"),Object(s["g"])("입니다. (여기서 this.$emit에 전달되는 첫번째 파라미터는 이벤트명이며, 두번째부터는 버블링을 통해 전달될 파라미터입니다) "),Object(s["h"])("br"),Object(s["h"])("br"),Object(s["g"])(" 위의 예시코드는 nameCard.vue 라는 컴포넌트 내부에 버튼을 클릭시 발생하는 $emit이 정의되어 있는데요. 해당 컴포넌트가 <name-card>라는 태그형태로 사용되는 코드에는 @search라는 키워드를 통해 Parent에 정의된 "),Object(s["h"])("b",null,"searchUser"),Object(s["g"])("메서드로 연결해주고 있습니다. "),Object(s["h"])("br"),Object(s["h"])("br"),Object(s["g"])(" 즉, Child 컴포넌트가 가진 버튼이 클릭되고 search 메서드가 호출되면 정의된 내용에 따라 this.$emit('search', this.name)이 발생하고, 이는 곧 Parent의 searchUser 메서드를 실행시키는 것입니다."),Object(s["h"])("br"),Object(s["g"])(" (그리고 이때 this.$emit을 통해 Parent의 메서드로 넘겨줘야 할 데이터가 있다면, 예제에서 this.name을 넘겨줬듯이 두번째 이후의 파라미터로 전달해주면 됩니다) "),Object(s["h"])("br"),Object(s["h"])("br"),Object(s["g"])(" 이와같이 props와 $emit으로 구분해주는 이유는, 단순히 Child에서 발생한 이벤트나 데이터를 Parent에게 넘겨주기 위함도 있지만 "),Object(s["h"])("b",null,"핵심적으로는 Parent에서 props를 통해 Child에게 전달된 데이터의 주체는 어디까지나 Parent여야하기 때문"),Object(s["g"])("입니다. "),Object(s["h"])("br"),Object(s["h"])("br"),Object(s["g"])(" props를 통한 데이터의 전달시, 내부적으로 얕은 복사(Shallow copy)가 발생하게되는데요."),Object(s["h"])("br"),Object(s["g"])(" 이로인해 데이터의 소유주는 Parent지만 Child에서도 값에대한 참조가 가능해짐으로써 "),Object(s["h"])("b",null,"Child내에서 props로 전달된 값을 수정하면 Parent의 데이터가 오염"),Object(s["g"])("되게 됩니다. 그렇기 때문에 props로 전달된 데이터의 변조는 오너쉽을 가진 Parent에서만 가능하게 우리는 코딩을 해야합니다. "),Object(s["h"])("br"),Object(s["h"])("br"),Object(s["g"])(" 그리고 그런 프로세스를 위해서 Vue.js는 props에 대응되는 this.$emit을 내장하고 있는 것입니다."),Object(s["h"])("br"),Object(s["g"])(" (props로 전달된 값을 애초에 Vue.js가 막으면 좋겠지만, Javascript라는 언어에서 변수를 참조하는 특성상 불가능하기에 $emit을 사용하게끔 Vue.js는 가이드하고 있습니다) ")]),Object(s["h"])("div",{class:"gray-box"},[Object(s["h"])("div",{class:"image-box"},[Object(s["h"])("img",{src:ki.a}),Object(s["h"])("span",{class:"under-text"},"[ v-model과 :value 그리고 @input ]")]),Object(s["h"])("p",null,[Object(s["h"])("b",null,"v-model이라던 ':value + @input'"),Object(s["h"])("br"),Object(s["g"])(" <input>태그와 같은 HTML의 기본 태그들도 Vue.js의 <template>에서는 컴포넌트로 해석해야합니다. 그리고 <input>태그는 HTML의 기본 태그로써, 개발자가 별다른 정의를 하지 않아도 value라는 props(요소)를 가지고 있고 onInput 이벤트를 통해 해당 값을 변경하게 되어있습니다. 따라서 Parent에서는 value props를 통해 <input>태그에게 title이라는 데이터가 가진 값은 전달하지만 실제 참조된 값의 수정은 Parent에서 발생해야하므로, $emit를 통해 @input가 캐치하여 title의 값이 변경하게 되도록 해야하는 것입니다."),Object(s["h"])("br"),Object(s["g"])(" (위 코드에서 @input 부분을 정의하지 않게되면, 브라우저에 렌더링된 <input>태그에서는 사용자의 입력에따라 값이 변경된 것처럼 보이지만 Parent에 정의된 실제 title 변수의 값은 변하지 않습니다) ")])])],-1),Qi=Object(s["h"])("hr",null,null,-1),Xi={class:"bottom-navigation"},Zi=Object(s["g"])("    3-5-1. Summary "),ej=Object(s["g"])(" 3-6. Store(Vuex)    ");Object(s["r"])();var tj=_i((function(e,t,c,b,n,l){var a=Object(s["y"])("toy-icon");return Object(s["q"])(),Object(s["d"])("div",wi,[Ai,Ci,Object(s["h"])("div",Mi,[Object(s["h"])("div",Ri,[Object(s["h"])("p",null,[Li,Ii,$i,Pi,Ti,Object(s["h"])("span",{class:"inner-link",onClick:t[1]||(t[1]=function(t){return e.$router.push("/skill/structure/script")})},"3-4-3. script"),Di,Hi,Ui]),Fi,qi])]),Object(s["h"])("div",Ji,[Ei,Object(s["h"])("div",Ni,[Object(s["h"])("p",null,[Wi,Object(s["h"])("span",{class:"inner-link",onClick:t[2]||(t[2]=function(t){return e.$router.push("/skill/component/summary")})},"3-5-1. Summary"),zi]),Bi,Gi]),Ki,Yi]),Qi,Object(s["h"])("div",Xi,[Object(s["h"])("div",{class:"left",onClick:t[3]||(t[3]=function(t){return e.$router.push("/skill/component/summary")})},[Object(s["h"])(a,{icon:"arrow-left"}),Zi]),Object(s["h"])("div",{class:"right",onClick:t[4]||(t[4]=function(t){return e.$router.push("/skill/store")})},[ej,Object(s["h"])(a,{icon:"arrow-right"})])])])})),cj={name:"componentCustom"};cj.render=tj,cj.__scopeId="data-v-012df059";var sj=cj,bj=c("497f"),nj=c.n(bj),lj=c("7891"),aj=c.n(lj),ij=c("5145"),jj=c.n(ij),rj=c("8fd1"),Oj=c.n(rj),oj=c("e211"),uj=c.n(oj),hj=c("01ba"),pj=c.n(hj),dj=c("5df6"),gj=c.n(dj),vj=c("8ebb"),mj=c.n(vj),xj=Object(s["F"])("data-v-61855a50");Object(s["t"])("data-v-61855a50");var fj={class:"store-page content-page"},yj=Object(s["h"])("div",{class:"main-title"},[Object(s["h"])("span",{class:"index"},"3-6."),Object(s["g"])(" Store"),Object(s["h"])("span",{class:"mini-title"},"(Vuex)")],-1),Sj=Object(s["h"])("hr",null,null,-1),Vj=Object(s["h"])("div",{class:"content-box"},[Object(s["h"])("div",{class:"content-level-1"},[Object(s["h"])("p",null,[Object(s["g"])(" Vue.js 기반의 SPA에서는 Vue 파일을 포함한 N개의 모듈들이 하나의 Javascript로 규합되고, 마찬가지로 하나의 HTML 파일내에 <script>태그와 해당 Javascript파일의 경로를 전달함으로써 웹 서비스가 구축되게 됩니다. "),Object(s["h"])("br"),Object(s["h"])("br"),Object(s["h"])("b",null,"Store"),Object(s["g"])("는 이런 웹 서비스를 구축할 때, 전역으로 활용되어야 하는 데이터를 저장하고 호출하여 사용하기 위한 개념입니다. 공식 정의는 "),Object(s["h"])("b",null,"Vue.js기반의 애플리케이션에 대한 상태관리 라이브러리"),Object(s["g"])("입니다. 여기서의 상태가 뜻하는 것이 앞서말한 '데이터'이며, 대표적으로 사용자의 로그인정보라던가, 메뉴구성과 같이 어떤 화면에서도 접근이 가능해야 하는 데이터가 이에 해당합니다. 사용시 주의할 점은 "),Object(s["h"])("b",null,"전역"),Object(s["g"])("의 개념이 적용되기때문에 호출법만 안다면 어떤 Vue 파일에서도 해당 데이터에 대한 접근이 가능합니다. ")]),Object(s["h"])("br"),Object(s["h"])("br"),Object(s["h"])("p",null," URL의 변경에 따른 라우터의 변경(Vue화면의 교체)을 vue-router라는 npm 패키지의 도움을 받았듯이 Store 또한, vuex라는 npm 패키지의 도움을 받아서 활용하게 됩니다. ")])],-1),kj=Object(s["h"])("div",{class:"content-box"},[Object(s["h"])("div",{class:"sub-title"},[Object(s["h"])("span",{class:"index"},"1."),Object(s["g"])(" 설치하기")]),Object(s["h"])("div",{class:"content-level-1"},[Object(s["h"])("p",null," vuex를 사용하기 위해 필요한 사전 작업은 vue-router와 흡사하며, 아래 2개의 방법중 하나를 선택하여 설치하시면 됩니다. "),Object(s["h"])("div",{class:"gray-box"},[Object(s["h"])("p",null,[Object(s["g"])("1. "),Object(s["h"])("b",null,"npm install vuex@next"),Object(s["g"])("명령어를 직접 실행")]),Object(s["h"])("p",null,[Object(s["g"])("2. package.json에 패키지 명과 버전명을 명시한 후 "),Object(s["h"])("b",null,"npm install"),Object(s["g"])("명령어 실행")])]),Object(s["h"])("div",{class:"image-box"},[Object(s["h"])("img",{src:nj.a}),Object(s["h"])("span",{class:"under-text"},"[ package.json의 Vuex 명시 ]")]),Object(s["h"])("p",null,[Object(s["g"])(" 패키지의 설치가 완료되었다면, 이제 활용할 Vue Application 객체에게 vuex를 심어주어야 하는데요. 이는 vue-router를 심어줄때와 마찬가지로, createApp 함수를 통해 생성된 "),Object(s["h"])("b",null,"Vue Application 객체에 use 함수를 활용하여 위 예제와 같이 플러그인"),Object(s["g"])("으로 심어주면 되겠습니다. ")]),Object(s["h"])("div",{class:"image-box"},[Object(s["h"])("img",{src:aj.a}),Object(s["h"])("span",{class:"under-text"},"[ 엔트리파일의 Vuex 명시 ]")])])],-1),_j=Object(s["h"])("div",{class:"content-box"},[Object(s["h"])("div",{class:"sub-title"},[Object(s["h"])("span",{class:"index"},"2."),Object(s["g"])(" Vuex의 3대장(State, Mutations, Actions)")]),Object(s["h"])("div",{class:"content-level-1"},[Object(s["h"])("div",{class:"image-box"},[Object(s["h"])("img",{src:jj.a}),Object(s["h"])("span",{class:"under-text"},"[ Vuex의 기본 모식도 ]")]),Object(s["h"])("p",null,[Object(s["g"])(" Vuex와 관리된 핵심 개념에는 State, Mutations, Actions의 3대장이 있으며, 해당 개념들은 서로간에 단방향적인 특성을 가지고 있습니다. 모식도에서와같이, State에 대한 접근은 Mutations이 담당하고 Mutations에 대한 접근은 Actions가, Actions에 대한 접근은 Vue 컴포넌트로써 Vuex외적인 영역에서만 접근하게 되어있습니다"),Object(s["h"])("br"),Object(s["g"])(" (물론 이는 강제적인 것은 아니며, Actions에서도 얼마든지 State에 접근이 가능합니다. 다만, 권장사항은 위와같기때문에 지켜주시는 것이 좋습니다) ")])]),Object(s["h"])("div",{class:"content-level-1"},[Object(s["h"])("p",{class:"third-title"},[Object(s["h"])("span",{class:"index"},"#01."),Object(s["g"])(" State")]),Object(s["h"])("p",null,[Object(s["g"])(" Vuex는 상태관리 라이브러리이며, 그렇기에 관리할 "),Object(s["h"])("b",null,"상태"),Object(s["g"])("가 필수적이며 이때의 상태가 바로 "),Object(s["h"])("b",null,"State"),Object(s["g"])("입니다."),Object(s["h"])("br"),Object(s["g"])(" 즉, 데이터를 가지고 있는 주체 혹은 이해하기 쉽게 "),Object(s["h"])("b",null,"변수명"),Object(s["g"])("이라고 생각하시면 됩니다."),Object(s["h"])("br"),Object(s["g"])(" (JAVA의 VO(혹은 DTO)클래스를 예로 들자면 "),Object(s["h"])("b",null,"private String name;"),Object(s["g"])("과 같이 선언된 변수가 state입니다) ")]),Object(s["h"])("div",{class:"image-box"},[Object(s["h"])("img",{src:Oj.a}),Object(s["h"])("span",{class:"under-text"},"[ Vuex의 State 예제 ]")]),Object(s["h"])("p",null," 모듈로써 활용되기 위해 JSON 형태(Key-Value)를 띄고있으며 Key값을 토대로 Mutations에서 State에 접근하여 State를 변경 할 수 있습니다. ")]),Object(s["h"])("div",{class:"content-level-1"},[Object(s["h"])("p",{class:"third-title"},[Object(s["h"])("span",{class:"index"},"#02."),Object(s["g"])(" Mutation")]),Object(s["h"])("p",null,[Object(s["g"])(" State가 '상태관리 라이브러리'라는 정의에서 "),Object(s["h"])("b",null,"상태"),Object(s["g"])("를 담당했다면 Mutations은 "),Object(s["h"])("b",null,"관리"),Object(s["g"])("를 담당하고 있습니다."),Object(s["h"])("br"),Object(s["g"])(" 즉, State가 가지고 있는 데이터(상태)를 변경하려면 Mutations에 정의된 함수를 사용해야합니다. "),Object(s["h"])("br"),Object(s["h"])("br"),Object(s["g"])(" 여기까지 들으시면 굉장히 비슷한 개념이 하나 떠오르실 수도 있습니다. 바로 JAVA의 캡슐화(Encapsulation)입니다. 앞서서 State를 JAVA의 VO(혹은 DTO)와 비교해드렸었는데요. 같은 맥락으로써, 매칭을 해보면 State가 Attribute, Mutationos가 Method 역할을 하고 있습니다. ")]),Object(s["h"])("div",{class:"image-box"},[Object(s["h"])("img",{src:uj.a}),Object(s["h"])("span",{class:"under-text"},"[ Vuex의 Mutations 예제 ]")]),Object(s["h"])("p",null,[Object(s["g"])(" Mutations의 기본은 Javascript의 함수와 동일한 형태를 띄고있습니다."),Object(s["h"])("br"),Object(s["g"])(" 여기서 주의할 부분은 이 함수들의 "),Object(s["h"])("b",null,"첫 번째 파라미터"),Object(s["g"])("인데요."),Object(s["h"])("br"),Object(s["g"])(" Mutations로 정의되는 함수의 "),Object(s["h"])("b",null,"첫번째 전달인자는 무조건 state 객체"),Object(s["g"])("입니다. 이는 Vuex 내부적으로 정의된 사항으로써, 개발자가 변경할 수 없는 내용이며 해당 객체에는 JSON 형태로 정의되었던 State의 모든 Key-Value 쌍들이 존재하고 있습니다. 그리고 이 객체를 통해 Mutations 함수 내부에서 State의 상태들이 가지고 있는 값에 접근할 수 있는 것입니다. "),Object(s["h"])("br"),Object(s["h"])("br"),Object(s["g"])(" 여기서 한 가지 더, 짚어야 할 부분은 "),Object(s["h"])("b",null,"첫 번째 파라미터 외의 파라미터들"),Object(s["g"])("입니다. State에 대한 접근을 Mutations을 이용해야만 하듯이 Mutations에 대한 호출을 위해서는 Actions를 이용해야 합니다. 그리고 이때 Actions에서 Mutations를 호출하면서 넘겨주는 파라미터가 있을 경우, 그 파라미터들이 바로 Mutations에서 두 번째 파라미터부터 순차적으로 들어가게 됩니다. ")])]),Object(s["h"])("div",{class:"content-level-1"},[Object(s["h"])("p",{class:"third-title"},[Object(s["h"])("span",{class:"index"},"#03."),Object(s["g"])(" Actions")]),Object(s["h"])("p",null," State가 '상태', Mutations가 '관리'를 담당하고 있으며 Vuex는 상태관리 라이브러리라고 했습니다. Actions는 이러한 상태관리체제를 실제 활용소에서 호출할 때 활용되며, 만약 상태관리를 하기 전에 필요한 비동기적 프로세스(보통은 서버와의 연계)가 필요하다면 Actions에서 그 프로세스를 정의해주어야 합니다. "),Object(s["h"])("div",{class:"image-box"},[Object(s["h"])("img",{src:pj.a}),Object(s["h"])("span",{class:"under-text"},"[ Vuex의 Actions 예제 ]")]),Object(s["h"])("p",null,[Object(s["g"])(" Actions에 정의되는 내용또한, Mutations처럼 함수의 형태를 띄고 있습니다."),Object(s["h"])("br"),Object(s["g"])(" 그리고 마찬가지로 정의되는 함수의 "),Object(s["h"])("b",null,"첫 번째 파라미터"),Object(s["g"])("가 정해져있는데요. 바로 store 객체로 파라미터가 고정되어 있습니다. Mutations에서 state가 Vuex의 state였듯이, Actions에서 파라미터로써의 store도 인스턴스화 된 Vuex 객체인 store를 가리킵니다. 이를 통해 Actions 내에서 Mutations에 정의된 함수를 호출 할 수 있게되며, 이때 캡쳐에서 볼 수 있듯이 store의 내장함수인 "),Object(s["h"])("b",null,"commit"),Object(s["g"])("을 활용하게 됩니다. "),Object(s["h"])("br"),Object(s["h"])("br"),Object(s["g"])(" commit 함수를 통해서 Mutations를 호출할 때도 전달되는 "),Object(s["h"])("b",null,"파라미터가 중요"),Object(s["g"])("한데요. commit 함수의 첫번째 파라미터는 Mutations의 이름이며, 뒤이어 전달되는 파라미터들이 바로 Mutations의 함수를 정의할 때 state 다음으로 두번째로 정의되는 파라미터에 순서대로 매핑되게 됩니다. ")]),Object(s["h"])("div",{class:"gray-box"},[Object(s["h"])("p",null,[Object(s["g"])(" 예시를 들어보자면"),Object(s["h"])("br"),Object(s["g"])(" 1. Actions에서 store.commit('sampleFunc', {'name' : 'Ace', 'age': '22'})과 같이 정의됐을경우"),Object(s["h"])("br"),Object(s["g"])(" 2. Mutations에 'sampleFunc'라는 이름으로 정의된 함수가 호출이되며"),Object(s["h"])("br"),Object(s["g"])(" 3. 이 함수가 sampleFunc(state, payload) 와 같은 형태로 정의되어있다면"),Object(s["h"])("br"),Object(s["g"])(" 4. 두 번째 파라미터인 payload는 {'name' : 'Ace', 'age': '22'} 라는 객체를 가리키게 되는 겁니다."),Object(s["h"])("br"),Object(s["g"])(" 5. 이를 통해 Mutations의 sampleFunc은 state.person = payload 같은 코드로 state의 값을 변경하는 것입니다. ")])]),Object(s["h"])("p",null,[Object(s["g"])(" 또한, "),Object(s["h"])("b",null,"Vuex를 통해서 관리되는 상태와 유관한 비동기 프로세스(Axios / ajax)가 있다면 모식도 및 예시코드와 같이 Actions 함수내에서 정의하는 것을 권장"),Object(s["g"])("하고 있습니다. ")])])],-1),wj=Object(s["h"])("div",{class:"content-box"},[Object(s["h"])("div",{class:"sub-title"},[Object(s["h"])("span",{class:"index"},"3."),Object(s["g"])(" 코드에서 활용하기")]),Object(s["h"])("div",{class:"content-level-1"},[Object(s["h"])("p",null,[Object(s["g"])(" State는 Mutations가 수정하고, 수정을 위한 Mutations는 Actions가 호출합니다."),Object(s["h"])("br"),Object(s["g"])(" 그리고 이러한 Actions를 호출하는 주체가 바로 "),Object(s["h"])("b",null,"Vue 컴포넌트"),Object(s["g"])("입니다. ")]),Object(s["h"])("div",{class:"image-box"},[Object(s["h"])("img",{src:gj.a}),Object(s["h"])("span",{class:"under-text"},"[ Vuex의 dispatch ]")]),Object(s["h"])("p",null,[Object(s["g"])(" 인스턴스화 된 Vue Application 객체는 코드내에서 this라는 지시자를 통해 접근할 수 있으며, 이 this는 $router와 같이 인스턴스화 할 때 플러그인으로 심어놓은 객체들을 가지고 있습니다. vue-router인스턴스를 전달한 객체가 $router 혹은 $route이듯이 "),Object(s["h"])("b",null,"Vuex 인스턴스는 $store라는 고유객체명을 가지고 this안에 내포"),Object(s["g"])("하게 됩니다. "),Object(s["h"])("br"),Object(s["h"])("br"),Object(s["g"])(" 그리고 개발자는 Vue 컴포넌트내에서 "),Object(s["h"])("b",null,"dispatch"),Object(s["g"])("라는 Vuex의 내장함수를 이용해 Actions에 정의한 함수를 호출하며, 이는 Actions내에서 Mutations를 호출해주던 commit과 동일한 파라미터 순서를 가집니다. 즉, dispatch의 첫번째 파라미터는 Actions의 함수명이며 두번째부터는 Actions의 함수가 전달받는 실제 파라미터 값들로 구성되어집니다. ")]),Object(s["h"])("div",{class:"gray-box"},[Object(s["h"])("b",null,"정리해보자면"),Object(s["h"])("br"),Object(s["g"])(" 1. Vue 컴포넌트에서는 this.$store.dispatch를 활용해 Actions를 호출하고"),Object(s["h"])("br"),Object(s["g"])(" 2. 호출된 Actions에서는 비동기 프로세스와 같은 추가 프로세스 이후에 commit을 이용해 Mutations를 호출하며"),Object(s["h"])("br"),Object(s["g"])(" 3. Mutations는 파라미터로 전달받은 state 객체를 통해 State의 값을 변경합니다. ")])])],-1),Aj=Object(s["h"])("hr",null,null,-1),Cj=Object(s["h"])("div",{class:"content-box"},[Object(s["h"])("div",{class:"sub-title"},[Object(s["h"])("span",{class:"index"},"-1."),Object(s["g"])(" 별첨")]),Object(s["h"])("div",{class:"content-level-1"},[Object(s["h"])("p",{class:"third-title"},[Object(s["h"])("span",{class:"index"},"#01."),Object(s["g"])(" 3대장에 따라붙는 Getters")]),Object(s["h"])("p",null,[Object(s["g"])(" Getters는 Vuex에서 부가적인 개념인데요."),Object(s["h"])("br"),Object(s["g"])(" 비유하자면, Getters는 Vue컴포넌트의 <script>영역 구성요소중 computed와 같은 역할을 맡고 있습니다. computed가 data영역의 변수에 종속적이었듯이, "),Object(s["h"])("b",null,"Getters는 State의 상태에 종속적이며 이를 통해 계산이 필요한 결과를 리턴"),Object(s["g"])("합니다. ")]),Object(s["h"])("div",{class:"image-box"},[Object(s["h"])("img",{src:mj.a}),Object(s["h"])("span",{class:"under-text"},"[ Vuex의 Getters ]")]),Object(s["h"])("p",null,[Object(s["g"])(" Getters 또한 Mutations이나 Actions과 같이 함수의 형태를 띄며, "),Object(s["h"])("b",null,"첫 번째 파라미터는 state, 두번 째 파라미터는 getters"),Object(s["g"])("로 정해져 있습니다."),Object(s["h"])("br"),Object(s["g"])(" 따라서 예시코드와 같이, State로 관리되는 상태값을 직접적으로 Vue 컴포넌트에 노출시키지않고싶거나 위 설명과 같이 계산의 형태도 추가적 프로세스가 필요할 경우 Getters를 사용합니다. ")])])],-1),Mj=Object(s["h"])("hr",null,null,-1),Rj={class:"bottom-navigation"},Lj=Object(s["g"])("    3-5-2. Custom "),Ij=Object(s["g"])(" 4-1. Trouble Shooting    ");Object(s["r"])();var $j=xj((function(e,t,c,b,n,l){var a=Object(s["y"])("toy-icon");return Object(s["q"])(),Object(s["d"])("div",fj,[yj,Sj,Vj,kj,_j,wj,Aj,Cj,Mj,Object(s["h"])("div",Rj,[Object(s["h"])("div",{class:"left",onClick:t[1]||(t[1]=function(t){return e.$router.push("/skill/component/custom")})},[Object(s["h"])(a,{icon:"arrow-left"}),Lj]),Object(s["h"])("div",{class:"right",onClick:t[2]||(t[2]=function(t){return e.$router.push("/trouble/memory")})},[Ij,Object(s["h"])(a,{icon:"arrow-right"})])])])})),Pj={name:"store"};Pj.render=$j,Pj.__scopeId="data-v-61855a50";var Tj=Pj,Dj=Object(s["F"])("data-v-2b95f278");Object(s["t"])("data-v-2b95f278");var Hj={class:"memory-page content-page"},Uj=Object(s["h"])("h5",null,"memory page",-1);Object(s["r"])();var Fj=Dj((function(e,t,c,b,n,l){return Object(s["q"])(),Object(s["d"])("div",Hj,[Uj])})),qj={name:"memory"};qj.render=Fj,qj.__scopeId="data-v-2b95f278";var Jj=qj,Ej=Object(s["F"])("data-v-57f43878");Object(s["t"])("data-v-57f43878");var Nj={class:"performance-page content-page"},Wj=Object(s["h"])("h5",null,"performance page",-1);Object(s["r"])();var zj=Ej((function(e,t,c,b,n,l){return Object(s["q"])(),Object(s["d"])("div",Nj,[Wj])})),Bj={name:"performance"};Bj.render=zj,Bj.__scopeId="data-v-57f43878";var Gj=Bj,Kj=Object(s["F"])("data-v-fab90fa8");Object(s["t"])("data-v-fab90fa8");var Yj={class:"install-page content-page"},Qj=Object(s["h"])("h5",null,"install page",-1);Object(s["r"])();var Xj=Kj((function(e,t,c,b,n,l){return Object(s["q"])(),Object(s["d"])("div",Yj,[Qj])})),Zj={name:"install"};Zj.render=Xj,Zj.__scopeId="data-v-fab90fa8";var er=Zj,tr=Object(s["F"])("data-v-a2e4d2a8");Object(s["t"])("data-v-a2e4d2a8");var cr={class:"directory-page content-page"},sr=Object(s["h"])("h5",null,"directory page",-1);Object(s["r"])();var br=tr((function(e,t,c,b,n,l){return Object(s["q"])(),Object(s["d"])("div",cr,[sr])})),nr={name:"directory"};nr.render=br,nr.__scopeId="data-v-a2e4d2a8";var lr=nr,ar=Object(s["F"])("data-v-43455d60");Object(s["t"])("data-v-43455d60");var ir={class:"playground-page content-page"},jr=Object(s["h"])("h5",null,"playground page",-1);Object(s["r"])();var rr=ar((function(e,t,c,b,n,l){return Object(s["q"])(),Object(s["d"])("div",ir,[jr])})),Or={name:"playground"};Or.render=rr,Or.__scopeId="data-v-43455d60";var or=Or,ur=c("47cd"),hr=c.n(ur),pr=Object(s["F"])("data-v-167bbf6a");Object(s["t"])("data-v-167bbf6a");var dr={class:"biscuit-page"},gr=Object(s["f"])('<div class="biscuit-msg" data-v-167bbf6a><div class="msg-word" data-v-167bbf6a>비</div><div class="msg-word" style="font-weight:100;transform:rotate(30deg);left:84px;top:-16px;font-size:56px;" data-v-167bbf6a>스</div><div class="msg-word" style="transform:rotate(-40deg);left:168px;top:-56px;font-size:128px;" data-v-167bbf6a>킷,</div><div class="msg-word" style="top:68px;left:350px;font-size:40px;color:#ccc;" data-v-167bbf6a>비</div><div class="msg-word" style="left:380px;font-size:96px;transform:rotate(37deg);top:-40px;font-weight:300;color:white;" data-v-167bbf6a>스</div><div class="msg-word" style="left:480px;" data-v-167bbf6a>킷.</div><div class="msg-word" style="top:100px;left:360px;font-size:124px;font-weight:300;" data-v-167bbf6a>와</div><div class="msg-word" style="top:180px;left:462px;color:antiquewhite;" data-v-167bbf6a>그</div><div class="msg-word" style="top:108px;left:492px;font-size:84px;" data-v-167bbf6a>작,</div><div class="msg-word" style="top:42px;left:605px;font-size:148px;transform:rotate(30deg);" data-v-167bbf6a>와</div><div class="msg-word" style="top:178px;left:690px;transform:rotate(-60deg);" data-v-167bbf6a>그</div><div class="msg-word" style="top:100px;left:760px;font-size:96px;" data-v-167bbf6a>작.</div><div class="msg-word sentence" style="top:260px;" data-v-167bbf6a>맛</div><div class="msg-word sentence" style="top:253px;left:40px;transform:rotate(4deg);" data-v-167bbf6a>좋</div><div class="msg-word sentence" style="top:262px;left:80px;transform:rotate(-8deg);font-size:48px;" data-v-167bbf6a>은</div><div class="msg-word sentence" style="top:260px;left:150px;font-size:32px;color:white;" data-v-167bbf6a>비</div><div class="msg-word sentence" style="top:264px;left:180px;font-size:50px;font-weight:100;" data-v-167bbf6a>스</div><div class="msg-word sentence" style="top:258px;left:228px;font-size:42px;" data-v-167bbf6a>킷</div><div class="msg-word sentence" style="top:260px;left:278px;font-size:48px;" data-v-167bbf6a>을</div><div class="msg-word sentence" style="top:234px;left:348px;font-size:84px;font-weight:100;" data-v-167bbf6a>까</div><div class="msg-word sentence" style="top:248px;left:425px;font-size:48px;" data-v-167bbf6a>먹</div><div class="msg-word sentence" style="top:260px;left:470px;font-size:64px;transform:rotate(5deg);" data-v-167bbf6a>어</div><div class="msg-word sentence" style="top:240px;left:540px;font-size:96px;font-width:100;transform:rotate(-8deg);" data-v-167bbf6a>yo</div><div class="msg-word sentence" style="top:258px;left:650px;font-size:50px;" data-v-167bbf6a>!</div><div class="msg-word sentence" style="top:244px;left:712px;font-size:128px;color:white;" data-v-167bbf6a>&gt;ㅁ&lt;</div></div>',1),vr={class:"biscuit-box"},mr=Object(s["h"])("img",{class:"biscuit",src:hr.a},null,-1),xr=Object(s["h"])("span",{class:"jemok"},"밟으면 마이아파",-1),fr=Object(s["h"])("div",{style:{display:"none"}},[Object(s["h"])("h5",null,"1. 팩맨"),Object(s["h"])("h5",null,"2. 갤러그"),Object(s["h"])("h5",null,"3. 로드파이터"),Object(s["h"])("h5",null,"4. 산성비"),Object(s["h"])("h5",null,"5. 똥피하기")],-1);Object(s["r"])();var yr=pr((function(e,t,c,b,n,l){return Object(s["q"])(),Object(s["d"])("div",dr,[gr,Object(s["h"])("div",vr,[Object(s["h"])("div",{class:"biscuit-entrance",onClick:t[1]||(t[1]=function(t){return e.$router.push("/msweeper")})},[mr,xr])]),fr])})),Sr={mounted:function(){document.getElementsByClassName("frame-side")[0].style["display"]="none"},beforeUnmount:function(){document.getElementsByClassName("frame-side")[0].style["display"]="block"}};c("0f15");Sr.render=yr,Sr.__scopeId="data-v-167bbf6a";var Vr=Sr,kr=Object(s["F"])("data-v-fcc4b122");Object(s["t"])("data-v-fcc4b122");var _r={class:"not-found content-page"},wr=Object(s["h"])("h1",null,"404 Not Found",-1);Object(s["r"])();var Ar=kr((function(e,t,c,b,n,l){return Object(s["q"])(),Object(s["d"])("div",_r,[wr])})),Cr={name:"notFound"};c("fb3e");Cr.render=Ar,Cr.__scopeId="data-v-fcc4b122";var Mr=Cr,Rr=[{path:"/",redirect:"/home"},{path:"/home",component:$},{path:"/set",component:X},{path:"/overview",component:me},{path:"/base",redirect:"/base/mandatory"},{path:"/base/mandatory",redirect:"/base/mandatory/spa"},{path:"/base/mandatory/spa",component:Pe},{path:"/base/mandatory/webpack",component:mt},{path:"/base/mandatory/npm",component:Bt},{path:"/base/optional",redirect:"/base/optional/scss"},{path:"/base/optional/scss",component:$c},{path:"/skill",redirect:"/skill/architecture"},{path:"/skill/architecture",component:Qs},{path:"/skill/router",component:$b},{path:"/skill/axios",component:nn},{path:"/skill/structure",redirect:"/skill/architecture/summary"},{path:"/skill/structure/summary",component:Rn},{path:"/skill/structure/template",component:Wl},{path:"/skill/structure/script",component:Da},{path:"/skill/structure/style",component:li},{path:"/skill/component",redirect:"/skill/component/summary"},{path:"/skill/component/summary",component:mi},{path:"/skill/component/custom",component:sj},{path:"/skill/store",component:Tj},{path:"/trouble",redirect:"/trouble/memory"},{path:"/trouble/memory",component:Jj},{path:"/trouble/performance",component:Gj},{path:"/starter",redirect:"/starter/install"},{path:"/starter/install",component:er},{path:"/starter/directory",component:lr},{path:"/starter/playground",component:or},{path:"/biscuit",component:Vr},{path:"/:catchAll(.*)",component:Mr}],Lr=Object(k["a"])({history:Object(k["b"])(),routes:Rr});Lr.beforeEach((function(e,t,c){c()}));var Ir=Lr,$r=(c("159b"),Object(s["F"])("data-v-78377152"));Object(s["t"])("data-v-78377152");var Pr={class:"toy-button no-select"};Object(s["r"])();var Tr=$r((function(e,t,c,b,n,l){return Object(s["q"])(),Object(s["d"])("div",Pr,[Object(s["x"])(e.$slots,"default")])})),Dr=Object(s["i"])({name:"toyButton"});c("35d5");Dr.render=Tr,Dr.__scopeId="data-v-78377152";var Hr=Dr,Ur=Object(s["F"])("data-v-160b491e");Object(s["t"])("data-v-160b491e");var Fr={class:"toy-dropdown__list"};Object(s["r"])();var qr=Ur((function(e,t,c,b,n,l){var a=Object(s["y"])("toy-icon");return Object(s["q"])(),Object(s["d"])("div",{class:"toy-dropdown no-select",onClick:t[1]||(t[1]=function(){return e.toggleList&&e.toggleList.apply(e,arguments)})},[Object(s["g"])(Object(s["A"])(e.showValue)+" ",1),Object(s["h"])(a,{icon:e.state.isExpand?"angle-up":"angle-down",size:10},null,8,["icon"]),Object(s["E"])(Object(s["h"])("div",Fr,[(Object(s["q"])(!0),Object(s["d"])(s["a"],null,Object(s["w"])(e.items,(function(t,c){return Object(s["q"])(),Object(s["d"])("div",{class:"toy-dropdown__list-item",key:t.value+"_"+c,onClick:function(t){return e.selectItem(c)}},[Object(s["h"])("span",null,Object(s["A"])(t.text),1)],8,["onClick"])})),128))],512),[[s["C"],e.state.isExpand]])])})),Jr=c("b85c"),Er=Object(s["i"])({name:"toyDropdown",props:{value:{type:[String,Array,Object],default:function(){return"boolean"}},items:{type:Array,default:function(){return[{idx:0,text:"Boolean",value:"boolean"},{idx:1,text:"Number",value:"number"},{idx:2,text:"String",value:"string"},{idx:3,text:"Array",value:"array"},{idx:4,text:"Object",value:"object"}]}}},setup:function(e,t){var c=t.emit,b=Object(s["u"])({isExpand:!1}),n=Object(s["b"])((function(){var t,c=Object(Jr["a"])(e.items);try{for(c.s();!(t=c.n()).done;){var s=t.value;if(s.value===e.value)return s.text}}catch(b){c.e(b)}finally{c.f()}return""})),l=function(){b.isExpand=!b.isExpand},a=function(t){c("update:value",e.items[t].value)};return{state:b,showValue:n,toggleList:l,selectItem:a}}});c("728c");Er.render=qr,Er.__scopeId="data-v-160b491e";var Nr=Er,Wr=(c("99af"),Object(s["F"])("data-v-2991d5cf")),zr=Wr((function(e,t,c,b,n,l){return Object(s["q"])(),Object(s["d"])("svg",{xmlns:"http://www.w3.org/2000/svg",class:e.$props.class,viewBox:"0 0 ".concat(e.width," ").concat(e.height),style:e.iconStyle},[Object(s["h"])("path",{fill:"currentColor",d:e.svgPath},null,8,["d"])],14,["viewBox"])})),Br=(c("c96a"),c("ecee")),Gr=c("c074");Br["b"].add(Gr["a"]);var Kr=Object(s["i"])({name:"toyIcon",props:{icon:{type:String,required:!0},type:{type:String,default:"fas",required:!1},class:String,size:{type:[Number,String],default:""},small:{type:Boolean,default:!1},medium:{type:Boolean,default:!1},large:{type:Boolean,default:!1}},setup:function(e){var t=Object(s["b"])((function(){return Object(Br["a"])({prefix:e.type,iconName:e.icon})})),c=Object(s["b"])((function(){return t.value.icon[0]})),b=Object(s["b"])((function(){return t.value.icon[1]})),n=Object(s["b"])((function(){return t.value.icon[4]})),l=Object(s["b"])((function(){var t={};return e.small?t.width="12px":e.large?t.width="18px":e.size?t.width=e.size+"px":t.width="14px",t}));return{width:c,height:b,svgPath:n,iconStyle:l}}});Kr.render=zr,Kr.__scopeId="data-v-2991d5cf";var Yr=Kr,Qr=Object(s["F"])("data-v-694e230f"),Xr=Qr((function(e,t,c,b,n,l){return Object(s["q"])(),Object(s["d"])("input",{class:"toy-text-field",type:"text",value:c.value,onInput:t[1]||(t[1]=function(t){return e.$emit("update:value",t.target.value)})},null,40,["value"])})),Zr={name:"toyTextField",props:{value:{type:String,default:""}}};c("de1a");Zr.render=Xr,Zr.__scopeId="data-v-694e230f";var eO=Zr,tO={components:[Hr,Nr,Yr,eO]},cO={install:function(e){tO.components.forEach((function(t){e.component(t.name,t)}))}},sO=Object(s["c"])(V);sO.use(cO),sO.use(Ir),sO.mount("#app")},"583f":function(e,t,c){e.exports=c.p+"assets/img/node_version.2dc5ae6e.jpg"},"5aa7":function(e,t,c){e.exports=c.p+"assets/img/script_props_define.8e24b3c4.jpg"},"5d58":function(e,t,c){},"5df6":function(e,t,c){e.exports=c.p+"assets/img/vuex_dispatch.13b346d9.jpg"},"5f02":function(e,t,c){e.exports=c.p+"assets/img/2way.04094ae1.jpg"},"5f18":function(e,t,c){e.exports=c.p+"assets/img/build.1c4b8e25.jpg"},"5f9c":function(e,t,c){},"61e2":function(e,t,c){e.exports=c.p+"assets/img/axios_put.81d03f72.jpg"},"62bb":function(e,t,c){e.exports=c.p+"assets/img/style_default.41f6ddd4.jpg"},6554:function(e,t,c){},"692c":function(e,t,c){"use strict";c("5d58")},"693e":function(e,t,c){"use strict";c("3d97")},"6acb":function(e,t,c){"use strict";c("a15d")},"6cb9":function(e,t,c){e.exports=c.p+"assets/img/startup-time-comparison.3bbc7c54.jpg"},"6f67":function(e,t,c){e.exports=c.p+"assets/img/vue_summary.d7cd4731.jpg"},"728c":function(e,t,c){"use strict";c("17b7")},"77fc":function(e,t,c){e.exports=c.p+"assets/img/vue_template_class_computed.c42aa145.jpg"},7891:function(e,t,c){e.exports=c.p+"assets/img/store_entry.bdd4b65e.jpg"},"7a21":function(e,t,c){e.exports=c.p+"assets/img/router_redirect.e4057620.jpg"},"7a75":function(e,t,c){e.exports=c.p+"assets/img/router_import.74947526.jpg"},"7bca":function(e,t,c){e.exports=c.p+"assets/img/vue_template_colon_props.566e3495.jpg"},"7d80":function(e,t,c){e.exports=c.p+"assets/img/router_component.82d81074.jpg"},"7ec7":function(e,t,c){e.exports=c.p+"assets/img/v_model_detail.4e905625.jpg"},"84ef":function(e,t,c){e.exports=c.p+"assets/img/component_pc.ae8ac875.jpg"},"866b":function(e,t,c){e.exports=c.p+"assets/img/scss_loader.3fb369c7.jpg"},8768:function(e,t,c){e.exports=c.p+"assets/img/resolve.f12e894e.jpg"},8898:function(e,t,c){"use strict";c("4102")},"8cab":function(e,t,c){e.exports=c.p+"assets/img/vue2_entry.503467cc.jpg"},"8df1":function(e,t,c){e.exports=c.p+"assets/img/memory-allocation-comparison.21224ba6.jpg"},"8e0e":function(e,t,c){e.exports=c.p+"assets/img/entry_main.3110fddf.jpg"},"8ebb":function(e,t,c){e.exports=c.p+"assets/img/vuex_getters.6faddd84.jpg"},"8fd1":function(e,t,c){e.exports=c.p+"assets/img/store_state_default.a5f6bff5.jpg"},"90ec":function(e,t,c){e.exports=c.p+"assets/img/scss_nesting.be8ffe5d.jpg"},9523:function(e,t,c){e.exports=c.p+"assets/img/dom-manipulation-comparison.efd4f65d.jpg"},9976:function(e,t,c){e.exports=c.p+"assets/img/vue_template_style.393281c6.jpg"},"9f74":function(e,t,c){e.exports=c.p+"assets/img/import_component_default.df7d8409.jpg"},a15d:function(e,t,c){},a214:function(e,t,c){e.exports=c.p+"assets/img/router_before_router_leave.f17260d6.jpg"},aeb6:function(e,t,c){e.exports=c.p+"assets/img/router_before_each.65218c27.jpg"},b122:function(e,t,c){e.exports=c.p+"assets/img/router_packagejson.b876d983.jpg"},b140:function(e,t,c){e.exports=c.p+"assets/img/dist.2e949f65.jpg"},b481:function(e,t,c){e.exports=c.p+"assets/img/router_children.3fbc0552.jpg"},b588:function(e,t,c){e.exports=c.p+"assets/img/webpack.29e21ab7.jpg"},b74d:function(e,t,c){e.exports=c.p+"assets/img/v_if.5cef3ca1.jpg"},b89a:function(e,t,c){e.exports=c.p+"assets/img/script_base.76cdbe4d.jpg"},b8b0:function(e,t,c){e.exports=c.p+"assets/img/vue_template_data_computed.fe13b4ff.jpg"},ba01:function(e,t,c){e.exports=c.p+"assets/img/scss_variable.300e72a5.jpg"},bc11:function(e,t,c){e.exports=c.p+"assets/img/scss_default.b5c54766.jpg"},c0b5:function(e,t,c){e.exports=c.p+"assets/img/script_template.8efd7ea6.jpg"},ca2a:function(e,t,c){e.exports=c.p+"assets/img/import_mixin.5c782027.jpg"},cf05:function(e,t,c){e.exports=c.p+"assets/img/logo.82b9c7a5.png"},d12b:function(e,t,c){e.exports=c.p+"assets/img/script_props_default.0c5f50f1.jpg"},d1a5:function(e,t,c){e.exports=c.p+"assets/img/simple_index_html_body_tag.98f6d7b1.jpg"},d2b0:function(e,t,c){e.exports=c.p+"assets/img/plugin_detail.305d8359.jpg"},d3e2:function(e,t,c){},d4fa:function(e,t,c){"use strict";c("6554")},d68a:function(e,t,c){e.exports=c.p+"assets/img/scss_import.b02b2727.jpg"},de1a:function(e,t,c){"use strict";c("debc")},debc:function(e,t,c){},e197:function(e,t,c){e.exports=c.p+"assets/img/router_push.9c100034.jpg"},e211:function(e,t,c){e.exports=c.p+"assets/img/vuex_mutations.1f0e8eda.jpg"},e5c5:function(e,t,c){e.exports=c.p+"assets/img/vue_template_class.ca5dc442.jpg"},e5ee:function(e,t,c){e.exports=c.p+"assets/img/vue_lifecycle.602e7b24.jpg"},e699:function(e,t,c){e.exports=c.p+"assets/img/debug_tool.1a381c3d.jpg"},e8df:function(e,t,c){e.exports=c.p+"assets/img/axios_get.2a14ce46.jpg"},ea70:function(e,t,c){e.exports=c.p+"assets/img/script_method_base.5cd8baa8.jpg"},ecbe:function(e,t,c){e.exports=c.p+"assets/img/chain_file.75ba58f1.jpg"},ed27:function(e,t,c){e.exports=c.p+"assets/img/scss_default_base.e0500dc9.jpg"},f027:function(e,t,c){e.exports=c.p+"assets/img/html_css_js.d70fc4ee.jpg"},f187:function(e,t,c){e.exports=c.p+"assets/img/package_script.0c3041c9.jpg"},f3cc:function(e,t,c){e.exports=c.p+"assets/img/script_data_default.291e4c75.jpg"},f56e:function(e,t,c){e.exports=c.p+"assets/img/vue_template_colon.904d30d0.jpg"},f728:function(e,t,c){e.exports=c.p+"assets/img/v_if_false.11461524.jpg"},faf2:function(e,t,c){e.exports=c.p+"assets/img/axios_delete.51dc5ec5.jpg"},fb3e:function(e,t,c){"use strict";c("d3e2")}});
//# sourceMappingURL=build.65ec0a381c6430360716.js.map